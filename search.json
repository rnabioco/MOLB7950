[
  {
    "objectID": "exercises/ex-11.html",
    "href": "exercises/ex-11.html",
    "title": "Stats Bootcamp - class 11",
    "section": "",
    "text": "Learn types of variables\nCalculate and visualize summary statistics\nProperties of data distributions\nCentral limit theorem"
  },
  {
    "objectID": "exercises/ex-11.html#learning-objectives",
    "href": "exercises/ex-11.html#learning-objectives",
    "title": "Stats Bootcamp - class 11",
    "section": "",
    "text": "Learn types of variables\nCalculate and visualize summary statistics\nProperties of data distributions\nCentral limit theorem"
  },
  {
    "objectID": "exercises/ex-11.html#quantitative-variables",
    "href": "exercises/ex-11.html#quantitative-variables",
    "title": "Stats Bootcamp - class 11",
    "section": "Quantitative Variables",
    "text": "Quantitative Variables\nDiscrete variable: numeric variables that have a countable number of values between any two values - integer in R (e.g., number of mice, read counts).\nContinuous variable: numeric variables that have an infinite number of values between any two values - numeric in R (e.g., normalized expression values, fluorescent intensity)."
  },
  {
    "objectID": "exercises/ex-11.html#categorical-variables",
    "href": "exercises/ex-11.html#categorical-variables",
    "title": "Stats Bootcamp - class 11",
    "section": "Categorical Variables",
    "text": "Categorical Variables\nNominal variable: (unordered) random variables have categories where order doesn’t matter - factor in R (e.g., country, type of gene, genotype).\nOrdinal variable: (ordered) random variables have ordered categories - order of levels in R ( e.g. grade of tumor)."
  },
  {
    "objectID": "exercises/ex-11.html#distributions-and-probabilities",
    "href": "exercises/ex-11.html#distributions-and-probabilities",
    "title": "Stats Bootcamp - class 11",
    "section": "Distributions and probabilities",
    "text": "Distributions and probabilities\nA distribution in statistics is a function that shows the possible values for a variable and how often they occur.\nWe can visualize this with a histogram or density plots as we did earlier.\nWe are going to start with simulated data and then use Palmer Penguins later."
  },
  {
    "objectID": "exercises/ex-11.html#create-a-normal-distribution",
    "href": "exercises/ex-11.html#create-a-normal-distribution",
    "title": "Stats Bootcamp - class 11",
    "section": "Create a normal distribution",
    "text": "Create a normal distribution\nAssume that the test scores of a college entrance exam fits a normal distribution. Furthermore, the mean test score is 76, and the standard deviation is 13.8.\n\nd &lt;- tibble(n1=rnorm(n = ??, mean = ??, sd = ??))\n\nhead(d)"
  },
  {
    "objectID": "exercises/ex-11.html#visualize-a-normal-distribution",
    "href": "exercises/ex-11.html#visualize-a-normal-distribution",
    "title": "Stats Bootcamp - class 11",
    "section": "Visualize a normal distribution",
    "text": "Visualize a normal distribution\nfirst we will look at a histogram n1\n\nggplot(data = ??, \n       aes(x=??)\n       ) +\n  geom_??() +\n  theme_cowplot() \n\n\nnext a density plot\n\nggplot(data = d, \n       aes(x=n1)\n       ) +\n  geom_??() +\n  geom_vline(xintercept = ??) + # draw mean\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#determine-the-probability-of-a-given-value",
    "href": "exercises/ex-11.html#determine-the-probability-of-a-given-value",
    "title": "Stats Bootcamp - class 11",
    "section": "Determine the probability of a given value",
    "text": "Determine the probability of a given value\nProbability is used to estimate how probable a sample is based on a given distribution.\nProbability refers to the area under curve (AUC) on the distribution curve. The higher the value, the more probable that the data come from this distribution.\nWhat is the probability of students scoring 85 or more in the exam?\n\ns &lt;- 85\npnorm(??, mean=76, sd=13.8, lower.tail = F) \n\n. . .\nWhat is the probability of students scoring 85 or less in the exam?\n\npnorm(s, mean=76, sd=13.8, lower.tail = T) \n\n\nProb of 85 or more is equivalent to the area under the curve to the right of 85.\n\nggplot(data = d, \n       aes(x=n1)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = s) +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#determine-the-likelihood-of-a-given-value",
    "href": "exercises/ex-11.html#determine-the-likelihood-of-a-given-value",
    "title": "Stats Bootcamp - class 11",
    "section": "Determine the likelihood of a given value",
    "text": "Determine the likelihood of a given value\nLikelihood is used to estimate how good a model fits the data. Likelihood refers to a specific point on the distribution curve. The lower the likelihood, the worse the model fits the data.\nWhat is the likelihood of students scoring 85 on the exam?\n\nl &lt;- dnorm(s, mean=76, sd=13.8) \nl\n\n\nThe likelihood is the y-axis value on the curve when th x-axis = 85.\n\nggplot(data = d, \n       aes(x=n1)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = s) +\n  geom_hline(yintercept = l) +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#now-to-real-messy-data",
    "href": "exercises/ex-11.html#now-to-real-messy-data",
    "title": "Stats Bootcamp - class 11",
    "section": "Now to real (messy!) data",
    "text": "Now to real (messy!) data\nWe will use the Palmer Penguins dataset\n\npenguins_raw \n\n# A tibble: 344 × 17\n   studyName `Sample Number` Species         Region Island Stage `Individual ID`\n   &lt;chr&gt;               &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          \n 1 PAL0708                 1 Adelie Penguin… Anvers Torge… Adul… N1A1           \n 2 PAL0708                 2 Adelie Penguin… Anvers Torge… Adul… N1A2           \n 3 PAL0708                 3 Adelie Penguin… Anvers Torge… Adul… N2A1           \n 4 PAL0708                 4 Adelie Penguin… Anvers Torge… Adul… N2A2           \n 5 PAL0708                 5 Adelie Penguin… Anvers Torge… Adul… N3A1           \n 6 PAL0708                 6 Adelie Penguin… Anvers Torge… Adul… N3A2           \n 7 PAL0708                 7 Adelie Penguin… Anvers Torge… Adul… N4A1           \n 8 PAL0708                 8 Adelie Penguin… Anvers Torge… Adul… N4A2           \n 9 PAL0708                 9 Adelie Penguin… Anvers Torge… Adul… N5A1           \n10 PAL0708                10 Adelie Penguin… Anvers Torge… Adul… N5A2           \n# ℹ 334 more rows\n# ℹ 10 more variables: `Clutch Completion` &lt;chr&gt;, `Date Egg` &lt;date&gt;,\n#   `Culmen Length (mm)` &lt;dbl&gt;, `Culmen Depth (mm)` &lt;dbl&gt;,\n#   `Flipper Length (mm)` &lt;dbl&gt;, `Body Mass (g)` &lt;dbl&gt;, Sex &lt;chr&gt;,\n#   `Delta 15 N (o/oo)` &lt;dbl&gt;, `Delta 13 C (o/oo)` &lt;dbl&gt;, Comments &lt;chr&gt;\n\n\n. . .\nYikes! Some of these column names have horrible formatting e.g. spaces, slashes, parenthesis. These characters can be misinterpreted by R. Also, long/wonky names makes coding annoying."
  },
  {
    "objectID": "exercises/ex-11.html#lets-tidy-the-names",
    "href": "exercises/ex-11.html#lets-tidy-the-names",
    "title": "Stats Bootcamp - class 11",
    "section": "Let’s tidy the names",
    "text": "Let’s tidy the names\n\npenguins_raw |&gt; colnames()\n\n [1] \"studyName\"           \"Sample Number\"       \"Species\"            \n [4] \"Region\"              \"Island\"              \"Stage\"              \n [7] \"Individual ID\"       \"Clutch Completion\"   \"Date Egg\"           \n[10] \"Culmen Length (mm)\"  \"Culmen Depth (mm)\"   \"Flipper Length (mm)\"\n[13] \"Body Mass (g)\"       \"Sex\"                 \"Delta 15 N (o/oo)\"  \n[16] \"Delta 13 C (o/oo)\"   \"Comments\"           \n\n\n. . .\njanitor package to the rescue.\n. . .\n. . .\nCreate a new object pen that has nice clean variable names. And get rid of any variable that is the same for all observations (not useful).\n\npen &lt;- penguins_raw |&gt;\n  clean_names() |&gt;\n  janitor::remove_constant()"
  },
  {
    "objectID": "exercises/ex-11.html#lets-inspect-the-data",
    "href": "exercises/ex-11.html#lets-inspect-the-data",
    "title": "Stats Bootcamp - class 11",
    "section": "Let’s inspect the data",
    "text": "Let’s inspect the data\n\npen |&gt;\n  str()\n\ntibble [344 × 15] (S3: tbl_df/tbl/data.frame)\n $ study_name       : chr [1:344] \"PAL0708\" \"PAL0708\" \"PAL0708\" \"PAL0708\" ...\n $ sample_number    : num [1:344] 1 2 3 4 5 6 7 8 9 10 ...\n $ species          : chr [1:344] \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" \"Adelie Penguin (Pygoscelis adeliae)\" ...\n $ island           : chr [1:344] \"Torgersen\" \"Torgersen\" \"Torgersen\" \"Torgersen\" ...\n $ individual_id    : chr [1:344] \"N1A1\" \"N1A2\" \"N2A1\" \"N2A2\" ...\n $ clutch_completion: chr [1:344] \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ date_egg         : Date[1:344], format: \"2007-11-11\" \"2007-11-11\" ...\n $ culmen_length_mm : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ...\n $ culmen_depth_mm  : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ...\n $ flipper_length_mm: num [1:344] 181 186 195 NA 193 190 181 195 193 190 ...\n $ body_mass_g      : num [1:344] 3750 3800 3250 NA 3450 ...\n $ sex              : chr [1:344] \"MALE\" \"FEMALE\" \"FEMALE\" NA ...\n $ delta_15_n_o_oo  : num [1:344] NA 8.95 8.37 NA 8.77 ...\n $ delta_13_c_o_oo  : num [1:344] NA -24.7 -25.3 NA -25.3 ...\n $ comments         : chr [1:344] \"Not enough blood for isotopes.\" NA NA \"Adult not sampled.\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   studyName = col_character(),\n  ..   `Sample Number` = col_double(),\n  ..   Species = col_character(),\n  ..   Region = col_character(),\n  ..   Island = col_character(),\n  ..   Stage = col_character(),\n  ..   `Individual ID` = col_character(),\n  ..   `Clutch Completion` = col_character(),\n  ..   `Date Egg` = col_date(format = \"\"),\n  ..   `Culmen Length (mm)` = col_double(),\n  ..   `Culmen Depth (mm)` = col_double(),\n  ..   `Flipper Length (mm)` = col_double(),\n  ..   `Body Mass (g)` = col_double(),\n  ..   Sex = col_character(),\n  ..   `Delta 15 N (o/oo)` = col_double(),\n  ..   `Delta 13 C (o/oo)` = col_double(),\n  ..   Comments = col_character()\n  .. )\n\n\n\nLet’s select a few of these columns to keep and get rid of NAs\n\np &lt;- pen |&gt; \n  select(species, island, culmen_length_mm, flipper_length_mm, body_mass_g, sex) |&gt; \n  drop_na()\n\n. . .\nclean species names\n\nunique(p$species)\n\n[1] \"Adelie Penguin (Pygoscelis adeliae)\"      \n[2] \"Gentoo penguin (Pygoscelis papua)\"        \n[3] \"Chinstrap penguin (Pygoscelis antarctica)\"\n\np &lt;- p |&gt;\n  mutate(species = str_remove(species, pattern = \" [P|p]en.*\")\n         )"
  },
  {
    "objectID": "exercises/ex-11.html#visualizing-quantitative-variables",
    "href": "exercises/ex-11.html#visualizing-quantitative-variables",
    "title": "Stats Bootcamp - class 11",
    "section": "Visualizing quantitative variables",
    "text": "Visualizing quantitative variables\nhistogram of body mass\n\nggplot(data = ??, \n       aes(x=??)\n       ) +\n  geom_histogram() +\n  theme_cowplot()\n\n\ndensity plot of body mass\n\nggplot(data = p, \n       aes(x=body_mass_g)\n       ) +\n  geom_??() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#visualizing-categorical-variables",
    "href": "exercises/ex-11.html#visualizing-categorical-variables",
    "title": "Stats Bootcamp - class 11",
    "section": "Visualizing categorical variables",
    "text": "Visualizing categorical variables\nbarplot - 1 category\n\nggplot(data = p, aes(x = island, fill = island)) +\n    geom_bar() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#barplot---categories-island-vs-sex",
    "href": "exercises/ex-11.html#barplot---categories-island-vs-sex",
    "title": "Stats Bootcamp - class 11",
    "section": "barplot - categories (island vs sex)",
    "text": "barplot - categories (island vs sex)\nstacked:\n\nggplot(data = p, aes(x = island, fill = sex)) +\n  geom_bar() +\n  theme_cowplot()\n\n\n\n\n\n\n\n\nproportion\n\nggplot(data = p, aes(x = island, fill = sex)) +\n  geom_bar(position = \"fill\") +\n  theme_cowplot()\n\n\n\n\n\n\n\n\nper category\n\nggplot(data = p, aes(x = island, fill = sex)) +\n  geom_bar(position = \"dodge\") +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#descriptive-statistics-for-continuous-data",
    "href": "exercises/ex-11.html#descriptive-statistics-for-continuous-data",
    "title": "Stats Bootcamp - class 11",
    "section": "Descriptive statistics for continuous data",
    "text": "Descriptive statistics for continuous data\n\nn: # observations/individuals or sample size\nmean (\\(\\mu\\)): sum of all observations divided by # of observations, \\(\\mu = \\displaystyle \\frac {\\sum x_i} {n}\\)\n\nmedian: the “middle” value of a data set. Not as sensitive to outliers as the mean."
  },
  {
    "objectID": "exercises/ex-11.html#descriptive-statistics-for-body-weight",
    "href": "exercises/ex-11.html#descriptive-statistics-for-body-weight",
    "title": "Stats Bootcamp - class 11",
    "section": "Descriptive statistics for body weight",
    "text": "Descriptive statistics for body weight\nLet’s look at the distribution again\n\nggplot(data = p, \n       aes(x=body_mass_g)\n       ) +\n  geom_density() +\n  theme_cowplot()\n\n\n\n\n\n\n\n. . .\nn\n\nlength(p$body_mass_g)\n\n[1] 333\n\n\n. . .\nmean\n\nmean(p$body_mass_g)\n\n[1] 4207.057\n\n\n. . .\nmedian\n\nmedian(p$body_mass_g)\n\n[1] 4050\n\n\n\nviz mean + median\n\nggplot(data = p, \n       aes(x=body_mass_g)\n       ) +\n  geom_density() +\n#  geom_vline() +\n#  geom_vline() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#other-descriptive-statistics",
    "href": "exercises/ex-11.html#other-descriptive-statistics",
    "title": "Stats Bootcamp - class 11",
    "section": "Other descriptive statistics",
    "text": "Other descriptive statistics\nMin: minimum value.\nMax: maximum value.\nq1, q3: the first and the third quartile, respectively.\nIQR: interquartile range measures the spread of the middle half of your data (q3-q1).\nQuick way to get all these stats:\n\np |&gt;\n  get_summary_stats(body_mass_g, type = \"common\")\n\n# A tibble: 1 × 10\n  variable        n   min   max median   iqr  mean    sd    se    ci\n  &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 body_mass_g   333  2700  6300   4050  1225 4207.  805.  44.1  86.8\n\n\n. . . get mean, median\n\np |&gt;\n  get_summary_stats(body_mass_g,\n                    show = c(\"??\",\"??\")\n                    )"
  },
  {
    "objectID": "exercises/ex-11.html#statistics-describing-spread-of-values",
    "href": "exercises/ex-11.html#statistics-describing-spread-of-values",
    "title": "Stats Bootcamp - class 11",
    "section": "Statistics describing spread of values",
    "text": "Statistics describing spread of values\nVariance: the average of the squared differences from the mean\n\\(\\sigma^2 = \\displaystyle \\frac {\\sum (x_{i} - \\mu)^2}{n}\\)\nStandard Deviation: square root of the variance\n\\(\\sigma = \\sqrt {\\displaystyle \\frac {\\sum (x_{i} - \\mu)^2}{n}}\\)\n\nThe variance measures the mathematical dispersion of the data relative to the mean. However, it is more difficult to apply in a real-world sense because the values used to calculate it were squared. \n\nThe standard deviation, as the square root of the variance, is in the same units as the original values, which makes it much easier to work with and interpret w/respect to the mean."
  },
  {
    "objectID": "exercises/ex-11.html#other-stats-describing-spread-of-data",
    "href": "exercises/ex-11.html#other-stats-describing-spread-of-data",
    "title": "Stats Bootcamp - class 11",
    "section": "Other stats describing spread of data",
    "text": "Other stats describing spread of data\nConfidence Interval (ci): a range of values that you can be 95% (or x%) certain contains the true population mean. Gets into inferential statistics."
  },
  {
    "objectID": "exercises/ex-11.html#get-more-descriptive-stats-easily",
    "href": "exercises/ex-11.html#get-more-descriptive-stats-easily",
    "title": "Stats Bootcamp - class 11",
    "section": "Get more descriptive stats easily",
    "text": "Get more descriptive stats easily\n\np |&gt;\n  get_summary_stats(body_mass_g, show = c(\"mean\",\"median\",\"sd\")) \n\n# A tibble: 1 × 5\n  variable        n  mean median    sd\n  &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 body_mass_g   333 4207.   4050  805.\n\n\n. . .\nby species\n\np |&gt;\n  group_by(species) |&gt;\n  get_summary_stats(body_mass_g, show = c(\"mean\",\"median\",\"sd\"))\n\n# A tibble: 3 × 6\n  species   variable        n  mean median    sd\n  &lt;chr&gt;     &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 Adelie    body_mass_g   146 3706.   3700  459.\n2 Chinstrap body_mass_g    68 3733.   3700  384.\n3 Gentoo    body_mass_g   119 5092.   5050  501.\n\n\n\nby species and island\n\np |&gt;\n  group_by(species,island) |&gt;\n  get_summary_stats(body_mass_g, show = c(\"mean\",\"median\",\"sd\")) \n\n# A tibble: 5 × 7\n  species   island    variable        n  mean median    sd\n  &lt;chr&gt;     &lt;chr&gt;     &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;\n1 Adelie    Biscoe    body_mass_g    44 3710.   3750  488.\n2 Adelie    Dream     body_mass_g    55 3701.   3600  449.\n3 Adelie    Torgersen body_mass_g    47 3709.   3700  452.\n4 Chinstrap Dream     body_mass_g    68 3733.   3700  384.\n5 Gentoo    Biscoe    body_mass_g   119 5092.   5050  501."
  },
  {
    "objectID": "exercises/ex-11.html#normal-distribution",
    "href": "exercises/ex-11.html#normal-distribution",
    "title": "Stats Bootcamp - class 11",
    "section": "Normal distribution",
    "text": "Normal distribution\nThe mean, mode, and median are all equal.\nThe distribution is symmetric about the mean—half the values fall below the mean and half above the mean.\nThe distribution can be described by two values: the mean and the standard deviation."
  },
  {
    "objectID": "exercises/ex-11.html#bell-curve-or-standard-normal",
    "href": "exercises/ex-11.html#bell-curve-or-standard-normal",
    "title": "Stats Bootcamp - class 11",
    "section": "Bell curve or standard normal:",
    "text": "Bell curve or standard normal:\nIs a special normal distribution where the mean is 0 and the standard deviation is 1."
  },
  {
    "objectID": "exercises/ex-11.html#normal-distribution-metrics",
    "href": "exercises/ex-11.html#normal-distribution-metrics",
    "title": "Stats Bootcamp - class 11",
    "section": "Normal distribution metrics",
    "text": "Normal distribution metrics\nSkewness is a measure of the asymmetry around the mean. 0 for bell curve."
  },
  {
    "objectID": "exercises/ex-11.html#normal-distribution-metrics-1",
    "href": "exercises/ex-11.html#normal-distribution-metrics-1",
    "title": "Stats Bootcamp - class 11",
    "section": "Normal distribution metrics",
    "text": "Normal distribution metrics\nKurtosis is a measure of the “flatness” of the distribution."
  },
  {
    "objectID": "exercises/ex-11.html#is-my-data-normally-distributed",
    "href": "exercises/ex-11.html#is-my-data-normally-distributed",
    "title": "Stats Bootcamp - class 11",
    "section": "Is my data normal(ly distributed)?",
    "text": "Is my data normal(ly distributed)?\nLet’s look at the test score distribution again\n\nggplot(data = d,\n       aes(x = n1)) +\n  geom_density() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#qq-plot",
    "href": "exercises/ex-11.html#qq-plot",
    "title": "Stats Bootcamp - class 11",
    "section": "QQ-plot",
    "text": "QQ-plot\nquantile-quantile plot to compare an empirical distribution to a theoretical distribution.\nQuantile is the fraction (or percent) of points below the given value. For example, the 0.2 (or 20%) quantile is the point at which 20% percent of the data fall below and 80% fall above that value.\n\nggplot(data = d,\n       aes(sample = n1)) +\n  geom_qq() +\n  geom_qq_line() + \n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#shapiro-wilk-normality-test",
    "href": "exercises/ex-11.html#shapiro-wilk-normality-test",
    "title": "Stats Bootcamp - class 11",
    "section": "Shapiro-Wilk Normality Test",
    "text": "Shapiro-Wilk Normality Test\nShapiro-Wilk test is a hypothesis test that evaluates whether a data set is normally distributed. /\nIt evaluates data from a sample with the null hypothesis that the data set is normally distributed. /\nA large p-value indicates the data set is normally distributed, a low p-value indicates that it isn’t normally distributed.\n\nd |&gt;\n  shapiro_test(n1)"
  },
  {
    "objectID": "exercises/ex-11.html#back-to-penguin-body-mass",
    "href": "exercises/ex-11.html#back-to-penguin-body-mass",
    "title": "Stats Bootcamp - class 11",
    "section": "Back to penguin body mass",
    "text": "Back to penguin body mass\nDistribution\n\nggplot(data = p,\n       aes(x = body_mass_g)) +\n  geom_density() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#qq-plot-body-mass",
    "href": "exercises/ex-11.html#qq-plot-body-mass",
    "title": "Stats Bootcamp - class 11",
    "section": "QQ-plot body mass",
    "text": "QQ-plot body mass\n\nggplot(data = p,\n       aes(sample = body_mass_g)) +\n  geom_qq() +\n  geom_qq_line() + \n  theme_cowplot()\n\n\n\n\n\n\n\nHmmm…"
  },
  {
    "objectID": "exercises/ex-11.html#shapiro-wilk-body-mass",
    "href": "exercises/ex-11.html#shapiro-wilk-body-mass",
    "title": "Stats Bootcamp - class 11",
    "section": "Shapiro-Wilk body mass",
    "text": "Shapiro-Wilk body mass\n\np |&gt;\n  shapiro_test(??)  \n\nThat does not look normal!"
  },
  {
    "objectID": "exercises/ex-11.html#penguin-body-mass-by-species",
    "href": "exercises/ex-11.html#penguin-body-mass-by-species",
    "title": "Stats Bootcamp - class 11",
    "section": "Penguin body mass by species?",
    "text": "Penguin body mass by species?\nDistribution\n\nggplot(data = p,\n       aes(x = body_mass_g, color = species)) +\n  geom_density() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#qq-plot-body-weight",
    "href": "exercises/ex-11.html#qq-plot-body-weight",
    "title": "Stats Bootcamp - class 11",
    "section": "QQ-plot body weight",
    "text": "QQ-plot body weight\n\nggplot(data = p,\n       aes(sample = body_mass_g, color = species)) +\n  geom_qq() +\n  geom_qq_line() + \n  theme_cowplot()\n\n\n\n\n\n\n\nThat looks better…"
  },
  {
    "objectID": "exercises/ex-11.html#shapiro-wilk-body-weight-by-species",
    "href": "exercises/ex-11.html#shapiro-wilk-body-weight-by-species",
    "title": "Stats Bootcamp - class 11",
    "section": "Shapiro-Wilk body weight by species",
    "text": "Shapiro-Wilk body weight by species\n\np |&gt;\n  group_by(??) |&gt;\n  shapiro_test(??)  \n\nOk so Chinstrap and Gentoo look normal. Not sure about Adelie. We may want to consider using non-parametric test to compare mean body weights between Adelie vs Chinstrap or Gentoo."
  },
  {
    "objectID": "exercises/ex-11.html#central-limit-theorem",
    "href": "exercises/ex-11.html#central-limit-theorem",
    "title": "Stats Bootcamp - class 11",
    "section": "Central limit theorem",
    "text": "Central limit theorem\nThe central limit theorem states that if you take sufficiently large samples from a population, the samples’ means will be normally distributed, even if the population isn’t normally distributed.\nBack to coin flips!! 50 flips, one round.\n\nn &lt;- 50\n\n# make a hundred fair and unfair flips\nf &lt;- tibble(fair=rbinom(n = n, size = 1, prob = .5),\n       unfair=rbinom(n = n, size = 1, prob = .2)) |&gt; \n    pivot_longer(cols = c(\"fair\",\"unfair\"), names_to = \"cheating\", values_to = \"flips\")"
  },
  {
    "objectID": "exercises/ex-11.html#flip-distributions",
    "href": "exercises/ex-11.html#flip-distributions",
    "title": "Stats Bootcamp - class 11",
    "section": "flip distributions",
    "text": "flip distributions\nLook at the distribution of fair flips\n\nggplot(data = f |&gt; filter(cheating==\"fair\"), \n       aes(x=flips)\n       ) +\n  geom_histogram() +\n  theme_cowplot()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nLook at the distribution of unfair flips\n\nggplot(data = f |&gt; filter(cheating==\"unfair\"), \n       aes(x=flips)\n       ) +\n  geom_histogram() +\n  theme_cowplot()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "exercises/ex-11.html#now-lets-sample-means",
    "href": "exercises/ex-11.html#now-lets-sample-means",
    "title": "Stats Bootcamp - class 11",
    "section": "Now lets sample means",
    "text": "Now lets sample means\nlet’s do 100 round of 50 flips and take the average of each round.\nremember the size that i told you to ignore last class!\n\nr &lt;- 100\n\nrbinom(n = n, size = r, prob = .5)/r\n\n [1] 0.45 0.57 0.44 0.40 0.54 0.56 0.55 0.48 0.56 0.42 0.49 0.47 0.55 0.49 0.41\n[16] 0.47 0.48 0.55 0.57 0.40 0.48 0.53 0.48 0.48 0.54 0.57 0.53 0.51 0.44 0.45\n[31] 0.51 0.51 0.53 0.47 0.49 0.43 0.53 0.54 0.54 0.63 0.41 0.61 0.51 0.45 0.46\n[46] 0.55 0.45 0.54 0.47 0.49\n\n\n\nfmean &lt;- tibble(\n  fair=rbinom(n = n, size = r, prob = .5)/r,\n  unfair=rbinom(n = n, size = r, prob = .2)/r) |&gt;\n  pivot_longer(cols = c(\"fair\",\"unfair\"),\n               names_to = \"cheating\",\n               values_to = \"flips\"\n               )"
  },
  {
    "objectID": "exercises/ex-11.html#sampled-flip-mean-distributions",
    "href": "exercises/ex-11.html#sampled-flip-mean-distributions",
    "title": "Stats Bootcamp - class 11",
    "section": "sampled flip mean distributions",
    "text": "sampled flip mean distributions\nLook at the distribution of fair flips\n\nggplot(data = fmean |&gt; filter(cheating==\"fair\"), \n       aes(x=flips)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = .5) +\n  xlim(0,1) +\n  theme_cowplot()\n\n\n\n\n\n\n\nLook at the distribution of unfair flips\n\nggplot(data = fmean |&gt; filter(cheating==\"unfair\"), \n       aes(x=flips)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = .2) + \n  xlim(0,1) +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-11.html#but-is-it-normal",
    "href": "exercises/ex-11.html#but-is-it-normal",
    "title": "Stats Bootcamp - class 11",
    "section": "but is it normal?",
    "text": "but is it normal?\n\nfmean |&gt;\n  group_by(cheating) |&gt;\n  shapiro_test(flips)\n\n# A tibble: 2 × 4\n  cheating variable statistic      p\n  &lt;chr&gt;    &lt;chr&gt;        &lt;dbl&gt;  &lt;dbl&gt;\n1 fair     flips        0.961 0.0949\n2 unfair   flips        0.960 0.0882\n\n\nyup!"
  },
  {
    "objectID": "exercises/ex-11.html#what-about-the-mean-sd-with-different-parameters",
    "href": "exercises/ex-11.html#what-about-the-mean-sd-with-different-parameters",
    "title": "Stats Bootcamp - class 11",
    "section": "What about the mean + sd with different parameters?",
    "text": "What about the mean + sd with different parameters?\n10 fair and unfair flips\n20 and 80 times\n\nfair10 &lt;- tibble(\n  r20=rbinom(n = 10, size = 20, prob = .5)/20,\n  r80=rbinom(n = 10, size = 80, prob = .5)/80,\n  type=rep(\"fair10\")\n  )\n\n\nunfair10 &lt;- tibble(\n  r20=rbinom(n = 10, size = 20, prob = .2)/20,\n  r80=rbinom(n = 10, size = 80, prob = .2)/80,\n  type=rep(\"unfair10\")\n  )\n\n\nput it all together\n\nall &lt;- bind_rows(fair10, unfair10) |&gt;\n  pivot_longer(cols = c(\"r20\",\"r80\"),\n             names_to = \"r\",\n             values_to = \"f\"\n             )"
  },
  {
    "objectID": "exercises/ex-11.html#visualize",
    "href": "exercises/ex-11.html#visualize",
    "title": "Stats Bootcamp - class 11",
    "section": "Visualize",
    "text": "Visualize\n\nggplot(all , aes(x=r, y=f, color=r)) +\n  geom_jitter() +\n  stat_summary(fun.y=mean, geom=\"point\", shape=18,\n                 size=3, color=\"black\") +\n  ylim(-0.05,1.05) +\n   facet_grid(~type) +\n  geom_hline(yintercept = .5, linetype = \"dashed\") +\n  geom_hline(yintercept = .2, linetype = \"dashed\") +\n  theme_cowplot()\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\n\n. . .\n\nall |&gt; \n  group_by(type,r) |&gt;\n  get_summary_stats(show = c(\"mean\",\"sd\"))\n\n# A tibble: 4 × 6\n  type     r     variable     n  mean    sd\n  &lt;chr&gt;    &lt;chr&gt; &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 fair10   r20   f           10 0.535 0.1  \n2 fair10   r80   f           10 0.527 0.059\n3 unfair10 r20   f           10 0.205 0.09 \n4 unfair10 r80   f           10 0.206 0.049"
  },
  {
    "objectID": "exercises/ex-11.html#references",
    "href": "exercises/ex-11.html#references",
    "title": "Stats Bootcamp - class 11",
    "section": "References",
    "text": "References\n\nThe Normal Distribution, Confidence Intervals, and Their Deceptive Simplicity\nCentral limit theorem\nHistograms, Clearly Explained\nThe Main Ideas behind Probability Distributions\nThe Normal Distribution, Clearly Explained!!!\nProbability vs Likelihood"
  },
  {
    "objectID": "exercises/ex-12.html",
    "href": "exercises/ex-12.html",
    "title": "Stats Bootcamp - class 12",
    "section": "",
    "text": "We are going to use ggpubr rather than ggplot2 - Don’t tell Jay ;)\n\n\nIt has great visualization for the stats on the plots.\nDifferent syntax!!\n\nmust use double quotes around “variable names”\n\n\n\n\nDue to reviewer #3, we will pivot to a more “physiologically relevant” data set biochem that consists of mouse measurements.\n\n. . ."
  },
  {
    "objectID": "exercises/ex-12.html#two-changes",
    "href": "exercises/ex-12.html#two-changes",
    "title": "Stats Bootcamp - class 12",
    "section": "",
    "text": "We are going to use ggpubr rather than ggplot2 - Don’t tell Jay ;)\n\n\nIt has great visualization for the stats on the plots.\nDifferent syntax!!\n\nmust use double quotes around “variable names”\n\n\n\n\nDue to reviewer #3, we will pivot to a more “physiologically relevant” data set biochem that consists of mouse measurements.\n\n. . ."
  },
  {
    "objectID": "exercises/ex-12.html#prepare-mouse-biochem-data",
    "href": "exercises/ex-12.html#prepare-mouse-biochem-data",
    "title": "Stats Bootcamp - class 12",
    "section": "Prepare mouse biochem data",
    "text": "Prepare mouse biochem data\n\n# we are reading the data directly from the internet\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1,6,9,14,15,24:28)]\nbiochem &lt;- biochem[,keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\",\"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb &lt;- inner_join(biochem, weight, by=\"subject_name\") |&gt; \n  na.omit() |&gt;\n  rename(sex=gender)"
  },
  {
    "objectID": "exercises/ex-12.html#compare-mean-of-a-variable-to-a-known-value",
    "href": "exercises/ex-12.html#compare-mean-of-a-variable-to-a-known-value",
    "title": "Stats Bootcamp - class 12",
    "section": "Compare mean of a variable to a known value",
    "text": "Compare mean of a variable to a known value\n\\(y\\) is independent of \\(x\\)\n\\(y\\) is continuous\n\\(x\\) is constant\nParametric: One-sample t-test\nt_test(y ~ 1, mu = x)\nNonparametric: Wilcoxon signed-rank\nwilcox_test(y ~ 1, mu = x)\n\nExamine and specify the variable(s)\nDeclare null hypothesis \\(\\mathcal{H}_0\\)\n\nCalculate test-statistic, exact p-value\n\nThink did the expression of my gene change…"
  },
  {
    "objectID": "exercises/ex-12.html#examine-and-specify-the-variables",
    "href": "exercises/ex-12.html#examine-and-specify-the-variables",
    "title": "Stats Bootcamp - class 12",
    "section": "1. Examine and specify the variable(s)",
    "text": "1. Examine and specify the variable(s)\nLet’s explore mouse \\(weight\\)\n\nggdensity(\n  data = b,\n  x = \"??\",\n  add = \"mean\",\n  rug = TRUE\n  )\n\n. . .\nlet’s see some summary stats\n\nb |&gt; \n  get_summary_stats(\n    ??,\n    type = \"common\",\n    show = c(\"mean\",\"median\",\"sd\")\n    )"
  },
  {
    "objectID": "exercises/ex-12.html#is-it-normally-distributed",
    "href": "exercises/ex-12.html#is-it-normally-distributed",
    "title": "Stats Bootcamp - class 12",
    "section": "Is it normally distributed?",
    "text": "Is it normally distributed?\n\nggqqplot(\n  data = b,\n  x = \"??\"\n  )\n\nLooks reasonable\n. . .\n\nb |&gt; \n  ??_test(weight)\n\nYikes!\nNo easy answers…gotta make a call. We’ll try both."
  },
  {
    "objectID": "exercises/ex-12.html#declare-null-hypothesis-mathcalh_0",
    "href": "exercises/ex-12.html#declare-null-hypothesis-mathcalh_0",
    "title": "Stats Bootcamp - class 12",
    "section": "2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n",
    "text": "2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n\nSince this is a one-way test, we don’t need to worry if the groups have equal variance (only 1 group). But, we need a standard to compare against. I asked google, how much does a mouse weigh in grams?\nAnswer: 20-35 g, I’m going with \\(27.5 g\\) as our standard.\n\n\\(\\mathcal{H}_0\\) is that the mean of mouse \\(weight\\) can be explained by \\(27.5\\)\n\n\\(weight\\) is the response variable\n\\(27.5\\) is the explanatory variable"
  },
  {
    "objectID": "exercises/ex-12.html#calculate-test-statistic-exact-p-value",
    "href": "exercises/ex-12.html#calculate-test-statistic-exact-p-value",
    "title": "Stats Bootcamp - class 12",
    "section": "3. Calculate test-statistic, exact p-value",
    "text": "3. Calculate test-statistic, exact p-value\nNonparametric test:\n\nx &lt;- 27.5 # standard from google\n\nb |&gt;\n  ??_test(weight ~ 1, mu = ??) |&gt;\n  gt()\n\n. . .\nParametric test:\n\nx &lt;- 27.5 # standard from google\n\nb |&gt;\n  ??_test(weight ~ 1, mu = ??) |&gt;\n  gt()\n\n. . .\nP values are well below 0.05\n\n\\(\\mathcal{H}_0\\) is that the mean of mouse \\(weight\\) can be explained by \\(27.5\\) is NOT WELL SUPPORTED\n\nSo \\(27.5 g\\) not able to describe weight\nNot surprising since our mean mouse weight is 20.2. Don’t believe everything you read on the internet."
  },
  {
    "objectID": "exercises/ex-12.html#compare-mean-of-two-groups",
    "href": "exercises/ex-12.html#compare-mean-of-two-groups",
    "title": "Stats Bootcamp - class 12",
    "section": "Compare mean of two groups",
    "text": "Compare mean of two groups\n\\(y\\) is independent of \\(x\\)\n\\(y\\) is continuous\n\\(x\\) is categorical with 2 groups (factor w/2 levels)\nParametric: Student’s t-test\nt_test(y ~ x) more here\nneed to pay attention to: var.equal paired\nNonparametric: Wilcoxon signed-rank\nwilcox_test(y ~ x) more here\nneed to pay attention to: paired\n\nExamine and specify the variable(s)\nDeclare null hypothesis \\(\\mathcal{H}_0\\)\n\nCalculate test-statistic, exact p-value"
  },
  {
    "objectID": "exercises/ex-12.html#tangent-on-students-t-test",
    "href": "exercises/ex-12.html#tangent-on-students-t-test",
    "title": "Stats Bootcamp - class 12",
    "section": "Tangent on Student’s t-test",
    "text": "Tangent on Student’s t-test\nThe T-Distribution, also known as Student’s t-distribution, gets its name from William Sealy Gosset who first published it in English in 1908 in the scientific journal Biometrika using his pseudonym “Student” because his employer preferred staff to use pen names when publishing scientific papers instead of their real name, so he used the name “Student” to hide his identity."
  },
  {
    "objectID": "exercises/ex-12.html#guinness-brewery-in-dublin",
    "href": "exercises/ex-12.html#guinness-brewery-in-dublin",
    "title": "Stats Bootcamp - class 12",
    "section": "Guinness Brewery in Dublin",
    "text": "Guinness Brewery in Dublin"
  },
  {
    "objectID": "exercises/ex-12.html#examine-and-specify-the-variables-1",
    "href": "exercises/ex-12.html#examine-and-specify-the-variables-1",
    "title": "Stats Bootcamp - class 12",
    "section": "1. Examine and specify the variable(s)",
    "text": "1. Examine and specify the variable(s)\nWe will compare mouse \\(weight\\) by \\(sex\\).\n\\(weight\\) is the response variable\n\\(sex\\) is the explanatory variable\n\\(y\\) ~ \\(x\\)\n\\(weight\\) ~ \\(sex\\)\n\nggdensity(\n  data = b,\n  color = \"sex\",\n  x = \"weight\",\n  add = \"mean\",\n  rug = TRUE\n  )\n\n\nI want the response variable on the \\(y\\) axis and the explanatory variable on the \\(x\\) axis.\nViolin plot\n\nggviolin(\n  data = b,\n  y = \"??\",\n  x = \"??\",\n  fill = \"??\",\n  add = \"mean_sd\"\n  )\n\n. . .\n\nb |&gt; \n  group_by(??) |&gt;\n  get_summary_stats(\n    ??,\n    type = \"common\",\n    show = c(\"mean\",\"median\",\"sd\")\n    )"
  },
  {
    "objectID": "exercises/ex-12.html#is-it-normally-distributed-1",
    "href": "exercises/ex-12.html#is-it-normally-distributed-1",
    "title": "Stats Bootcamp - class 12",
    "section": "Is it normally distributed?",
    "text": "Is it normally distributed?\n\nggqqplot(\n  data = b,\n  x = \"??\",\n  color = \"??\"\n  )\n\n. . .\n\nb |&gt; \n  group_by(sex) |&gt;\n  ??_test(weight) |&gt;\n  gt()\n\nLooks reasonable"
  },
  {
    "objectID": "exercises/ex-12.html#equal-variance",
    "href": "exercises/ex-12.html#equal-variance",
    "title": "Stats Bootcamp - class 12",
    "section": "Equal variance?",
    "text": "Equal variance?\n\nb |&gt; \n  ??_test(weight~sex) |&gt;\n  gt()\n\nOK - so we can use t-test, but variance is not equal."
  },
  {
    "objectID": "exercises/ex-12.html#declare-null-hypothesis-mathcalh_0-1",
    "href": "exercises/ex-12.html#declare-null-hypothesis-mathcalh_0-1",
    "title": "Stats Bootcamp - class 12",
    "section": "2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n",
    "text": "2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n\n\n\\(\\mathcal{H}_0\\) is that \\(sex\\) cannot explain \\(weight\\)"
  },
  {
    "objectID": "exercises/ex-12.html#calculate-test-statistic-exact-p-value-1",
    "href": "exercises/ex-12.html#calculate-test-statistic-exact-p-value-1",
    "title": "Stats Bootcamp - class 12",
    "section": "3. Calculate test-statistic, exact p-value",
    "text": "3. Calculate test-statistic, exact p-value\nNonparametric test:\n\nb |&gt;\n  ??_test(?? ~ ??, ref.group = \"F\") |&gt;\n  gt()\n\n. . .\nParametric test:\n\nx &lt;- 27.5 # standard from google\n\nb |&gt;\n  ??_test(weight ~ sex,\n         var.equal = ??,\n         ref.group = \"F\") |&gt;\n  gt()\n\n. . .\nP values are well below 0.05\n\n\\(\\mathcal{H}_0\\) is that \\(sex\\) cannot explain \\(weight\\) is NOT WELL SUPPORTED\n\n\\(sex\\) can explain \\(weight\\)"
  },
  {
    "objectID": "exercises/ex-12.html#visualize-the-result",
    "href": "exercises/ex-12.html#visualize-the-result",
    "title": "Stats Bootcamp - class 12",
    "section": "Visualize the result",
    "text": "Visualize the result\n\n# save statistical test result\nstatres &lt;- b |&gt;\n  t_test(weight ~ sex,\n         var.equal = F, \n         ref.group = \"F\")\n\n\nggviolin(\n  data = b,\n  y = \"weight\",\n  x = \"sex\",\n  fill = \"sex\",\n  add = \"mean_sd\"\n  ) +\n  stat_pvalue_manual(\n    ??,\n    label = \"p\",\n    y.position = 34 \n    ) +\n  ylim(10,35)"
  },
  {
    "objectID": "exercises/ex-12.html#compare-means-of-three-or-more-groups",
    "href": "exercises/ex-12.html#compare-means-of-three-or-more-groups",
    "title": "Stats Bootcamp - class 12",
    "section": "Compare means of three or more groups",
    "text": "Compare means of three or more groups\n\\(y\\) is independent of \\(x\\)\n\\(y\\) is continuous\n\\(x\\) is 2 or more groups of categorical data\nParametric: ANOVA\nanova_test(y ~ group) more info\nNonparametric: Kruskal-Wallis test\nkruskal_test(y ~ group) more info\n\nExamine and specify the variable(s)\nDeclare null hypothesis \\(\\mathcal{H}_0\\)\n\nCalculate test-statistic, exact p-value"
  },
  {
    "objectID": "exercises/ex-12.html#examine-and-specify-the-variables-2",
    "href": "exercises/ex-12.html#examine-and-specify-the-variables-2",
    "title": "Stats Bootcamp - class 12",
    "section": "1. Examine and specify the variable(s)",
    "text": "1. Examine and specify the variable(s)\nWe will compare mouse \\(weight\\) by \\(family\\).\n\\(weight\\) is the response variable\n\\(family\\) is the explanatory variable\n\\(y\\) ~ \\(x\\)\n\\(weight\\) ~ \\(family\\)\n\n# i have pre-selected some families to compare\nmyfams &lt;- c(\"B1.5:E1.4(4) B1.5:A1.4(5)\",\n            \"F1.3:A1.2(3) F1.3:E2.2(3)\",\n            \"A1.3:D1.2(3) A1.3:H1.2(3)\",\n            \"D5.4:G2.3(4) D5.4:C4.3(4)\")\n\n# only keep the familys in myfams\nbfam &lt;- b |&gt;\n  filter(family %in% myfams) |&gt;\n  droplevels() \n\n# simplify family names and make factor\nbfam$family &lt;- gsub(pattern = \"\\\\..*\", replacement = \"\", x = bfam$family) |&gt;\n  as.factor()\n\n\n# make B1 the reference (most similar to overall mean)\nbfam$family &lt;- relevel(x = bfam$family, ref =\"B1\")"
  },
  {
    "objectID": "exercises/ex-12.html#visualize-the-variables",
    "href": "exercises/ex-12.html#visualize-the-variables",
    "title": "Stats Bootcamp - class 12",
    "section": "Visualize the variable(s)",
    "text": "Visualize the variable(s)\nI want the response variable on the \\(y\\) axis and the explanatory variable on the \\(x\\) axis.\nBoxplot\n\nggboxplot(\n  data = bfam,\n  y = \"??\",\n  x = \"??\",\n  fill = \"??\"\n  )\n\n. . .\n\nbfam |&gt; \n  group_by(??) |&gt;\n  get_summary_stats(\n    ??,\n    type = \"common\",\n    show = c(\"mean\",\"median\",\"sd\")\n    )"
  },
  {
    "objectID": "exercises/ex-12.html#is-it-normally-distributed-2",
    "href": "exercises/ex-12.html#is-it-normally-distributed-2",
    "title": "Stats Bootcamp - class 12",
    "section": "Is it normally distributed?",
    "text": "Is it normally distributed?\n\nggqqplot(\n  data = bfam,\n  x = \"weight\",\n  color = \"??\"\n  )\n\n. . .\n\nbfam |&gt; \n  group_by(family) |&gt;\n  ??_test(weight) |&gt;\n  gt()\n\nLooks reasonable"
  },
  {
    "objectID": "exercises/ex-12.html#equal-variance-1",
    "href": "exercises/ex-12.html#equal-variance-1",
    "title": "Stats Bootcamp - class 12",
    "section": "Equal variance?",
    "text": "Equal variance?\n\nbfam |&gt; \n  ??_test(??~??) |&gt;\n  gt()\n\nOK - so we can use anova!"
  },
  {
    "objectID": "exercises/ex-12.html#declare-null-hypothesis-mathcalh_0-2",
    "href": "exercises/ex-12.html#declare-null-hypothesis-mathcalh_0-2",
    "title": "Stats Bootcamp - class 12",
    "section": "2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n",
    "text": "2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n\n\n\\(\\mathcal{H}_0\\) is that \\(family\\) cannot explain \\(weight\\)"
  },
  {
    "objectID": "exercises/ex-12.html#calculate-test-statistic-exact-p-value-2",
    "href": "exercises/ex-12.html#calculate-test-statistic-exact-p-value-2",
    "title": "Stats Bootcamp - class 12",
    "section": "3. Calculate test-statistic, exact p-value",
    "text": "3. Calculate test-statistic, exact p-value\nParametric test:\n\nbfam |&gt;\n  ??_test(weight ~ ??) |&gt;\n  gt()\n\n. . .\nNonparametric test:\n\nbfam |&gt;\n  ??_test(weight ~ family) |&gt;\n  gt()\n\n. . .\nP values are well below 0.05\n\n\\(\\mathcal{H}_0\\) is that \\(family\\) cannot explain \\(weight\\) is NOT WELL SUPPORTED\n\n\\(family\\) can explain \\(weight\\)"
  },
  {
    "objectID": "exercises/ex-12.html#visualize-the-result-1",
    "href": "exercises/ex-12.html#visualize-the-result-1",
    "title": "Stats Bootcamp - class 12",
    "section": "Visualize the result",
    "text": "Visualize the result\n\n# save statistical test result\nstatres &lt;- bfam |&gt;\n  anova_test(weight ~ sex)\n\n\nggboxplot(\n  data = bfam,\n  y = \"weight\",\n  x = \"family\",\n  fill = \"family\"\n  ) + \n  stat_anova_test()"
  },
  {
    "objectID": "exercises/ex-12.html#multiple-pairwise-comparisons",
    "href": "exercises/ex-12.html#multiple-pairwise-comparisons",
    "title": "Stats Bootcamp - class 12",
    "section": "Multiple pairwise comparisons",
    "text": "Multiple pairwise comparisons\nQuick aside\n\n# save statistical test result\npairwise &lt;- bfam |&gt;\n  t_test(weight ~ family, ref.group = \"??\") \n\n\nggboxplot(bfam,\n          x = \"family\",\n          y = \"weight\",\n          fill = \"weight\",\n          ) +\n  stat_pvalue_manual(\n    pairwise,\n    label = \"p.adj\", \n    y.position = c(30, 32, 34)\n    ) +\n  ylim(10,38)\n\nNotice that not all pairwise differences are significant, yet the ANOVA is significant."
  },
  {
    "objectID": "exercises/ex-12.html#appropriate-statistical-test-cheatsheet",
    "href": "exercises/ex-12.html#appropriate-statistical-test-cheatsheet",
    "title": "Stats Bootcamp - class 12",
    "section": "Appropriate statistical test cheatsheet",
    "text": "Appropriate statistical test cheatsheet"
  },
  {
    "objectID": "exercises/ex-12.html#references",
    "href": "exercises/ex-12.html#references",
    "title": "Stats Bootcamp - class 12",
    "section": "References",
    "text": "References\nLegal analogy\nStatQuest: P Values, clearly explained\nStatQuest: How to calculate p-values\nThe Curious Tale of William Sealy Gosset"
  },
  {
    "objectID": "exercises/ex-07.html",
    "href": "exercises/ex-07.html",
    "title": "R Bootcamp - Day 7",
    "section": "",
    "text": "Accessing data in vectors (Exercise)\nother tidyverse packages (stringr & forcats)\ndplyr table joins (Exercise)\nggplot2 scale functions\nggplot2 multi-panel figures (Exercise)\nggplot2 saving figures"
  },
  {
    "objectID": "exercises/ex-07.html#class-7-outline",
    "href": "exercises/ex-07.html#class-7-outline",
    "title": "R Bootcamp - Day 7",
    "section": "",
    "text": "Accessing data in vectors (Exercise)\nother tidyverse packages (stringr & forcats)\ndplyr table joins (Exercise)\nggplot2 scale functions\nggplot2 multi-panel figures (Exercise)\nggplot2 saving figures"
  },
  {
    "objectID": "exercises/ex-07.html#using-and",
    "href": "exercises/ex-07.html#using-and",
    "title": "R Bootcamp - Day 7",
    "section": "Using [, [[, and $\n",
    "text": "Using [, [[, and $\n\n[ can return a range, [[ returns a single value."
  },
  {
    "objectID": "exercises/ex-07.html#vector-selection-with-logic",
    "href": "exercises/ex-07.html#vector-selection-with-logic",
    "title": "R Bootcamp - Day 7",
    "section": "vector selection with logic",
    "text": "vector selection with logic\none-step filtering.\ntwo-step filtering. same result.\nalso can use with is.na() to identify / exclude NA values in a vector.\nUse sum() to figure out how many are TRUE."
  },
  {
    "objectID": "exercises/ex-07.html#string-operations-with-stringr",
    "href": "exercises/ex-07.html#string-operations-with-stringr",
    "title": "R Bootcamp - Day 7",
    "section": "string operations with stringr",
    "text": "string operations with stringr\nstringr provides several useful functions for operating on strings.\nSee the stringr cheatsheet\nstr_c() is similar to paste and paste0 but the behavior is more consistent."
  },
  {
    "objectID": "exercises/ex-07.html#forcats-operations-for-factors",
    "href": "exercises/ex-07.html#forcats-operations-for-factors",
    "title": "R Bootcamp - Day 7",
    "section": "forcats operations for factors",
    "text": "forcats operations for factors\nforcats provides several utilities for working with factors.\nSee the forcats cheatsheet"
  },
  {
    "objectID": "exercises/ex-07.html#use-forcats-to-reorder-aspects-of-plots",
    "href": "exercises/ex-07.html#use-forcats-to-reorder-aspects-of-plots",
    "title": "R Bootcamp - Day 7",
    "section": "Use forcats to reorder aspects of plots",
    "text": "Use forcats to reorder aspects of plots\nSee the FAQ on rordering in ggplot2"
  },
  {
    "objectID": "exercises/ex-07.html#dplyr-cheatsheet",
    "href": "exercises/ex-07.html#dplyr-cheatsheet",
    "title": "R Bootcamp - Day 7",
    "section": "dplyr cheatsheet",
    "text": "dplyr cheatsheet\nLook at “combine variables” and “combine cases” at the top."
  },
  {
    "objectID": "exercises/ex-07.html#tables-for-joining",
    "href": "exercises/ex-07.html#tables-for-joining",
    "title": "R Bootcamp - Day 7",
    "section": "tables for joining",
    "text": "tables for joining"
  },
  {
    "objectID": "exercises/ex-07.html#mutating-joins---visualized",
    "href": "exercises/ex-07.html#mutating-joins---visualized",
    "title": "R Bootcamp - Day 7",
    "section": "mutating joins - visualized",
    "text": "mutating joins - visualized"
  },
  {
    "objectID": "exercises/ex-07.html#joining-tables-by-a-variable---exercise-1",
    "href": "exercises/ex-07.html#joining-tables-by-a-variable---exercise-1",
    "title": "R Bootcamp - Day 7",
    "section": "Joining tables by a variable - Exercise 1",
    "text": "Joining tables by a variable - Exercise 1"
  },
  {
    "objectID": "exercises/ex-07.html#filtering-joins---visualized",
    "href": "exercises/ex-07.html#filtering-joins---visualized",
    "title": "R Bootcamp - Day 7",
    "section": "filtering joins - visualized",
    "text": "filtering joins - visualized"
  },
  {
    "objectID": "exercises/ex-07.html#joining-tables-by-a-variable---exercise-2",
    "href": "exercises/ex-07.html#joining-tables-by-a-variable---exercise-2",
    "title": "R Bootcamp - Day 7",
    "section": "Joining tables by a variable - Exercise 2",
    "text": "Joining tables by a variable - Exercise 2"
  },
  {
    "objectID": "exercises/ex-07.html#other-dplyr-verbs",
    "href": "exercises/ex-07.html#other-dplyr-verbs",
    "title": "R Bootcamp - Day 7",
    "section": "Other dplyr verbs",
    "text": "Other dplyr verbs\nThere are many other dplyr verbs.\n\nWe’ve used rename, count, add_row, add_column, distinct, sample_n, sample_frac, slice, pull\n\n\nCheck out the dplyr cheatsheet to learn more!"
  },
  {
    "objectID": "exercises/ex-07.html#scale-functions-in-ggplot2",
    "href": "exercises/ex-07.html#scale-functions-in-ggplot2",
    "title": "R Bootcamp - Day 7",
    "section": "scale functions in ggplot2",
    "text": "scale functions in ggplot2\n\n\nscale_color_brewer() and scale_fill_brewer() control color and fill aesthetics.\nSee available ggplot2 brewer palettes"
  },
  {
    "objectID": "exercises/ex-07.html#scale-functions-in-ggplot2-1",
    "href": "exercises/ex-07.html#scale-functions-in-ggplot2-1",
    "title": "R Bootcamp - Day 7",
    "section": "scale functions in ggplot2",
    "text": "scale functions in ggplot2"
  },
  {
    "objectID": "exercises/ex-07.html#set-up-a-points-plot",
    "href": "exercises/ex-07.html#set-up-a-points-plot",
    "title": "R Bootcamp - Day 7",
    "section": "Set up a points plot",
    "text": "Set up a points plot"
  },
  {
    "objectID": "exercises/ex-07.html#how-to-combine-multiple-plots-into-a-figure",
    "href": "exercises/ex-07.html#how-to-combine-multiple-plots-into-a-figure",
    "title": "R Bootcamp - Day 7",
    "section": "How to combine multiple plots into a figure?",
    "text": "How to combine multiple plots into a figure?"
  },
  {
    "objectID": "exercises/ex-07.html#we-have-4-legends---can-they-be-condensed",
    "href": "exercises/ex-07.html#we-have-4-legends---can-they-be-condensed",
    "title": "R Bootcamp - Day 7",
    "section": "We have 4 legends - can they be condensed?",
    "text": "We have 4 legends - can they be condensed?\nYes, but it is not exactly straightforward."
  },
  {
    "objectID": "exercises/ex-07.html#saving-plots-exercise-18",
    "href": "exercises/ex-07.html#saving-plots-exercise-18",
    "title": "R Bootcamp - Day 7",
    "section": "Saving plots (Exercise 18)",
    "text": "Saving plots (Exercise 18)\nSaves last plot as 5’ x 5’ file named plot_final.png in working directory.\nMatches file type to file extension."
  },
  {
    "objectID": "exercises/ex-15.html",
    "href": "exercises/ex-15.html",
    "title": "Stats Bootcamp - class 15",
    "section": "",
    "text": "Types of error and multiple test corrections\nExploratory data analysis\nClustering and overlaps"
  },
  {
    "objectID": "exercises/ex-15.html#learning-objectives",
    "href": "exercises/ex-15.html#learning-objectives",
    "title": "Stats Bootcamp - class 15",
    "section": "",
    "text": "Types of error and multiple test corrections\nExploratory data analysis\nClustering and overlaps"
  },
  {
    "objectID": "exercises/ex-15.html#types-i-and-ii-error",
    "href": "exercises/ex-15.html#types-i-and-ii-error",
    "title": "Stats Bootcamp - class 15",
    "section": "Types I and II error",
    "text": "Types I and II error\nFalse positives and False negatives\n\n\\(\\alpha\\) - significance level OR evidentiary standard\n\\(\\beta\\) - type II error rate, 1 - \\(\\beta\\) is power"
  },
  {
    "objectID": "exercises/ex-15.html#different-visualization",
    "href": "exercises/ex-15.html#different-visualization",
    "title": "Stats Bootcamp - class 15",
    "section": "Different visualization",
    "text": "Different visualization\nPower vs Significance"
  },
  {
    "objectID": "exercises/ex-15.html#genomics---lots-of-data---lots-of-hypothesis-tests",
    "href": "exercises/ex-15.html#genomics---lots-of-data---lots-of-hypothesis-tests",
    "title": "Stats Bootcamp - class 15",
    "section": "Genomics -> Lots of Data -> Lots of Hypothesis Tests",
    "text": "Genomics -&gt; Lots of Data -&gt; Lots of Hypothesis Tests\nIn a typical RNA-seq experiment, we test ~10K different hypotheses. For example, you have 10K genes and for each gene you test whether the mean expression changed in condition A vs condition B. Using a standard p-value cut-off of 0.05, we’d expect 500 genes to be deemed “significant” by chance. Thus, we are very concerned about False Positives or Type I Errors."
  },
  {
    "objectID": "exercises/ex-15.html#multiple-test-corrections",
    "href": "exercises/ex-15.html#multiple-test-corrections",
    "title": "Stats Bootcamp - class 15",
    "section": "Multiple test corrections",
    "text": "Multiple test corrections\n\nControl overall  (also known as family-wise error rate or FWER), which will affect the * for each test. That is, we are controlling the overall probability of making at least one false discovery. Bonferroni and Sidak corrections all control FWER.\nControl false discovery rate (FDR). These procedures allow for type 1 errors (false positives) but control the proportion of these false positives in relation to true positives. This is done by adjusting the decision made for the p-value associated with each individual test to decide rejection or not. Because this will result in a higher type 1 error rate, it has higher power. This affords a higher probability of true discoveries. The step procedures control for FDR."
  },
  {
    "objectID": "exercises/ex-15.html#bonferroni-correction",
    "href": "exercises/ex-15.html#bonferroni-correction",
    "title": "Stats Bootcamp - class 15",
    "section": "Bonferroni Correction",
    "text": "Bonferroni Correction\nThe most conservative of corrections, the Bonferroni correction is also perhaps the most straightforward in its approach. Simply divide  by the number of tests (m).\n\n = /m\n\nHowever, with many tests,  will become very small. This reduces power, which means that we are very unlikely to make any true discoveries.\nSidak Correction\n\n = 1-(1-)^(1/m)"
  },
  {
    "objectID": "exercises/ex-15.html#holms-step-down-procedure",
    "href": "exercises/ex-15.html#holms-step-down-procedure",
    "title": "Stats Bootcamp - class 15",
    "section": "Holm’s Step-Down Procedure",
    "text": "Holm’s Step-Down Procedure\nThe Holm-Bonferroni method is also fairly simple to calculate, but it is more powerful than the single-step Bonferroni.\n\\(HB = \\displaystyle \\frac {target \\alpha}{n - rank + 1}\\)\nH1: 0.005\nH2: 0.01\nH3: 0.03\nH4: = 0.04\nStep 1: Order the p-values from smallest to greatest (already done)\nStep 2: Calc HB for the first rank HB = .05 / 4 – 1 + 1 = .05 / 4 = .0125 H1: 0.005 &lt; .0125, so we reject the null\nStep 4: Repeat the HB formula for the second rank and keep going until we find \\(H{_N}\\) &gt; \\(HB{_N}\\). All subsequent hypotheses are non-significant (i.e. not rejected)."
  },
  {
    "objectID": "exercises/ex-15.html#hochbergs-step-up-procedure",
    "href": "exercises/ex-15.html#hochbergs-step-up-procedure",
    "title": "Stats Bootcamp - class 15",
    "section": "Hochberg’s Step-Up Procedure",
    "text": "Hochberg’s Step-Up Procedure\nMore powerful than Holm’s step-down procedure, Hochberg’s step-up procedure also seeks to control the FDR and follows a similar process, only p-values are ranked from largest to smallest.\nFor each ranked p-value, it is compared to the  calculated for its respective rank (same formula as Holm’s procedure). Testing continues until you reach the first non-rejected hypothesis. You would then fail to reject all following hypotheses."
  },
  {
    "objectID": "exercises/ex-15.html#example",
    "href": "exercises/ex-15.html#example",
    "title": "Stats Bootcamp - class 15",
    "section": "Example",
    "text": "Example\n\nrna &lt;- read_csv(here(\"data/data_rna_protein.csv.gz\")) |&gt;select(iDUX4_pval)\n\n\nrna$fdr &lt;- p.adjust(p = ??, method = \"fdr\", n = nrow(rna))\n\nrna$BH &lt;- p.adjust(p = rna$iDUX4_pval, method = \"BH\", n = nrow(rna))\n\nrna$bon &lt;- p.adjust(p = rna$iDUX4_pval, method = \"bonferroni\", n = nrow(rna))\n\n\nrna_long &lt;- rna |&gt;pivot_longer(cols = iDUX4_pval:bon, names_to = \"type\") \n\n\n\nggplot(data = rna_long, aes(x=value, fill = type)) +\n  geom_histogram(bins = 50) +\n  facet_wrap(~type) +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-15.html#exploratory-data-analysis-eda",
    "href": "exercises/ex-15.html#exploratory-data-analysis-eda",
    "title": "Stats Bootcamp - class 15",
    "section": "Exploratory data analysis (EDA)",
    "text": "Exploratory data analysis (EDA)\nOur goal here is to get an top-down big picture of the similarity/differences between variables in a dataset. For example, let’s say you do RNA-seq in triplicate on 4 treatment/developmental times.\nPCA\nWe will perform PCA on all of the samples and visualize the relationship between samples.\nCorrelation matrix\nWe will perform hierarchical clustering on a matrix representing the pairwise correlation between all these samples."
  },
  {
    "objectID": "exercises/ex-15.html#explore-data",
    "href": "exercises/ex-15.html#explore-data",
    "title": "Stats Bootcamp - class 15",
    "section": "Explore data",
    "text": "Explore data\nIs it normal-ish?\n\n# get dux targets\ndux_targets &lt;- read_csv(file = here(\"data\",\"target_genes.csv.gz\"))\n\n# get expression data\nd &lt;- read_tsv(here(\"data\",\"data_genelevel.tsv.gz\")) |&gt;\n  mutate(target = case_when(\n    gene_symbol %in% dux_targets$hgnc_symbol ~ \"target\",\n    TRUE ~ \"not_target\")\n         ) |&gt;\n  filter(gene_symbol!=\"ISCA1\") |&gt;\n  drop_na()\n\n\nd |&gt;\n  pivot_longer(cols = hour00_rep1:hour14_rep3) |&gt; \n  ggplot(aes(x=value, color=name)) +\n  ??() +\n  theme_cowplot()\n\n. . .\nDefinitely not normal"
  },
  {
    "objectID": "exercises/ex-15.html#data-transformations",
    "href": "exercises/ex-15.html#data-transformations",
    "title": "Stats Bootcamp - class 15",
    "section": "Data transformations",
    "text": "Data transformations\nWe often transform data to make it closer to being normally-distributed. This allows us to use more powerful statistical tests on the same data. One approach is to log-transform the data.\n\nd |&gt;\n  pivot_longer(cols = hour00_rep1:hour14_rep3) |&gt; \n  ggplot(aes(x=??(value), color=name)) +\n  geom_density() +\n  theme_cowplot()\n\n. . .\nWhat is this?\n\nWarning message: Removed 1251 rows containing non-finite values (stat_density())."
  },
  {
    "objectID": "exercises/ex-15.html#pseudocounts",
    "href": "exercises/ex-15.html#pseudocounts",
    "title": "Stats Bootcamp - class 15",
    "section": "Pseudocounts",
    "text": "Pseudocounts\n\\(log_{x}(0)\\) is a common problem. One solution is to add a pseudocount. Since this is read count data, the smallest unit is 1 and so we will add 1 to all the observations before perforing the log transformation. \\(1\\) represents the pseudocount in this case.\n\nd |&gt;\n  pivot_longer(cols = hour00_rep1:hour14_rep3) |&gt; \n  ggplot(aes(x=??(value), color=name)) +\n  geom_density() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-15.html#correlation-analysis",
    "href": "exercises/ex-15.html#correlation-analysis",
    "title": "Stats Bootcamp - class 15",
    "section": "correlation analysis",
    "text": "correlation analysis\nprepare the data for analysis\n\n# pull counts\nx &lt;-  d |&gt;\n  select_if(is.numeric) |&gt;# keep only the numeric columns\n  mutate_all(funs(log2(1 + .))) |&gt;# log2 transform\n  as.matrix() # matrix\n\nrownames(x) &lt;- d$gene_symbol\n\nx &lt;- t(scale(t(x))) # scale\n\n# pairwise pearson correlation\np &lt;- ???\n\n# heatmap\npheatmap(\n  mat = p,\n  clustering_distance_rows = \"??\",\n  clustering_distance_cols = \"??\",\n  clustering_method = \"??\"\n)"
  },
  {
    "objectID": "exercises/ex-15.html#pca-1",
    "href": "exercises/ex-15.html#pca-1",
    "title": "Stats Bootcamp - class 15",
    "section": "PCA",
    "text": "PCA\nPCA is a common dimensionality reduction method that is used to visualize the similarity and differences in your data.\nLet’s watch this fantastic 5 minute video explaining PCA\n\nFor more detailed explanations go here and here."
  },
  {
    "objectID": "exercises/ex-15.html#pca-2",
    "href": "exercises/ex-15.html#pca-2",
    "title": "Stats Bootcamp - class 15",
    "section": "PCA",
    "text": "PCA\n\n# pairwise pearson correlation\npc &lt;- \n\nsummary(pc) # summarize the PCs by variance"
  },
  {
    "objectID": "exercises/ex-15.html#pca---prepare-visualization",
    "href": "exercises/ex-15.html#pca---prepare-visualization",
    "title": "Stats Bootcamp - class 15",
    "section": "PCA - prepare visualization",
    "text": "PCA - prepare visualization\n\n# create a dataframe with the importance/explanation of variation for each PC\npca_data_info &lt;- summary(pc)$importance |&gt;as.data.frame()\n\npca_data_info &lt;- round(x = pca_data_info, digits = 3)\n\n# we make a dataframe out of the rotations and will use this to plot\npca_plot_data &lt;- pc$rotation |&gt;\n  as.data.frame() |&gt;\n  rownames_to_column(var = \"ID\") |&gt;\n  separate(\n    ID,\n    into = c(\"time\",\"rep\"),\n    sep = \"_\"\n  )\n\n# recode \"rep\"\npca_plot_data$rep &lt;- recode(\n  pca_plot_data$rep,\n  rep1 = \"A\",\n  rep2 = \"B\",\n  rep3 = \"C\"\n)\n\n# gsub hour\npca_plot_data$time &lt;- gsub(\n  pattern = \"hour\",\n  replacement = \"\",\n  x = pca_plot_data$time\n)\n\nggplot(\n  pca_plot_data, \n  aes(x=PC1, y = PC2, color=time)\n  ) + \n  geom_point() +\n  xlab(paste(\"PC1, %\",100 * pca_data_info[\"Proportion of Variance\",\"PC1\"])) +\n  ylab(paste(\"PC2, %\",100 * pca_data_info[\"Proportion of Variance\",\"PC2\"])) + \n  ggtitle(\"PCA for DUX4 timecourse\") +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-15.html#famous-pca-example",
    "href": "exercises/ex-15.html#famous-pca-example",
    "title": "Stats Bootcamp - class 15",
    "section": "Famous PCA example",
    "text": "Famous PCA example\nUsing gene expression as your measurement, do you think the mouse liver is more similar to a mouse heart or a human liver?\nThe Mouse ENCODE Consortium reported that comparative gene expression data from human and mouse tend to cluster more by species rather than by tissue.\n\nA comparative encyclopedia of DNA elements in the mouse genome\nComparison of the transcriptional landscapes between human and mouse tissues"
  },
  {
    "objectID": "exercises/ex-15.html#some-found-this-hard-to-believe",
    "href": "exercises/ex-15.html#some-found-this-hard-to-believe",
    "title": "Stats Bootcamp - class 15",
    "section": "Some found this hard to believe",
    "text": "Some found this hard to believe\nYoav Gilad’s lab recapitulated the initial result:\n\nThis observation was surprising, as it contradicted much of the comparative gene regulatory data collected previously, as well as the common notion that major developmental pathways are highly conserved across a wide range of species, in particular across mammals."
  },
  {
    "objectID": "exercises/ex-15.html#careful-with-batch-effects",
    "href": "exercises/ex-15.html#careful-with-batch-effects",
    "title": "Stats Bootcamp - class 15",
    "section": "Careful with batch effects",
    "text": "Careful with batch effects\nBut noticed something funny about which samples were sequenced on the same lanes."
  },
  {
    "objectID": "exercises/ex-15.html#accounting-for-batch-effects",
    "href": "exercises/ex-15.html#accounting-for-batch-effects",
    "title": "Stats Bootcamp - class 15",
    "section": "Accounting for batch effects",
    "text": "Accounting for batch effects\n\nHere we show that the Mouse ENCODE gene expression data were collected using a flawed study design, which confounded sequencing batch (namely, the assignment of samples to sequencing flowcells and lanes) with species. When we account for the batch effect, the corrected comparative gene expression data from human and mouse tend to cluster by tissue, not by species."
  },
  {
    "objectID": "exercises/ex-15.html#k-means-clustering-to-look-for-patterns",
    "href": "exercises/ex-15.html#k-means-clustering-to-look-for-patterns",
    "title": "Stats Bootcamp - class 15",
    "section": "K-means clustering to look for patterns",
    "text": "K-means clustering to look for patterns\nGoal: to partition n observations into k clusters in which each observation belongs to the cluster with the nearest mean, serving as a prototype of the cluster. –Wiki\nK-means"
  },
  {
    "objectID": "exercises/ex-15.html#k-means-data-preparation",
    "href": "exercises/ex-15.html#k-means-data-preparation",
    "title": "Stats Bootcamp - class 15",
    "section": "K-Means data preparation",
    "text": "K-Means data preparation\n\nRows are observations (individuals) and columns are variables\nAny missing value in the data must be removed or estimated.\nThe data must be standardized (i.e., scaled) to make variables comparable."
  },
  {
    "objectID": "exercises/ex-15.html#scaling-or-z-score",
    "href": "exercises/ex-15.html#scaling-or-z-score",
    "title": "Stats Bootcamp - class 15",
    "section": "Scaling or z-score",
    "text": "Scaling or z-score\n{%20}\n\\(x\\) = observation\\(\\mu\\) = population mean\\(\\sigma\\) = population sd\nWe will be using this function on each row. This will allow comparison of relative changes across a row, for all rows."
  },
  {
    "objectID": "exercises/ex-15.html#k-means-clustering",
    "href": "exercises/ex-15.html#k-means-clustering",
    "title": "Stats Bootcamp - class 15",
    "section": "K-Means clustering",
    "text": "K-Means clustering\n\nComputing k-means clustering in R (pheatmap)\nDetermine appropriate cluster number\nAdd new column with cluster number to initial data"
  },
  {
    "objectID": "exercises/ex-15.html#how-do-we-figure-out-the-optimal-clusters",
    "href": "exercises/ex-15.html#how-do-we-figure-out-the-optimal-clusters",
    "title": "Stats Bootcamp - class 15",
    "section": "How do we figure out the optimal # clusters?",
    "text": "How do we figure out the optimal # clusters?\nThere are many methods, but we will stick with the “elbow” method.\nK-means is minimizing the total within cluster sum of squares (wss).\nWe pick the cluster where that drop in total reaches diminishing returns -&gt; the elbow."
  },
  {
    "objectID": "exercises/ex-15.html#lets-cluster-once-to-see",
    "href": "exercises/ex-15.html#lets-cluster-once-to-see",
    "title": "Stats Bootcamp - class 15",
    "section": "Let’s cluster once to see",
    "text": "Let’s cluster once to see\n\nset.seed(33)\ntmp &lt;- pheatmap(\n  mat = x,\n  clustering_distance_rows = \"euclidean\",\n  clustering_method = \"ward.D2\",\n  kmeans_k = ??,\n  cluster_cols = FALSE,\n  scale = \"none\"\n)\n\n\ntmp$kmeans$tot.withinss"
  },
  {
    "objectID": "exercises/ex-15.html#functions-in-r",
    "href": "exercises/ex-15.html#functions-in-r",
    "title": "Stats Bootcamp - class 15",
    "section": "Functions in R",
    "text": "Functions in R"
  },
  {
    "objectID": "exercises/ex-15.html#create-function-to-calculate-wss",
    "href": "exercises/ex-15.html#create-function-to-calculate-wss",
    "title": "Stats Bootcamp - class 15",
    "section": "Create function to calculate wss",
    "text": "Create function to calculate wss\n\nwss &lt;- function(knum) {\n  ph &lt;- pheatmap(\n    mat = x,\n    kmeans_k = ??,\n    scale = \"none\",\n    cluster_cols = FALSE,\n    clustering_distance_rows = \"euclidean\",\n    clustering_method = \"ward.D2\",\n    silent = TRUE\n  )\n  return(ph$kmeans$tot.withinss)\n}\n\nwss(6)"
  },
  {
    "objectID": "exercises/ex-15.html#find-the-elbow",
    "href": "exercises/ex-15.html#find-the-elbow",
    "title": "Stats Bootcamp - class 15",
    "section": "find the elbow",
    "text": "find the elbow\n\ntibble(wss=map_vec(2:15,wss),\n       k=2:15) |&gt;\n  ggplot(., aes(x=k, y=wss)) +\n  geom_point() +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-15.html#final-clustering",
    "href": "exercises/ex-15.html#final-clustering",
    "title": "Stats Bootcamp - class 15",
    "section": "Final clustering",
    "text": "Final clustering\n\nset.seed(33)\nc &lt;- pheatmap(\n  mat = x,\n  clustering_distance_rows = \"euclidean\",\n  clustering_method = \"ward.D2\",\n  kmeans_k = 7,\n  cluster_cols = F,\n  scale = \"none\"\n)\n\ncg &lt;- tibble(\n  Cluster=c$kmeans$cluster,\n  gene_symbol=names(c$kmeans$cluster)\n)\n\ncd &lt;- left_join(d, cg, by=\"gene_symbol\")"
  },
  {
    "objectID": "exercises/ex-15.html#which-clusters-contains-dux4-targets",
    "href": "exercises/ex-15.html#which-clusters-contains-dux4-targets",
    "title": "Stats Bootcamp - class 15",
    "section": "Which cluster(s) contains DUX4 targets?",
    "text": "Which cluster(s) contains DUX4 targets?\nFisher’s Exact Test and the Hypergeometric Distribution\n\n# list of genes by dux4 targeting\nduxList &lt;- split(cd$gene_symbol, cd$??)\n\n# list of genes by clustering\nclustList &lt;- split(cd$gene_symbol, as.factor(cd$??))\n\n# calculate all overlaps between lists\ngom.duxclust &lt;- newGOM(??List,\n                       ??List,\n                       genome.size = ??)\n\n\ngetMatrix(gom.duxclust, \"pval\") |&gt;\n  t() |&gt;\n  as.data.frame() |&gt;\n  rownames_to_column(var = \"clust\") |&gt;\n  as.tibble() |&gt;\n  arrange(target)"
  },
  {
    "objectID": "exercises/ex-15.html#lets-calculate-the-empirical-p-value-of-the-cluster-most-enriched-for-dux4-targets-by-sampling",
    "href": "exercises/ex-15.html#lets-calculate-the-empirical-p-value-of-the-cluster-most-enriched-for-dux4-targets-by-sampling",
    "title": "Stats Bootcamp - class 15",
    "section": "Let’s calculate the empirical p-value of the cluster most enriched for DUX4 targets by sampling",
    "text": "Let’s calculate the empirical p-value of the cluster most enriched for DUX4 targets by sampling\nIn order to do this, you will need to:\n\nIdentify which cluster is the most enriched for DUX4 targets.\n\nDetermine how many genes are in the cluster. You will need to know this to figure out how many genes to sample from the whole data set.\nDetermine how many of the genes in the cluster are DUX4 targets. This is the metric that you are interested in comparing between the null distribution and your observation.\n\n\nGenerate 1000 random sample of the proper size from all genes and find out how many of them are DUX4 targets.\nVisualize the distribution of DUX4 targets in these 1000 random (your null distribution) and overlay the number of DUX4 targets you observed in the cluster that was most enriched for DUX4 targets."
  },
  {
    "objectID": "problem-sets/ps-14.html",
    "href": "problem-sets/ps-14.html",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "",
    "text": "-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'janitor'\n\n\nThe following object is masked from 'package:rstatix':\n\n    make_clean_names\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00FC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DF&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C5&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E5&gt;' to native encoding\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1, 6, 9, 14, 15, 24:28)]\nbiochem &lt;- biochem[, keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\", \"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb &lt;- inner_join(biochem, weight, by = \"subject_name\") |&gt;\n  na.omit() |&gt;\n  rename(sex = gender)"
  },
  {
    "objectID": "problem-sets/ps-14.html#problem-1",
    "href": "problem-sets/ps-14.html#problem-1",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Problem # 1",
    "text": "Problem # 1\nCan mouse sex explain mouse cholesterol? {.smaller}"
  },
  {
    "objectID": "problem-sets/ps-14.html#step-1-null-hypothesis-and-variable-specification",
    "href": "problem-sets/ps-14.html#step-1-null-hypothesis-and-variable-specification",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "STEP 1: Null hypothesis and variable specification",
    "text": "STEP 1: Null hypothesis and variable specification\n\\(\\mathcal{H}_0:\\)\n\n?? is the response variable\n\n\n?? is the explanatory variable"
  },
  {
    "objectID": "problem-sets/ps-14.html#step-2-fit-linear-model-and-examine-results",
    "href": "problem-sets/ps-14.html#step-2-fit-linear-model-and-examine-results",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "STEP 2: Fit linear model and examine results",
    "text": "STEP 2: Fit linear model and examine results\nFit summary:\nCoefficient summary:"
  },
  {
    "objectID": "problem-sets/ps-14.html#collecting-residuals-and-other-information",
    "href": "problem-sets/ps-14.html#collecting-residuals-and-other-information",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Collecting residuals and other information",
    "text": "Collecting residuals and other information\nadd residuals and other information"
  },
  {
    "objectID": "problem-sets/ps-14.html#step-4-visualize-the-error-around-fit",
    "href": "problem-sets/ps-14.html#step-4-visualize-the-error-around-fit",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "STEP 4: Visualize the error around fit",
    "text": "STEP 4: Visualize the error around fit\n\n# plot of data with mean and colored by residuals"
  },
  {
    "objectID": "problem-sets/ps-14.html#step-3-visualize-the-error-around-the-null-mean-weight",
    "href": "problem-sets/ps-14.html#step-3-visualize-the-error-around-the-null-mean-weight",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "STEP 3: Visualize the error around the null (mean weight)",
    "text": "STEP 3: Visualize the error around the null (mean weight)"
  },
  {
    "objectID": "problem-sets/ps-14.html#plot-the-fit-error-and-the-null-error-as-2-panels",
    "href": "problem-sets/ps-14.html#plot-the-fit-error-and-the-null-error-as-2-panels",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Plot the fit error and the null error as 2 panels",
    "text": "Plot the fit error and the null error as 2 panels"
  },
  {
    "objectID": "problem-sets/ps-14.html#calculate-r2",
    "href": "problem-sets/ps-14.html#calculate-r2",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Calculate \\(R^2\\)\n",
    "text": "Calculate \\(R^2\\)\n\n\\(R^2 = 1 - \\displaystyle \\frac {SS_{fit}}{SS_{null}}\\)\ncheck agains Rsq in your fit"
  },
  {
    "objectID": "problem-sets/ps-14.html#compare-to-traditional-t-test",
    "href": "problem-sets/ps-14.html#compare-to-traditional-t-test",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Compare to traditional t-test",
    "text": "Compare to traditional t-test"
  },
  {
    "objectID": "problem-sets/ps-14.html#provide-your-interpreation-of-the-result",
    "href": "problem-sets/ps-14.html#provide-your-interpreation-of-the-result",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Provide your interpreation of the result",
    "text": "Provide your interpreation of the result"
  },
  {
    "objectID": "exercises/ex-05.html",
    "href": "exercises/ex-05.html",
    "title": "R Bootcamp - Day 5",
    "section": "",
    "text": "Introduce ggplot2 & today’s data sets (Exercise 1)\nUnderstand the basics of ggplot2 (Exercise 2, 3)\nGeom functions (Exercise 4-8)\nGeom_point properties (Exercise 9)\nPosition adjustments (Exercise 10)\nCoordinate and Scale Functions (Exercise 11)\nZooming into a plot (Exercise 12)\n\n\n\nFaceting (Exercise 13)\nThemes (Exercise 14)\nLabels & Legends (Exercise 15)\nAdding lines to plots (Exercise 16)\nMaking multi-panel figures (Exercise 17)\nSaving a plot (Exercise 18)"
  },
  {
    "objectID": "exercises/ex-05.html#class-4-5-outline",
    "href": "exercises/ex-05.html#class-4-5-outline",
    "title": "R Bootcamp - Day 5",
    "section": "",
    "text": "Introduce ggplot2 & today’s data sets (Exercise 1)\nUnderstand the basics of ggplot2 (Exercise 2, 3)\nGeom functions (Exercise 4-8)\nGeom_point properties (Exercise 9)\nPosition adjustments (Exercise 10)\nCoordinate and Scale Functions (Exercise 11)\nZooming into a plot (Exercise 12)\n\n\n\nFaceting (Exercise 13)\nThemes (Exercise 14)\nLabels & Legends (Exercise 15)\nAdding lines to plots (Exercise 16)\nMaking multi-panel figures (Exercise 17)\nSaving a plot (Exercise 18)"
  },
  {
    "objectID": "exercises/ex-05.html#shape-size-fill-color-and-transparency---exercise-9",
    "href": "exercises/ex-05.html#shape-size-fill-color-and-transparency---exercise-9",
    "title": "R Bootcamp - Day 5",
    "section": "shape, size, fill, color, and transparency - Exercise 9",
    "text": "shape, size, fill, color, and transparency - Exercise 9\nGet a diamonds subset.\nNote that aesthetics can also be defined within a geom.\nThis is useful if you use two different geoms that share an aesthetic."
  },
  {
    "objectID": "exercises/ex-05.html#position-adjustments---exercise-10",
    "href": "exercises/ex-05.html#position-adjustments---exercise-10",
    "title": "R Bootcamp - Day 5",
    "section": "Position adjustments - Exercise 10",
    "text": "Position adjustments - Exercise 10\nA stacked bar chart.\nDodged bars are easier to read (proportions are clearer)"
  },
  {
    "objectID": "exercises/ex-05.html#coordinate-and-scale-functions---exercise-11",
    "href": "exercises/ex-05.html#coordinate-and-scale-functions---exercise-11",
    "title": "R Bootcamp - Day 5",
    "section": "Coordinate and Scale Functions - Exercise 11",
    "text": "Coordinate and Scale Functions - Exercise 11\nLogarithmic axes - 1\nNote the difference between axis labels in these two examples.\n\nLogarithmic axes - 2\n\nFlipping coordinate system (swapping x and y)\n\nNow flip the axis.\nBrief aside: ggplot can handle on-the-fly data transformations.\nHere we log-transform carat and convert USD to CAD."
  },
  {
    "objectID": "exercises/ex-05.html#zooming-into-a-plot---exercise-12",
    "href": "exercises/ex-05.html#zooming-into-a-plot---exercise-12",
    "title": "R Bootcamp - Day 5",
    "section": "Zooming into a plot - Exercise 12",
    "text": "Zooming into a plot - Exercise 12\nWe might want to change the limits of x or y axes to zoom in."
  },
  {
    "objectID": "exercises/ex-05.html#faceting-to-plot-subsets-of-data-into-separate-panels---exercise-13",
    "href": "exercises/ex-05.html#faceting-to-plot-subsets-of-data-into-separate-panels---exercise-13",
    "title": "R Bootcamp - Day 5",
    "section": "Faceting to plot subsets of data into separate panels - Exercise 13",
    "text": "Faceting to plot subsets of data into separate panels - Exercise 13\nA density plot we’ve seen before.\nWhich variables can we use to subdivide the data?\n\nFaceted by cut\nLet’s also use facet_grid() to facet by two variables.\nFaceted by clarity and cut.\n\nScatter plot with facets."
  },
  {
    "objectID": "exercises/ex-05.html#themes---exercise-14",
    "href": "exercises/ex-05.html#themes---exercise-14",
    "title": "R Bootcamp - Day 5",
    "section": "Themes - Exercise 14",
    "text": "Themes - Exercise 14\nScatter plot with default theme.\nChange the theme with theme_bw().\nMy go-to is cowplot::theme_cowplot().\nIt implements much of the advice in the “Dataviz” book, i.e.. YOUR LABELS ARE TOO SMALL.\nWe’re not going to cover it, but you can also customize pre-existing themes."
  },
  {
    "objectID": "exercises/ex-05.html#labels-legends---exercise-15",
    "href": "exercises/ex-05.html#labels-legends---exercise-15",
    "title": "R Bootcamp - Day 5",
    "section": "Labels & Legends - Exercise 15",
    "text": "Labels & Legends - Exercise 15\nUse labs() to add / change plot labels."
  },
  {
    "objectID": "exercises/ex-05.html#how-to-add-a-line-to-a-plot-exercise-16",
    "href": "exercises/ex-05.html#how-to-add-a-line-to-a-plot-exercise-16",
    "title": "R Bootcamp - Day 5",
    "section": "How to add a line to a plot? (Exercise 16)",
    "text": "How to add a line to a plot? (Exercise 16)\n\nAlso try:"
  },
  {
    "objectID": "exercises/ex-05.html#how-to-combine-multiple-plots-into-a-figure-exercise-17",
    "href": "exercises/ex-05.html#how-to-combine-multiple-plots-into-a-figure-exercise-17",
    "title": "R Bootcamp - Day 5",
    "section": "How to combine multiple plots into a figure? (Exercise 17)",
    "text": "How to combine multiple plots into a figure? (Exercise 17)\nWe have 4 legends - can they be condensed?\nYes, but it is not exactly straightforward.\nneed to scroll below"
  },
  {
    "objectID": "exercises/ex-05.html#saving-plots-exercise-18",
    "href": "exercises/ex-05.html#saving-plots-exercise-18",
    "title": "R Bootcamp - Day 5",
    "section": "Saving plots (Exercise 18)",
    "text": "Saving plots (Exercise 18)\nSaves last plot as 5’ x 5’ file named “plot_final.png” in working directory.\nMatches file type to file extension."
  },
  {
    "objectID": "exercises/ex-02.html",
    "href": "exercises/ex-02.html",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "",
    "text": "Explore table1, table2, table3, table4a, table4b, and table5, which all display the number of TB cases documented by the World Health Organization in Afghanistan, Brazil, and China between 1999 and 2000.\n\nR provides many functions to examine features of a data object\n\nView() - To open the table up in an excel-like interface - not recommended for large tables\nclass() - what kind of object is it (high-level)?\ntypeof() - what is the object’s data type (low-level)?\nis_tibble() - use is.? to confirm data type\nstr() - what is the structure of the object?\nattributes() - does it have any metadata?\nLet’s explore table1\n\nSome of the useful functions for data.frames / tibbles are as follows:\n\n\nhead() - shows first 6 rows\n\n\ntail() - shows last 6 rows\n\n\ndim() - returns the dimensions of data frame (i.e. number of rows and number of columns)\n\n\nnrow() - number of rows\n\n\nncol() - number of columns\n\n\nnames() or colnames() - both show the names attribute for a data frame\n\nglimpse()"
  },
  {
    "objectID": "exercises/ex-02.html#data-sets-for-tidying---exercise-2",
    "href": "exercises/ex-02.html#data-sets-for-tidying---exercise-2",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "",
    "text": "Explore table1, table2, table3, table4a, table4b, and table5, which all display the number of TB cases documented by the World Health Organization in Afghanistan, Brazil, and China between 1999 and 2000."
  },
  {
    "objectID": "exercises/ex-02.html#getting-familiar-with-the-data---exercise-3",
    "href": "exercises/ex-02.html#getting-familiar-with-the-data---exercise-3",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "",
    "text": "R provides many functions to examine features of a data object\n\nView() - To open the table up in an excel-like interface - not recommended for large tables\nclass() - what kind of object is it (high-level)?\ntypeof() - what is the object’s data type (low-level)?\nis_tibble() - use is.? to confirm data type\nstr() - what is the structure of the object?\nattributes() - does it have any metadata?\nLet’s explore table1"
  },
  {
    "objectID": "exercises/ex-02.html#getting-familiar-with-the-data---exercise-4",
    "href": "exercises/ex-02.html#getting-familiar-with-the-data---exercise-4",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "",
    "text": "Some of the useful functions for data.frames / tibbles are as follows:\n\n\nhead() - shows first 6 rows\n\n\ntail() - shows last 6 rows\n\n\ndim() - returns the dimensions of data frame (i.e. number of rows and number of columns)\n\n\nnrow() - number of rows\n\n\nncol() - number of columns\n\n\nnames() or colnames() - both show the names attribute for a data frame\n\nglimpse()"
  },
  {
    "objectID": "exercises/ex-02.html#pivot_wider---exercise-6",
    "href": "exercises/ex-02.html#pivot_wider---exercise-6",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "pivot_wider - Exercise 6",
    "text": "pivot_wider - Exercise 6\nWhat will the output look like?\nIf you want to save the output, assign it to a new variable. This new variable will appear in your Environment tab."
  },
  {
    "objectID": "exercises/ex-02.html#pivot_longer---exercise-7",
    "href": "exercises/ex-02.html#pivot_longer---exercise-7",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "pivot_longer - Exercise 7",
    "text": "pivot_longer - Exercise 7\nWhat will the output look like?"
  },
  {
    "objectID": "exercises/ex-02.html#separate---exercise-8",
    "href": "exercises/ex-02.html#separate---exercise-8",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "separate - Exercise 8",
    "text": "separate - Exercise 8\nWhat will the output look like?\nseparate_rows - Exercise 9"
  },
  {
    "objectID": "exercises/ex-02.html#unite---exercise-10",
    "href": "exercises/ex-02.html#unite---exercise-10",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "unite - Exercise 10",
    "text": "unite - Exercise 10"
  },
  {
    "objectID": "exercises/ex-02.html#missing-values",
    "href": "exercises/ex-02.html#missing-values",
    "title": "R Bootcamp - Day 2 - Exercises",
    "section": "Missing values",
    "text": "Missing values"
  },
  {
    "objectID": "exercises/ex-08.html",
    "href": "exercises/ex-08.html",
    "title": "Exercises 8",
    "section": "",
    "text": "Putting it all together\nFor the next two classes we’ll combine everything we’ve learned to process and visualize data from some some biological experiments. These exercises will illustrate a complete analysis pipeline – from data tidying to manipulation and visualization – using tools from the tidyverse.\n\nLibraries\nLoad the libraries you need for analysis below.\n\nlibrary(tidyverse)\nlibrary(here)\nlibrary(cowplot)\n\nA quantitative PCR experiment\nHere is the experimental setup:\n\nTwo cell lines (wt and mut) were treated with a drug that induces interferon expression\nAfter specific time points, cells were harvested and actin and interferon mRNA were analyzed by quantitative PCR (with 3 technical replicates), with a control containing no reverse transcriptase.\n\nLoad the data\nThese data are in two TSV files:\n\ndata/qpcr_names.tsv.gz\ndata/qpcr_data.tsv.gz\n\nLoad these data sets and inspect.\n\nqpcr_names &lt;- read_tsv(here(\"data/bootcamp/qpcr_names.tsv.gz\"))\n\nRows: 8 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (13): row, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nqpcr_data &lt;- read_tsv(here(\"data/bootcamp/qpcr_data.tsv.gz\"))\n\nRows: 8 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (1): row\ndbl (12): 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nNote the shape of the data and the names of the rows and columns. Do they remind you of anything?\n\nTidy the data\nGiven the experimental setup and the shape of the tibbles, you should be able to answer: Are these data tidy?\n\nWhat are the variables in the data?\nAre the variables the column names?\n\n\nqpcr_data_long &lt;-\n  pivot_longer(qpcr_data, -row, names_to = \"col\")\n\nqpcr_names_long &lt;- \n  pivot_longer(qpcr_names, -row, names_to = \"col\") |&gt;\n  separate(\n    value,\n    into = c(\"gt\", \"time\", \"gene\", \"rt\", \"rep\"),\n    sep = \"_\"\n  )\n\nMerge the data\nNote the structure of the tidied data. What columns (variables) are shared by both tibbles?\nHow we can join the data from these two tibbles, linking the sample identifiers with their gene expression values?\n\nqpcr_tidy &lt;-\n  left_join(qpcr_names_long, qpcr_data_long) |&gt;\n  # we don't need row & col anymore.\n  # the -RT samples are all 0, so we can drop those, too\n  filter(rt == \"+\") |&gt;\n  select(-(row:col), -rt)\n\nJoining with `by = join_by(row, col)`\n\n\nSummarize the data\nCalculate the mean and standard deviation across replicates.\nDo this two ways:\n\nCalculate the statistics for each gene separately.\nCalculate a ratio of interferon to actin levels for each sample before calculating the mean and standard deviation of the ratios.\n\n\nqpcr_summary &lt;-\n  group_by(\n    qpcr_tidy,\n    gt, time, gene) |&gt;\n  summarize(\n    exp_mean = mean(value),\n    exp_sd = sd(value)\n  ) |&gt;\n  arrange(gt, time, gene)\n\n`summarise()` has grouped output by 'gt', 'time'. You can override using the\n`.groups` argument.\n\n\nPlot the data\nNow we can plot the summary statistics. We’ll use ggplot2::geom_pointrange() to represent the mean and standard deviation.\nYou’ll need to fill in the blanks (___) below.\n\nggplot(\n  qpcr_summary,\n  aes(\n    x = ___,\n    y = ___,\n    color = ___\n  ),\n) +\n  geom_pointrange(\n    aes(\n      ymin = ___,\n      ymax = ___ \n    ),\n    # position = ___\n  )\n\nInspect the above plot. How might you improve it?\nCopy the above chunk and add functions that modify the plot’s look and feel.\n\nFacet the plot to see differences between the genotypes.\nUpdate the theme using cowplot.\nUpdate the x, y, and title labels (ggplot2::labs()).\nUpdate the colors with a nicer palette (ggplot2::scale_*).\nFix the position of the geoms by updating their position aesthetic.\nInterpret the plot\n\nWhat can you say about the expression of ACTIN and IFN?\nWhat can you say about the mutant and wild-type cells?"
  },
  {
    "objectID": "problem-sets/ps-13.html",
    "href": "problem-sets/ps-13.html",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "",
    "text": "-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'janitor'\n\n\nThe following object is masked from 'package:rstatix':\n\n    make_clean_names\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00FC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DF&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C5&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E5&gt;' to native encoding\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1, 6, 9, 14, 15, 24:28)]\nbiochem &lt;- biochem[, keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\", \"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb &lt;- inner_join(biochem, weight, by = \"subject_name\") |&gt;\n  na.omit() |&gt;\n  rename(sex = gender)"
  },
  {
    "objectID": "problem-sets/ps-13.html#problem-1",
    "href": "problem-sets/ps-13.html#problem-1",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Problem # 1",
    "text": "Problem # 1\nIs there an association between mouse calcium and sodium levels?\n1. Make a scatterplot to inspect variable\n2. Are they normal (enough)?\nWhich test will you use and why?\n\n\n\n3. Declare null hypothesis \\(\\mathcal{H}_0\\)\n\n\\(\\mathcal{H}_0\\) is that there is no dependency/association between \\(calcium\\) and \\(sodium\\)\n4. Calculate and plot the correlation on a scatterplot"
  },
  {
    "objectID": "problem-sets/ps-13.html#problem-2",
    "href": "problem-sets/ps-13.html#problem-2",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Problem # 2",
    "text": "Problem # 2"
  },
  {
    "objectID": "problem-sets/ps-13.html#do-mouse-calcium-levels-explain-mouse-sodium-levels-if-so-to-what-extent",
    "href": "problem-sets/ps-13.html#do-mouse-calcium-levels-explain-mouse-sodium-levels-if-so-to-what-extent",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Do mouse calcium levels explain mouse sodium levels? If so, to what extent?",
    "text": "Do mouse calcium levels explain mouse sodium levels? If so, to what extent?\nUse a linear model to do the following:\n1. Specify the Response and Explanatory variables — (2 pts)\n\nThe response variable y is The explantory variable x is\n\n2. Declare the null hypothesis — (1 pts)\n\nThe null hypothesis is …\n\n3. Use the lm function to create a fit (linear model)\nalso save the slope and intercept for later\n4. Add residuals to the data and create a plot visualizing the residuals\n5. Calculate the \\(R^2\\) and compare to \\(R^2\\) from fit\n\\(R^2 = 1 - \\displaystyle \\frac {SS_{fit}}{SS_{null}}\\)\n\\(SS_{fit} = \\sum_{i=1}^{n} (data - line)^2 = \\sum_{i=1}^{n} (y_{i} - (\\beta_0 \\cdot 1+ \\beta_1 \\cdot x)^2\\)\n\\(SS_{null}\\) &lt;80&gt;&lt;94&gt; sum of squared errors around the mean of \\(y\\)\n\\(SS_{null} = \\sum_{i=1}^{n} (data - mean)^2 = \\sum_{i=1}^{n} (y_{i} - \\overline{y})^2\\)\n6. Using \\(R^2\\), describe the extent to which calcium explains sodium levels\n\n\n\n7. Report (do not calculate) the \\(p-value\\) and your decision on the null\n\nThe null hypothesis is …\n\nCalcium levels to predict sodium levels."
  },
  {
    "objectID": "problem-sets/ps-13.html#problem-3",
    "href": "problem-sets/ps-13.html#problem-3",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Problem # 3",
    "text": "Problem # 3\nWhat is the association between mouse weight and age levels for different sexes?\n1. Calculate the pearson correlation coefficient between weight and age for females and males\n2. Describe your observations\n\nThe relationship between weight and age…"
  },
  {
    "objectID": "problem-sets/ps-07.html",
    "href": "problem-sets/ps-07.html",
    "title": "R Bootcamp Problem Set 6",
    "section": "",
    "text": "Use the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 12pm on Sept 1."
  },
  {
    "objectID": "problem-sets/ps-07.html#problem-set",
    "href": "problem-sets/ps-07.html#problem-set",
    "title": "R Bootcamp Problem Set 6",
    "section": "",
    "text": "Use the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 12pm on Sept 1."
  },
  {
    "objectID": "problem-sets/ps-07.html#grading-rubric",
    "href": "problem-sets/ps-07.html#grading-rubric",
    "title": "R Bootcamp Problem Set 6",
    "section": "Grading rubric",
    "text": "Grading rubric\n\nEverything is good: full points\nPartially correct answer: depends on how many steps are correct\nReasonable attempt: half points"
  },
  {
    "objectID": "problem-sets/ps-07.html#libraries",
    "href": "problem-sets/ps-07.html#libraries",
    "title": "R Bootcamp Problem Set 6",
    "section": "Libraries",
    "text": "Libraries\nLoad the libraries you need for analysis below."
  },
  {
    "objectID": "problem-sets/ps-07.html#question-1---5-points",
    "href": "problem-sets/ps-07.html#question-1---5-points",
    "title": "R Bootcamp Problem Set 6",
    "section": "Question 1 - 5 points\n",
    "text": "Question 1 - 5 points\n\nRun the following chunk:\n\nset.seed(42)\nx &lt;- sample(1000, replace = TRUE)\n\nNow use logical indexing to find the number of values &gt; 450 in x."
  },
  {
    "objectID": "problem-sets/ps-07.html#question-2---5-points",
    "href": "problem-sets/ps-07.html#question-2---5-points",
    "title": "R Bootcamp Problem Set 6",
    "section": "Question 2 - 5 points\n",
    "text": "Question 2 - 5 points\n\nCount the number of species in the penguins tibble using forcats::fct_count()\nCount number of island + sex combinations using dplyr::count(), and sort the result by count."
  },
  {
    "objectID": "problem-sets/ps-07.html#question-3---5-points",
    "href": "problem-sets/ps-07.html#question-3---5-points",
    "title": "R Bootcamp Problem Set 6",
    "section": "Question 3 - 5 points\n",
    "text": "Question 3 - 5 points\n\nUse stringr::str_c() to combine upper and lowercase letters from letters and LETTERS with a slash.\nYour answer should look like: \"A/a\" \"B/b\" \"C/c\" etc.\nUse stringr::str_split() or one of its variants to split up the strings you made above and extract the letter after the slash."
  },
  {
    "objectID": "problem-sets/ps-07.html#question-4---5-points",
    "href": "problem-sets/ps-07.html#question-4---5-points",
    "title": "R Bootcamp Problem Set 6",
    "section": "Question 4 - 5 points\n",
    "text": "Question 4 - 5 points\n\nCreate a ggplot using the diamonds data set.\n\nGenerate a ggridges::geom_density_ridges() for the prices, with a different fill color for each cut.\nRecolor the densities using ggplot2::scale_fill_brewer(), choosing a specific palette.\nmake the outline of the densities black, and change their alpha to 0.2.\nchange the theme to cowplot::theme_minimal_grid()\n\nremove the legend (google: “remove legend from ggplot2”)\nadd an informative title and subtitle using ggplot2::labs()."
  },
  {
    "objectID": "problem-sets/ps-07.html#submit",
    "href": "problem-sets/ps-07.html#submit",
    "title": "R Bootcamp Problem Set 6",
    "section": "Submit",
    "text": "Submit\nBe sure to click the “Render” button to render the HTML output.\nThen paste the URL of this Posit Cloud project into the problem set on Canvas."
  },
  {
    "objectID": "problem-sets/ps-05.html",
    "href": "problem-sets/ps-05.html",
    "title": "R Bootcamp - Problem Set 5 (Extreme aRt)",
    "section": "",
    "text": "Your objective is to create some new extreme art using R, something either ugly or sublime. What you cannot do is be boring; your goal is to stay on the fringe.\nYour submission (a quarto/Rmarkdown file) is due Tues Sept 5 by 12pm. If you submit an entry, you’ll get full credit on the problem set. Entries will be anonymized and winners will selected by popular vote."
  },
  {
    "objectID": "problem-sets/ps-05.html#extreme-art-objective",
    "href": "problem-sets/ps-05.html#extreme-art-objective",
    "title": "R Bootcamp - Problem Set 5 (Extreme aRt)",
    "section": "",
    "text": "Your objective is to create some new extreme art using R, something either ugly or sublime. What you cannot do is be boring; your goal is to stay on the fringe.\nYour submission (a quarto/Rmarkdown file) is due Tues Sept 5 by 12pm. If you submit an entry, you’ll get full credit on the problem set. Entries will be anonymized and winners will selected by popular vote."
  },
  {
    "objectID": "problem-sets/ps-05.html#favorite-rtists",
    "href": "problem-sets/ps-05.html#favorite-rtists",
    "title": "R Bootcamp - Problem Set 5 (Extreme aRt)",
    "section": "Favorite Rtists",
    "text": "Favorite Rtists\nHere are some of my favorite generative artists who use R. Be inspired!\n\nDanielle Navarro [Art] [Github]\n\nIjeamaka Anyene [Github] and this study in particular.\nClaus Wilke [Art] [Github], a biologist at UT Austin who also wrote the book on data visualization (it’s excellent).\nThomas Lin Pederesen [Art] [Github]. I have some of his pieces in my office.\ninconvergent [Art]. It’s lisp, not R. But it’s so good.\n\nThere are several resources for color palettes, an important component of any hideous or beautiful creation.\n\nThe section in Data Viz for R on color is worth a read.\nThe colors in e.g. scale_color_brewer come from Cynthia Brewer, a cartographer who makes visually informative maps.\n\ncolor-hex has collections of complementary color palettes.\n\nThere are also several R packages that may help you build Rtistic plots.\n\n\ngganimate provides tools to bring your plots to life.\n\nggforce provides interesting geoms that build on ggplot2.\n\npatchwork provides layout functions for plots."
  },
  {
    "objectID": "problem-sets/ps-05.html#informative-but-boring.",
    "href": "problem-sets/ps-05.html#informative-but-boring.",
    "title": "R Bootcamp - Problem Set 5 (Extreme aRt)",
    "section": "Informative, but boring.",
    "text": "Informative, but boring.\nThis is an informative but relatively boring plot. NOT THE GOAL HERE.\n\nCodelibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(cowplot)\n\npenguins_clean &lt;- drop_na(penguins)\n\nggplot(\n  penguins_clean,\n  aes(\n    x = body_mass_g / 1000,\n    y = bill_length_mm\n  )\n) +\n  geom_point(\n    aes(\n      shape = sex,\n      color = species\n    )\n  ) +\n  facet_grid(~island) +\n  theme_minimal_grid() +\n  scale_color_brewer(palette = \"Dark2\") +\n  labs(\n    title = \"Analysis of geographic isolation on penguin phenotypes\",\n    x = \"Body mass (kg)\",\n    y = \"Bill length (mm)\"\n  )"
  },
  {
    "objectID": "problem-sets/ps-05.html#ugly-plots",
    "href": "problem-sets/ps-05.html#ugly-plots",
    "title": "R Bootcamp - Problem Set 5 (Extreme aRt)",
    "section": "Ugly Plots",
    "text": "Ugly Plots\nYikes. We can thank Yunus Ozekin for this abomination.\n\nCodelibrary(tidyverse)\ntitanic_tbl &lt;- as_tibble(Titanic)\n\nggplot(\n  titanic_tbl,\n  aes(\n    x = Survived,\n    y = n,\n    color = Class,\n    shape = Sex,\n    size = 6\n  )\n) +\n  geom_jitter() +\n  scale_y_sqrt() +\n  labs(\n    x = \"Not Dead?\",\n    y = \"How many? (ppl)\",\n    title = \"WhO dIEd In titaNic?\",\n    caption = \"Some lived, some died.\"\n  ) +\n  scale_x_discrete(position = \"top\") +\n  theme(\n    axis.text.x = element_text(face = \"bold.italic\", color = \"#993333\", size = 18, angle = 180),\n    axis.text.y = element_text(face = \"bold\", color = \"orange\", size = 18, angle = 135),\n    plot.background = element_rect(fill = \"darkblue\"),\n    plot.title = element_text(face = \"italic\", color = \"green\", size = 48, angle = 183),\n    plot.caption = element_text(color = \"white\", size = 22),\n    axis.title.x = element_text(size = 22, color = \"pink\", angle = 12),\n    axis.title.y = element_text(color = \"yellow\", angle = 273, size = 17),\n    legend.background = element_rect(fill = \"yellow\"),\n    legend.title = element_text(angle = 71, face = \"bold\", color = \"purple\", size = 12),\n    legend.key = element_rect(color = \"green\", fill = \"orange\"),\n    legend.text = element_text(color = \"red\", size = 14),\n    panel.background = element_rect(fill = \"yellow\"),\n    panel.grid.major.y = element_line(color = \"green\", linetype = \"dotdash\", linewidth = 1.2),\n    panel.grid.major.x = element_line(color = \"purple\", linewidth = 3, linetype = \"twodash\"),\n    panel.grid.minor = element_line(color = \"red\", linewidth = 2, linetype = \"dashed\"),\n    legend.position = \"bottom\"\n  )"
  },
  {
    "objectID": "problem-sets/ps-05.html#beautiful-plots",
    "href": "problem-sets/ps-05.html#beautiful-plots",
    "title": "R Bootcamp - Problem Set 5 (Extreme aRt)",
    "section": "Beautiful Plots",
    "text": "Beautiful Plots\nThis is a piece from Ijeamaka Anyene’s ode to coord_polar() (link above). Reminds me of Miro.\n\nCodelibrary(tidyverse)\n\napply_pattern_theme &lt;- function(bg_hex, caption_hex) {\n  theme(\n    plot.background = element_rect(fill = bg_hex),\n    panel.background = element_rect(fill = bg_hex),\n    panel.grid = element_blank(),\n    plot.caption = element_text(\n      family = \"Open Sans\",\n      size = 6,\n      color = caption_hex\n    ),\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank()\n  )\n}\n\noutline &lt;- tibble(\n  x = 1, xend = 7,\n  y = 15, yend = 15\n)\nsegment_line &lt;- tibble(\n  x = c(1, 7), xend = c(1, 7),\n  y = c(0, 2), yend = 15\n)\narea &lt;- tibble(\n  x = c(3, 5, 6),\n  y = c(5, 7.5, 2),\n  type = LETTERS[1:3]\n)\npalette_values &lt;- c(\"#2a2640\", \"#a64e46\", \"#f29544\")\nggplot() +\n  geom_col(\n    data = area,\n    aes(x = x, y = y, fill = type),\n    alpha = 0.75,\n    width = 4\n  ) +\n  geom_segment(\n    data = outline,\n    aes(\n      x = x, y = y,\n      xend = xend, yend = yend\n    ),\n    size = 0.5\n  ) +\n  geom_segment(\n    data = segment_line,\n    aes(\n      x = x, xend = xend,\n      y = y, yend = yend\n    ),\n    size = 0.5\n  ) +\n  geom_point(aes(x = 5, y = 0)) +\n  scale_fill_manual(values = palette_values) +\n  scale_y_continuous(limits = c(0, 15)) +\n  scale_x_continuous(limits = c(1, 10)) +\n  coord_polar() +\n  labs(caption = \"Ijeamaka Anyene | @ijeamaka_a\") +\n  apply_pattern_theme(\n    bg_hex = \"#ded5c9\",\n    caption_hex = \"black\"\n  )\n\n\n\n\n\n\n\nHere’s another more complex geometric creation, again using coord_polar(). This will take a few seconds to render.\n\nCode# https://twitter.com/aschinchon/status/1095057262744387587\nlibrary(tidyverse)\n\nxy &lt;- seq(-2, 2, by = .005)\nexpand.grid(x = xy, y = xy) |&gt;\n  ggplot(\n    aes(\n      x = (cos(x)^2 + sin(y^2)),\n      y = (sin(y)^3 - cos(x^2))\n    )\n  ) +\n  geom_point(alpha = .01, shape = 20, size = 0) +\n  theme_void() +\n  coord_polar()"
  },
  {
    "objectID": "problem-sets/ps-03.html",
    "href": "problem-sets/ps-03.html",
    "title": "R Bootcamp Problem Set 3",
    "section": "",
    "text": "Start by loading libraries you need analysis in the code chunk below. When in doubt, start by loading the tidyverse package."
  },
  {
    "objectID": "problem-sets/ps-03.html#setup",
    "href": "problem-sets/ps-03.html#setup",
    "title": "R Bootcamp Problem Set 3",
    "section": "",
    "text": "Start by loading libraries you need analysis in the code chunk below. When in doubt, start by loading the tidyverse package."
  },
  {
    "objectID": "problem-sets/ps-03.html#problem-set",
    "href": "problem-sets/ps-03.html#problem-set",
    "title": "R Bootcamp Problem Set 3",
    "section": "Problem Set",
    "text": "Problem Set\nEach problem below is worth 5 points.\nUse the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 12pm on Aug 31.\nGrading rubric\n\nEverything is good: 5 points\nPartially correct answers: 3-4 points\nReasonable attempt: 2 points"
  },
  {
    "objectID": "problem-sets/ps-03.html#question-1",
    "href": "problem-sets/ps-03.html#question-1",
    "title": "R Bootcamp Problem Set 3",
    "section": "Question 1",
    "text": "Question 1\nLoad the palmerpenguins package. Inspect the penguins tibble with summary.\nUse drop_na() to remove rows with NA values in the penguins tibble. How many rows were removed from the tibble?\nThen, use replace_na() to replace NA values in bill_length_mm and bill_depth_mm with a value of 0."
  },
  {
    "objectID": "problem-sets/ps-03.html#question-2",
    "href": "problem-sets/ps-03.html#question-2",
    "title": "R Bootcamp Problem Set 3",
    "section": "Question 2",
    "text": "Question 2\nUse arrange, filter, and select on a dataframe. Do the following, in order:\n\nImport the data set data/data_transcript_exp_tidy.csv.\nSort the tibble by expression data (count) from highest to lowest level.\nFilter the tibble by count &gt; 100\nSelect all columns except for type"
  },
  {
    "objectID": "problem-sets/ps-03.html#question-3",
    "href": "problem-sets/ps-03.html#question-3",
    "title": "R Bootcamp Problem Set 3",
    "section": "Question 3",
    "text": "Question 3\nHow will you:\n\ncreate a new column log10count that contains log10 transformed count values and\nrearrange the columns in the following order: ensembl_transcript_id, type, time, replicate, count, log10count.\n\n(Note that we have dropped extra)\nHint: Use mutate and select"
  },
  {
    "objectID": "problem-sets/ps-03.html#question-4",
    "href": "problem-sets/ps-03.html#question-4",
    "title": "R Bootcamp Problem Set 3",
    "section": "Question 4",
    "text": "Question 4\nCalculate a per-transcript sum, while keeping the time information?\nHint: Use group_by with multiple variables, and summarise the “count” values using sum()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MOLB 7950: Informatics and Statistics for Molecular Biology",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the semester. Note that this schedule will be updated as the semester progresses, with all changes documented here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMOLB 7950 - Fall 2024 Schedule\n\n\nClasses held in-person from 9:00-10:30am\n\n\n\nDate\nBlock\nTopic\nInstructor\nLocation\nTitle\n\nLinks\n\n\n\nPrepare\nSlides\nExercises\nHW\nKey\n\n\n\n\nWeek 1\n\n\n01\nMon, Aug 26, 2024\nBootcamp\nR\nTaliaferro\nEd2N 2106\nIntro to R & RStudio\n📖\n📃\n💪\n🧠\n.\n\n\n02\nTue, Aug 27, 2024\nBootcamp\nR\nTaliaferro\nEd1 1400\nTidy data & tidyr\n.\n📃\n💪\n🧠\n.\n\n\n03\nWed, Aug 28, 2024\nBootcamp\nR\nTaliaferro\nEd2N 2102\ndplyr\n.\n📃\n💪\n🧠\n.\n\n\n04\nThu, Aug 29, 2024\nBootcamp\nR\nTaliaferro\nAHSB 2200\nggplot2\n.\n📃\n💪\n🧠\n.\n\n\n05\nFri, Aug 30, 2024\nBootcamp\nR\nTaliaferro\nEd1 1400\nggplot2\n.\n📃\n💪\n🧠\n.\n\n\nWeek 2\n\n\n06\nMon, Sep 2, 2024\n-\n-\n-\nNA\nNO CLASS: LABOR DAY\n.\n.\n.\n.\n.\n\n\n07\nTue, Sep 3, 2024\nBootcamp\nR\nTaliaferro\nEd1 1400\ntidyverse odds & ends\n.\n📃\n💪\n🧠\n.\n\n\n08\nWed, Sep 4, 2024\nBootcamp\nR\nTaliaferro\nEd1 1400\nputting it all together\n.\n📃\n💪\n.\n.\n\n\n09\nThu, Sep 5, 2024\nBootcamp\nR\nTaliaferro\nEd1 1400\nputting it all together\n.\n.\n💪\n🧠\n.\n\n\n10\nFri, Sep 6, 2024\nBootcamp\nStatistics\nRamachandran\nAHSB 2200\nStats intro and history\n.\n📃\n💪\n.\n.\n\n\nWeek 3\n\n\n11\nMon, Sep 9, 2024\nBootcamp\nStatistics\nRamachandran\nAHSB 2201\nProbability and descriptive stats\n📖\n📃\n💪\n🧠\n.\n\n\n12\nTue, Sep 10, 2024\nBootcamp\nStatistics\nRamachandran\nEd1 1400\nHypothesis testing\n.\n📃\n💪\n🧠\n.\n\n\n13\nWed, Sep 11, 2024\nBootcamp\nStatistics\nRamachandran\nAHSB 2201\nHypothesis testing\n.\n📃\n💪\n🧠\n.\n\n\n14\nThu, Sep 12, 2024\nBootcamp\nStatistics\nMukherjee\nAHSB 2201\nExploratory data analysis\n.\n📃\n💪\n🧠\n.\n\n\n15\nFri, Sep 13, 2024\nBootcamp\nStatistics\nMukherjee\nAHSB 2201\nBig data concerns\n.\n📃\n💪\n🧠\n.\n\n\nWeek 4\n\n\n16\nMon, Sep 16, 2024\nDNA\nMapping chromatin structure and transactions\nRamachandran\nAHSB 2201\nExperimental overview\n📖\n.\n.\n.\n.\n\n\n17\nWed, Sep 18, 2024\nDNA\nChromatin-centric methods\nRamachandran\nAHSB 2201\nInformation from fragment length distributions\n.\n.\n.\n.\n.\n\n\n18\nFri, Sep 20, 2024\nDNA\nChromatin-centric methods\nRamachandran\nAHSB 2201\nMeta-plots and heatmaps\n.\n.\n.\n.\n.\n\n\nWeek 5\n\n\n19\nMon, Sep 23, 2024\nDNA\nWhere do proteins bind in the genome?\nRamachandran\nAHSB 2201\nExperimental overview\n📖\n.\n.\n.\n.\n\n\n20\nWed, Sep 25, 2024\nDNA\nFactor-centric methods\nRamachandran\nAHSB 2201\nPeak calling\n.\n.\n.\n.\n.\n\n\n21\nFri, Sep 27, 2024\nDNA\nFactor-centric methods\nRamachandran\nAHSB 2201\nSequence motif analysis\n.\n.\n.\n.\n.\n\n\nWeek 6\n\n\n22\nMon, Sep 30, 2024\nRNA\nRNA-seq Overview\nTaliaferro\nAHSB 2201\nConcepts and techniques\n📖\n.\n.\n.\n.\n\n\n23\nWed, Oct 2, 2024\nRNA\nImport, filtering, QC\nTaliaferro\nAHSB 2201\nmetrics and sample similarity\n.\n.\n.\n.\n.\n\n\n24\nFri, Oct 4, 2024\nRNA\nDifferential Gene Expression\nTaliaferro\nAHSB 2201\nDESeq2\n.\n.\n.\n.\n.\n\n\nWeek 7\n\n\n25\nMon, Oct 7, 2024\nRNA\nAlternative Splicing\nTaliaferro\nAHSB 2201\n-\n.\n.\n.\n.\n.\n\n\n26\nWed, Oct 9, 2024\nRNA\nReview Proposals\nTaliaferro\nAHSB 2201\nReview Proposals\n.\n.\n.\n.\n.\n\n\n27\nFri, Oct 11, 2024\n-\nRBP-RNA 1\nTaliaferro\nAHSB 2201\nCLIP-seq\n.\n.\n.\n.\n.\n\n\nWeek 8\n\n\n28\nMon, Oct 14, 2024\nRNA\nRBP-RNA 2\nTaliaferro\nAHSB 2201\nData integrations\n.\n.\n.\n.\n.\n\n\n29\nWed, Oct 16, 2024\nRNA\nLong-read sequencing\nHesselberth\nAHSB 2201\n-\n📖\n.\n.\n.\n.\n\n\n30\nFri, Oct 18, 2024\nRNA\n-\n-\nNA\nNO CLASS: CSDV RETREAT\n.\n.\n.\n.\n.\n\n\nWeek 9\n\n\n31\nMon, Oct 21, 2024\nRNA\nSingle-cell\nRiemondy\nAHSB 2201\n-\n📖\n.\n.\n.\n.\n\n\n32\nWed, Oct 23, 2024\nRNA\nSingle-cell\nRiemondy\nAHSB 2201\n-\n.\n.\n.\n.\n.\n\n\n33\nFri, Oct 25, 2024\n-\n-\n-\nNA\nNO CLASS: MOLB RETREAT\n.\n.\n.\n.\n.\n\n\nWeek 10\n\n\n34\nMon, Oct 28, 2024\nFinal\n-\n-\nAHSB 2201\nFinal project presentations\n.\n.\n.\n.\n.\n\n\n35\nWed, Oct 30, 2024\nFinal\n-\n-\nAHSB 2201\nFinal project presentations\n.\n.\n.\n.\n.",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "problem-sets/ps-01.html",
    "href": "problem-sets/ps-01.html",
    "title": "R Bootcamp Problem Set 1",
    "section": "",
    "text": "Each problem below is worth 10 points.\nThe problem set is due 12pm on Aug 30.\n\n\nEverything is good: 10 points\nPartially correct answers: 6-8 points\nReasonable attempt: 4 points"
  },
  {
    "objectID": "problem-sets/ps-01.html#problem-set",
    "href": "problem-sets/ps-01.html#problem-set",
    "title": "R Bootcamp Problem Set 1",
    "section": "",
    "text": "Each problem below is worth 10 points.\nThe problem set is due 12pm on Aug 30.\n\n\nEverything is good: 10 points\nPartially correct answers: 6-8 points\nReasonable attempt: 4 points"
  },
  {
    "objectID": "problem-sets/ps-01.html#setup",
    "href": "problem-sets/ps-01.html#setup",
    "title": "R Bootcamp Problem Set 1",
    "section": "Setup",
    "text": "Setup\nStart by loading libraries you need analysis in the code chunk below. When in doubt, start by loading the tidyverse package."
  },
  {
    "objectID": "problem-sets/ps-01.html#question-1",
    "href": "problem-sets/ps-01.html#question-1",
    "title": "R Bootcamp Problem Set 1",
    "section": "Question 1",
    "text": "Question 1\nCreate 3 different vectors called x, y, and z:\n\n\nx should be character vector of length 5\n\ny should be a numerica vector of length 5\n\nz should be a logical vector of length 5\n\nUse length() to calculate the length of each vector."
  },
  {
    "objectID": "problem-sets/ps-01.html#question-2",
    "href": "problem-sets/ps-01.html#question-2",
    "title": "R Bootcamp Problem Set 1",
    "section": "Question 2",
    "text": "Question 2\nUsing the vectors you created above, create a new tibble with column names x, y, and z.\nUse nrow() and ncol() to calculate the number of rows and columns.\nWhat do you notice about the length of the vectors and the number of rows?\nAnswer here"
  },
  {
    "objectID": "problem-sets/ps-01.html#submit",
    "href": "problem-sets/ps-01.html#submit",
    "title": "R Bootcamp Problem Set 1",
    "section": "Submit",
    "text": "Submit\nBe sure to click the “Render” button to render the HTML output.\nThen paste the URL of this Posit Cloud project into the problem set on Canvas."
  },
  {
    "objectID": "course-info/final-projects.html",
    "href": "course-info/final-projects.html",
    "title": "MOLB 7950 – Final Projects",
    "section": "",
    "text": "Please submit a short proposal for your final projects with the following information.\n\nthe names of people you are working with\na description of the data set you will be working worth. This can refer to a publication and/or contain a link to public data available at NCBI GEO.\na hypothesis (tentative) you will be testing\na few bullets on your planned analysis approach.\n\nPlease include this information in a quarto document in a new Posit cloud project.",
    "crumbs": [
      "Assignments",
      "Final Project Overview"
    ]
  },
  {
    "objectID": "course-info/final-projects.html#short-proposal",
    "href": "course-info/final-projects.html#short-proposal",
    "title": "MOLB 7950 – Final Projects",
    "section": "",
    "text": "Please submit a short proposal for your final projects with the following information.\n\nthe names of people you are working with\na description of the data set you will be working worth. This can refer to a publication and/or contain a link to public data available at NCBI GEO.\na hypothesis (tentative) you will be testing\na few bullets on your planned analysis approach.\n\nPlease include this information in a quarto document in a new Posit cloud project.",
    "crumbs": [
      "Assignments",
      "Final Project Overview"
    ]
  },
  {
    "objectID": "course-info/final-projects.html#overview",
    "href": "course-info/final-projects.html#overview",
    "title": "MOLB 7950 – Final Projects",
    "section": "Overview",
    "text": "Overview\n\nFinal projects can involve groups of 1-3 people.\nProjects are choose your own adventure:\n\nThe resource documents contain data sets in from human S. cerevisiae. For example, sub-nucleosomal fragments provide a DNA-based signal to understand chromatin transactions that lead to transcription.\nYou could find a data set on NCBI GEO of interest (e.g., relevant to your thesis work), and work it up with salmon, DEseq, and exploratory analysis. We are happy to help you work through the pseudo-alignment steps.\nYou can start with your own sequencing data (bulk/single-cell RNA seq, DNA sequencing).",
    "crumbs": [
      "Assignments",
      "Final Project Overview"
    ]
  },
  {
    "objectID": "course-info/final-projects.html#deliverables",
    "href": "course-info/final-projects.html#deliverables",
    "title": "MOLB 7950 – Final Projects",
    "section": "Deliverables",
    "text": "Deliverables\n\nA Quarto document with code, plots, interpretations, and next steps.\nIf you work in a group, list the members of the group at the top of the document, and make it clear which parts are your work by adding your initials to code chunks.\nShort presentations (5-8 minutes) by the groups the week of Nov 1. Presentations should include 1-2 slides of background, a hypothesis for the approach, code output (table or graph) that addresses the hypothesis, and one or more tests of the statistical significance of the observation.",
    "crumbs": [
      "Assignments",
      "Final Project Overview"
    ]
  },
  {
    "objectID": "course-info/final-projects.html#grading-and-rubric",
    "href": "course-info/final-projects.html#grading-and-rubric",
    "title": "MOLB 7950 – Final Projects",
    "section": "Grading and rubric",
    "text": "Grading and rubric\nThe final project will be worth 20% of your grade and we will use the grading scheme outlined in the grading rubric.\nEach individual in a group will be evaluated separately, so contributions must be clearly marked in the document, using e.g. using chunk labels:\n\n```{r}\n#| label: plotting-code-by-jay-h\n#| eval: false\nggplot(mtcars, aes(hp, mpg)) +\n  geom_point()\n```",
    "crumbs": [
      "Assignments",
      "Final Project Overview"
    ]
  },
  {
    "objectID": "zzz.html",
    "href": "zzz.html",
    "title": "dummy file so that downlit ends up",
    "section": "",
    "text": "dummy file so that downlit ends up\n\n\nin the renv lock file.\n\nlibrary(downlit)"
  },
  {
    "objectID": "resources/block-rna-resources.html",
    "href": "resources/block-rna-resources.html",
    "title": "Resources for the RNA block",
    "section": "",
    "text": "The paper describing salmon and its approach to transcriptome quantification\nThe documentation for salmon\nThe documentation for tximport",
    "crumbs": [
      "Resources",
      "RNA Block resources"
    ]
  },
  {
    "objectID": "resources/block-rna-resources.html#software",
    "href": "resources/block-rna-resources.html#software",
    "title": "Resources for the RNA block",
    "section": "",
    "text": "The paper describing salmon and its approach to transcriptome quantification\nThe documentation for salmon\nThe documentation for tximport",
    "crumbs": [
      "Resources",
      "RNA Block resources"
    ]
  },
  {
    "objectID": "prepare/prepare-31.html",
    "href": "prepare/prepare-31.html",
    "title": "Preparation for scRNA-seq analysis",
    "section": "",
    "text": "Important\n\n\n\nYou will need to review this material before class 31."
  },
  {
    "objectID": "prepare/prepare-31.html#experimental-methods",
    "href": "prepare/prepare-31.html#experimental-methods",
    "title": "Preparation for scRNA-seq analysis",
    "section": "Experimental methods",
    "text": "Experimental methods\nIn this section we will analyze data generated by the 10x Genomics Chromium scRNA-seq platform. The following paper introduces the technology:\nZheng GXY, Terry JM, Belgrader P, et al. Massively parallel digital transcriptional profiling of single cells. Nat Communications. 2017;8:ncomms14049. https://doi.org/10.1038/ncomms14049 [Link]."
  },
  {
    "objectID": "prepare/prepare-22.html",
    "href": "prepare/prepare-22.html",
    "title": "Preparation for RNA-seq analysis",
    "section": "",
    "text": "Important\n\n\n\nYou will need to review this material before class 23.\n\n\n\nPapers we will discuss in the block\nWe’ll use data from the following studies in the RNA-seq section.\nHubbard KS, Gut IM, Lyman ME, McNutt PM. Longitudinal RNA sequencing of the deep transcriptome during neurogenesis of cortical glutamatergic neurons from murine ESCs. F1000Res. 2013 PMID: 24358889; PMCID: PMC3829120. [Link]"
  },
  {
    "objectID": "prepare/prepare-16.html",
    "href": "prepare/prepare-16.html",
    "title": "Preparation for the DNA Block",
    "section": "",
    "text": "Important\n\n\n\nYou will need to review this material before class 17.\n\n\n\nPapers we will discuss in the block\nWe’ll use data from the following studies in chromatin accessibility section.\nSchep AN, Buenrostro JD, Denny SK, Schwartz K, Sherlock G, Greenleaf WJ. Structured nucleosome fingerprints enable high-resolution mapping of chromatin architecture within regulatory regions. Genome Res. 2015 PMID: 26314830; PMCID: PMC4617971 [Link]\nZentner GE, Henikoff S. Mot1 redistributes TBP from TATA-containing to TATA-less promoters. Mol Cell Biol. 2013 PMID: 24144978; PMCID: PMC3889552. [Link]\n\n\nNew software we will use in the block\nGViz enables visualization of genomic signals in a “track” format. Review the GViz vignette, especially the “Basic Features” section, which provides an overview.\nvalr is a tool set for genome interval manipulation with R. Read over the “Getting Started” to get a sense of the tools and the types of analysis they enable.\nComplexHeatmap provides a flexible framework for generating heatmaps. Look over the “A Single Heatmap” section (section 2)."
  },
  {
    "objectID": "course-info/team.html",
    "href": "course-info/team.html",
    "title": "MOLB 7950 — Teaching Team",
    "section": "",
    "text": "Instructor\nE-mail\nSchedule a meeting\n\n\n\n\n\nMatthew Taliaferro\n\n\n\n\n\nSrinivas Ramachandran\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstructor\nE-mail\nSchedule a meeting\n\n\n\n\n\nChristina Akirtava\n\n\n\n\n\nCharlie Moffatt",
    "crumbs": [
      "Course information",
      "Teaching team"
    ]
  },
  {
    "objectID": "course-info/team.html#teaching-team-and-office-hours",
    "href": "course-info/team.html#teaching-team-and-office-hours",
    "title": "MOLB 7950 — Teaching Team",
    "section": "",
    "text": "Instructor\nE-mail\nSchedule a meeting\n\n\n\n\n\nMatthew Taliaferro\n\n\n\n\n\nSrinivas Ramachandran\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstructor\nE-mail\nSchedule a meeting\n\n\n\n\n\nChristina Akirtava\n\n\n\n\n\nCharlie Moffatt",
    "crumbs": [
      "Course information",
      "Teaching team"
    ]
  },
  {
    "objectID": "course-info/support.html",
    "href": "course-info/support.html",
    "title": "MOLB 7950 — Getting help",
    "section": "",
    "text": "Course discussion will be through the Slack MOLB7950 organization.\nGuidelines for using Slack:\n\nUse dedicated channels for discussion in #class, questions about your #problem-sets, and your #final-project\nYou can ask for help by tagging the TAs in the #class channel. If you post @ta help, someone will start a thread where you can ask a question.\nIf needed, we can talk face-to-face via the /zoom integration.\n\n\n\n\n\nOur TAs will be available Mon-Fri afternoons from 1-3pm.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-info/support.html#how-to-get-help",
    "href": "course-info/support.html#how-to-get-help",
    "title": "MOLB 7950 — Getting help",
    "section": "",
    "text": "Course discussion will be through the Slack MOLB7950 organization.\nGuidelines for using Slack:\n\nUse dedicated channels for discussion in #class, questions about your #problem-sets, and your #final-project\nYou can ask for help by tagging the TAs in the #class channel. If you post @ta help, someone will start a thread where you can ask a question.\nIf needed, we can talk face-to-face via the /zoom integration.\n\n\n\n\n\nOur TAs will be available Mon-Fri afternoons from 1-3pm.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "prepare/prepare-01.html",
    "href": "prepare/prepare-01.html",
    "title": "R Bootcamp",
    "section": "",
    "text": "Important\n\n\n\nBefore class begins, login with your CU credentials at Posit Cloud: https://sso.posit.cloud/cu-anschutz"
  },
  {
    "objectID": "prepare/prepare-01.html#prepare",
    "href": "prepare/prepare-01.html#prepare",
    "title": "R Bootcamp",
    "section": "Prepare",
    "text": "Prepare\n📖 Read the syllabus\n📖 Read the support resources\n📖 Look over the RStudio cheatsheet"
  },
  {
    "objectID": "prepare/prepare-19.html",
    "href": "prepare/prepare-19.html",
    "title": "Preparation for factor-centric chromatin analysis",
    "section": "",
    "text": "Important\n\n\n\nYou will need to review this material before class 20."
  },
  {
    "objectID": "prepare/prepare-19.html#experimental-methods",
    "href": "prepare/prepare-19.html#experimental-methods",
    "title": "Preparation for factor-centric chromatin analysis",
    "section": "Experimental methods",
    "text": "Experimental methods\nSkene PJ, Henikoff S. An efficient targeted nuclease strategy for high-resolution mapping of DNA binding sites. Elife. 2017 PMID: 28079019; PMCID: PMC5310842. [Link]\nKaya-Okur HS, Wu SJ, Codomo CA, Pledger ES, Bryson TD, Henikoff JG, Ahmad K, Henikoff S. CUT&Tag for efficient epigenomic profiling of small samples and single cells. Nat Commun. 2019 PMID: 31036827; PMCID: PMC6488672. [Link]"
  },
  {
    "objectID": "prepare/prepare-19.html#software-tools",
    "href": "prepare/prepare-19.html#software-tools",
    "title": "Preparation for factor-centric chromatin analysis",
    "section": "Software tools",
    "text": "Software tools\nMACS is the gold-standard in peak calling. It models read coverage as a Poisson process, enabling identification of regions of higher than expected coverage (i.e., peaks) to be identified using a single parmaeter (lambda) that captures the mean and variance of read coverage. Read over the paper to get a sense of how it works.\nWe’ll use the motifRG R library, which implements a discriminative (i.e., foreground / background) approach for motif discovery and answer the question, “Which sequences drive factor association to DNA?”."
  },
  {
    "objectID": "prepare/prepare-29.html",
    "href": "prepare/prepare-29.html",
    "title": "Preparation for long-read squencing",
    "section": "",
    "text": "These recent papers provide insights that could only be made with the information gleaned by long-read sequencing.\n\nLong-read RNA sequencing\nAlfonso-Gonzalez C, Legnini I, Holec S, Arrigoni L, Ozbulut HC, Mateos F, Koppstein D, Rybak-Wolf A, Bönisch U, Rajewsky N, Hilgers V. Sites of transcription initiation drive mRNA isoform selection. Cell. 2023 PMID: 37178687; PMCID: PMC10228280. [Link]\nChoquet K, Baxter-Koenigs AR, Dülk SL, Smalec BM, Rouskin S, Churchman LS. Pre-mRNA splicing order is predetermined and maintains splicing fidelity across multi-intronic transcripts. Nat Struct Mol Biol. 2023 Aug;30(8):1064-1076. doi: 10.1038/s41594-023-01035-2. Epub 2023 Jul 13. PMID: 37443198.\n\n\nLong-read DNA sequencing\nNurk S, Koren S, Rhie A, Rautiainen M, Bzikadze AV, Mikheenko A, Vollger MR, Altemose N, Uralsky L, Gershman A, Aganezov S, Hoyt SJ, Diekhans M, Logsdon GA, Alonge M, Antonarakis SE, Borchers M, Bouffard GG, Brooks SY, Caldas GV, Chen NC, Cheng H, Chin CS, Chow W, de Lima LG, Dishuck PC, Durbin R, Dvorkina T, Fiddes IT, Formenti G, Fulton RS, Fungtammasan A, Garrison E, Grady PGS, Graves-Lindsay TA, Hall IM, Hansen NF, Hartley GA, Haukness M, Howe K, Hunkapiller MW, Jain C, Jain M, Jarvis ED, Kerpedjiev P, Kirsche M, Kolmogorov M, Korlach J, Kremitzki M, Li H, Maduro VV, Marschall T, McCartney AM, McDaniel J, Miller DE, Mullikin JC, Myers EW, Olson ND, Paten B, Peluso P, Pevzner PA, Porubsky D, Potapova T, Rogaev EI, Rosenfeld JA, Salzberg SL, Schneider VA, Sedlazeck FJ, Shafin K, Shew CJ, Shumate A, Sims Y, Smit AFA, Soto DC, Sović I, Storer JM, Streets A, Sullivan BA, Thibaud-Nissen F, Torrance J, Wagner J, Walenz BP, Wenger A, Wood JMD, Xiao C, Yan SM, Young AC, Zarate S, Surti U, McCoy RC, Dennis MY, Alexandrov IA, Gerton JL, O’Neill RJ, Timp W, Zook JM, Schatz MC, Eichler EE, Miga KH, Phillippy AM. The complete sequence of a human genome. Science. 2022 PMID: 35357919; PMCID: PMC9186530. [Link]\nStergachis AB, Debo BM, Haugen E, Churchman LS, Stamatoyannopoulos JA. Single-molecule regulatory architectures captured by chromatin fiber sequencing. Science. 2020 Jun 26;368(6498):1449-1454. doi: 10.1126/science.aaz1646. PMID: 32587015."
  },
  {
    "objectID": "resources/block-dna-resources.html",
    "href": "resources/block-dna-resources.html",
    "title": "Resources for the DNA block",
    "section": "",
    "text": "These studies below laid the methodological groundwork for high throughput chromatin characterization by DNA sequencing. Some of the authors are here at CU Anschutz!\n\n\n\n\n\n\nTip\n\n\n\nData sets from these studies would be excellent choices as starting points for your final projects.\n\n\n\n\nHesselberth JR, Chen X, Zhang Z, Sabo PJ, Sandstrom R, Reynolds AP, Thurman RE, Neph S, Kuehn MS, Noble WS, Fields S, Stamatoyannopoulos JA. Global mapping of protein-DNA interactions in vivo by digital genomic footprinting. Nat Methods. 2009 19305407; PMCID: PMC2668528. [Link]\n\n\n\nBuenrostro JD, Giresi PG, Zaba LC, Chang HY, Greenleaf WJ. Transposition of native chromatin for fast and sensitive epigenomic profiling of open chromatin, DNA-binding proteins and nucleosome position. Nat Methods. 2013 PMID: 24097267; PMCID: PMC3959825. [Link]\n\n\n\nRamachandran S, Ahmad K, Henikoff S. Transcription and Remodeling Produce Asymmetrically Unwrapped Nucleosomal Intermediates. Mol Cell. 2017 PMID: 29225036; PMCID: PMC6421108. [Link]\n\n\n\nSkene PJ, Henikoff S. An efficient targeted nuclease strategy for high-resolution mapping of DNA binding sites. Elife. 2017 PMID: 28079019; PMCID: PMC5310842. [Link]\nKaya-Okur HS, Wu SJ, Codomo CA, Pledger ES, Bryson TD, Henikoff JG, Ahmad K, Henikoff S. CUT&Tag for efficient epigenomic profiling of small samples and single cells. Nat Commun. 2019 PMID: 31036827; PMCID: PMC6488672. [Link]",
    "crumbs": [
      "Resources",
      "DNA Block resources"
    ]
  },
  {
    "objectID": "resources/block-dna-resources.html#foundational-work",
    "href": "resources/block-dna-resources.html#foundational-work",
    "title": "Resources for the DNA block",
    "section": "",
    "text": "These studies below laid the methodological groundwork for high throughput chromatin characterization by DNA sequencing. Some of the authors are here at CU Anschutz!\n\n\n\n\n\n\nTip\n\n\n\nData sets from these studies would be excellent choices as starting points for your final projects.\n\n\n\n\nHesselberth JR, Chen X, Zhang Z, Sabo PJ, Sandstrom R, Reynolds AP, Thurman RE, Neph S, Kuehn MS, Noble WS, Fields S, Stamatoyannopoulos JA. Global mapping of protein-DNA interactions in vivo by digital genomic footprinting. Nat Methods. 2009 19305407; PMCID: PMC2668528. [Link]\n\n\n\nBuenrostro JD, Giresi PG, Zaba LC, Chang HY, Greenleaf WJ. Transposition of native chromatin for fast and sensitive epigenomic profiling of open chromatin, DNA-binding proteins and nucleosome position. Nat Methods. 2013 PMID: 24097267; PMCID: PMC3959825. [Link]\n\n\n\nRamachandran S, Ahmad K, Henikoff S. Transcription and Remodeling Produce Asymmetrically Unwrapped Nucleosomal Intermediates. Mol Cell. 2017 PMID: 29225036; PMCID: PMC6421108. [Link]\n\n\n\nSkene PJ, Henikoff S. An efficient targeted nuclease strategy for high-resolution mapping of DNA binding sites. Elife. 2017 PMID: 28079019; PMCID: PMC5310842. [Link]\nKaya-Okur HS, Wu SJ, Codomo CA, Pledger ES, Bryson TD, Henikoff JG, Ahmad K, Henikoff S. CUT&Tag for efficient epigenomic profiling of small samples and single cells. Nat Commun. 2019 PMID: 31036827; PMCID: PMC6488672. [Link]",
    "crumbs": [
      "Resources",
      "DNA Block resources"
    ]
  },
  {
    "objectID": "resources/block-dna-resources.html#software-well-use-in-class",
    "href": "resources/block-dna-resources.html#software-well-use-in-class",
    "title": "Resources for the DNA block",
    "section": "Software we’ll use in class",
    "text": "Software we’ll use in class\n\nRead over the GViz vignette to understand how we’ll use it to vissualize genome-scale data on a reference sequence.\nRead over the valr vignette to understand how we’ll do BEDtools-like (see below) analysis within RStudio.\nLook over the ComplexHeatmap and EnrichedHeatmap documentation, especially XXX. These tools will help us make “meta-plots”: figures that plot genomic signals relative to features.",
    "crumbs": [
      "Resources",
      "DNA Block resources"
    ]
  },
  {
    "objectID": "resources/block-dna-resources.html#other-important-tools",
    "href": "resources/block-dna-resources.html#other-important-tools",
    "title": "Resources for the DNA block",
    "section": "Other important tools",
    "text": "Other important tools\nThese are other tools I’ll mention in class. We’re not going to use them directly, but they are important tools in upstream data processing and analysis.\n\nAlignment software\nBowtie2 and BWA are popular choices for short read alignment. They are fast, free, and well-maintained.\n\n\nPeak calling\nMACS is the gold-standard in peak calling. It models read coverage as a Poisson process, straightforward identification of regions of higher than expected coverage (i.e., peaks) to be identified using a single parmaeter (lambda) that captures the mean and variance of read coverage.\n\n\nInterval analysis\n\nBEDtools is the “Swiss Army knife” of genome interval analysis. It provides a host of command-line tools that can be linked together for powerful genome signal manipulation.",
    "crumbs": [
      "Resources",
      "DNA Block resources"
    ]
  },
  {
    "objectID": "resources/block-dna-resources.html#experimental-rigor-in-chromatin-analysis",
    "href": "resources/block-dna-resources.html#experimental-rigor-in-chromatin-analysis",
    "title": "Resources for the DNA block",
    "section": "Experimental rigor in chromatin analysis",
    "text": "Experimental rigor in chromatin analysis\nThese studies identified pervasive artifacts in genomewide chromatin analysis and provide recommendations and solutions to the issues.\nTeytelman L, Thurtle DM, Rine J, van Oudenaarden A. Highly expressed loci are vulnerable to misleading ChIP localization of multiple unrelated proteins. Proc Natl Acad Sci U S A. 2013 Nov 12;110(46):18602-7. doi: 10.1073/pnas.1316064110. Epub 2013 Oct 30. PMID: 24173036; PMCID: PMC3831989.\nShah RN, Grzybowski AT, Cornett EM, Johnstone AL, Dickson BM, Boone BA, Cheek MA, Cowles MW, Maryanski D, Meiners MJ, Tiedemann RL, Vaughan RM, Arora N, Sun ZW, Rothbart SB, Keogh MC, Ruthenburg AJ. Examining the Roles of H3K4 Methylation States with Systematically Characterized Antibodies. Mol Cell. 2018 Oct 4;72(1):162-177.e7. doi: 10.1016/j.molcel.2018.08.015. Epub 2018 Sep 20. PMID: 30244833; PMCID: PMC6173622.",
    "crumbs": [
      "Resources",
      "DNA Block resources"
    ]
  },
  {
    "objectID": "resources/bootcamp-resources.html",
    "href": "resources/bootcamp-resources.html",
    "title": "Bootcamp resources",
    "section": "",
    "text": "Installing R\nInstalling RStudio\n\n\n\n\n\nAdvanced R\nComputational Genomics with R\nR for Data Science (R4DS)\nFundamentals of Data Visualization\n\nQuick reference:\n\nData tidying\nYour labels are too small.. Use cowplot themes to automatically adjust.\n\n\n\n\n\nThe Tidyverse is a collection of libaries implementing a principled approach to data analysis.\nBioconductor is a collection of libraries focused on biological data analysis.\nggplot2\ncowplot\nggthemes\n\n\n\n\nThe tidyverse cheat sheets are indispensible references.\nQuick reference:\n\nRStudio\nRmarkdown\ntidyr\ndplyr\nggplot2",
    "crumbs": [
      "Resources",
      "Bootcamp resources"
    ]
  },
  {
    "objectID": "resources/bootcamp-resources.html#r-rstudio",
    "href": "resources/bootcamp-resources.html#r-rstudio",
    "title": "Bootcamp resources",
    "section": "",
    "text": "Installing R\nInstalling RStudio\n\n\n\n\n\nAdvanced R\nComputational Genomics with R\nR for Data Science (R4DS)\nFundamentals of Data Visualization\n\nQuick reference:\n\nData tidying\nYour labels are too small.. Use cowplot themes to automatically adjust.\n\n\n\n\n\nThe Tidyverse is a collection of libaries implementing a principled approach to data analysis.\nBioconductor is a collection of libraries focused on biological data analysis.\nggplot2\ncowplot\nggthemes\n\n\n\n\nThe tidyverse cheat sheets are indispensible references.\nQuick reference:\n\nRStudio\nRmarkdown\ntidyr\ndplyr\nggplot2",
    "crumbs": [
      "Resources",
      "Bootcamp resources"
    ]
  },
  {
    "objectID": "resources/bootcamp-resources.html#statistics",
    "href": "resources/bootcamp-resources.html#statistics",
    "title": "Bootcamp resources",
    "section": "Statistics",
    "text": "Statistics\n\nPractical Statistics for Data Scientists covers several fundamental concepts with code for both R and Python.\nModern Statistics for Modern Biology is written by two leading figures in computational biology and contains several examples using Bioconductor.\nStatistics for Biologists is a collection of articles on statistical topic.",
    "crumbs": [
      "Resources",
      "Bootcamp resources"
    ]
  },
  {
    "objectID": "resources/bootcamp-resources.html#miscellaneous",
    "href": "resources/bootcamp-resources.html#miscellaneous",
    "title": "Bootcamp resources",
    "section": "Miscellaneous",
    "text": "Miscellaneous\n\nOrganizing projects\nHappy Git with R",
    "crumbs": [
      "Resources",
      "Bootcamp resources"
    ]
  },
  {
    "objectID": "prepare/prepare-11.html",
    "href": "prepare/prepare-11.html",
    "title": "Stats Bootcamp",
    "section": "",
    "text": "Watch the following videos from StatQuest (it will take ~15 mins to watch them all):"
  },
  {
    "objectID": "prepare/prepare-11.html#prepare",
    "href": "prepare/prepare-11.html#prepare",
    "title": "Stats Bootcamp",
    "section": "",
    "text": "Watch the following videos from StatQuest (it will take ~15 mins to watch them all):"
  },
  {
    "objectID": "course-info/problem-sets.html",
    "href": "course-info/problem-sets.html",
    "title": "MOLB 7950 — Problem Sets",
    "section": "",
    "text": "We reinforce concepts with problem sets assigned at the end of each class. During the main blocks, problem sets on Mon and Wed should take ~60 minutes to complete. Problems sets assigned on Friday will be more substantial, requiring ~1-2 hours to complete. Together the problem sets constitute 60% of your grade.\n\n\n\nProblem sets are distributed as Posit Cloud assignments. You will work on problem sets in an Rmarkdown document in the assignment. When complete, complete your assignment by submitting the URL from your Posit Cloud assignment into the assignment submission on Canvas. We will grade your problem directly in the Posit Cloud assignment.\n\n\n\n\n\n\n\n\n\n\nAssigned\nDue\nGrades By\nWho grades\nTime to complete (approx)\n\n\n\n\nMon @ 12pm\nTues @ 5pm\nWed @ 5pm\nInstructors / TAs\n60 min\n\n\nTue @ 12pm\nWed @ 5pm\nThurs @ 5pm\nInstructors / TAs\n60 min\n\n\nWed @ 12pm\nThurs @ 5pm\nFri @ 5pm\nInstructors / TAs\n60 min\n\n\nThurs @ 12pm\nFri @ 5pm\nTues @ 5pm\nInstructors / TAs\n60 min\n\n\nFri @ 12pm\nMon @ 5pm\nWed @ 5pm\nInstructors / TAs\n1-2 hr\n\n\n\n\n\n\nProblem sets are worth 60% of your grade. Values in parentheses represent point values for each level from 20 points total. This rubric will be assessed at the end of the semester.\n\n\n\n\n\n\n\n\n\nCriteria\nExpert\nCompetent\nNeeds Improvement\n\n\n\n\nCoding style\nStudent has gone beyond what was expected and required, coding manual is followed, code is well commented\nCoding style lacks refinement and has some errors, but code is readable and has some comments\nMany errors in coding style, little attention paid to making the code human readable\n\n\nCoding strategy\nComplicated problem broken down into sub-problems that are individually much simpler. Code is efficient, correct, and minimal. Code uses appropriate data structure (list, data frame, vector/matrix/array). Code checks for common errors\nCode is correct, but could be edited down to leaner code. Some “hacking” instead of using suitable data structure. Some checks for errors.\nCode tackles complicated problem in one big chunk. Code is repetitive and could easily be functionalized. No anticipation of errors.\n\n\nPresentation: graphs\nGraph(s) carefully tuned for desired purpose. One graph illustrates one point\nGraph(s) well chosen, but with a few minor problems: inappropriate aspect ratios, poor labels.\nGraph(s) poorly chosen to support questions.\n\n\nPresentation: tables\nTable(s) carefully constructed to make it easy to perform important comparisons. Careful styling highlights important features.\nTable(s) generally appropriate but possibly some minor formatting deficiencies.\nTable(s) with too many, or inconsistent, decimal places. Table(s) not appropriate for questions and findings. Major display problems.\n\n\nAchievement, mastery, cleverness, creativity\nStudent has gone beyond what was expected and required, e.g., extraordinary effort, additional tools not addressed by this course, unusually sophisticated application of tools from course.\nTools and techniques from the course are applied very competently and, perhaps,somewhat creatively. Chosen task was acceptable, but fairly conservative in ambition.\nStudent does not display the expected level of mastery of the tools and techniques in this course. Chosen task was too limited in scope.\n\n\nEase of access for instructor, compliance with course conventions for submitted work\nAccess as easy as possible, code runs!\nSatisfactory\nNot an earnest effort to reduce friction and comply with conventions and/or code does not run",
    "crumbs": [
      "Assignments",
      "Problet Set Overview"
    ]
  },
  {
    "objectID": "course-info/problem-sets.html#problem-set-overview",
    "href": "course-info/problem-sets.html#problem-set-overview",
    "title": "MOLB 7950 — Problem Sets",
    "section": "",
    "text": "We reinforce concepts with problem sets assigned at the end of each class. During the main blocks, problem sets on Mon and Wed should take ~60 minutes to complete. Problems sets assigned on Friday will be more substantial, requiring ~1-2 hours to complete. Together the problem sets constitute 60% of your grade.\n\n\n\nProblem sets are distributed as Posit Cloud assignments. You will work on problem sets in an Rmarkdown document in the assignment. When complete, complete your assignment by submitting the URL from your Posit Cloud assignment into the assignment submission on Canvas. We will grade your problem directly in the Posit Cloud assignment.\n\n\n\n\n\n\n\n\n\n\nAssigned\nDue\nGrades By\nWho grades\nTime to complete (approx)\n\n\n\n\nMon @ 12pm\nTues @ 5pm\nWed @ 5pm\nInstructors / TAs\n60 min\n\n\nTue @ 12pm\nWed @ 5pm\nThurs @ 5pm\nInstructors / TAs\n60 min\n\n\nWed @ 12pm\nThurs @ 5pm\nFri @ 5pm\nInstructors / TAs\n60 min\n\n\nThurs @ 12pm\nFri @ 5pm\nTues @ 5pm\nInstructors / TAs\n60 min\n\n\nFri @ 12pm\nMon @ 5pm\nWed @ 5pm\nInstructors / TAs\n1-2 hr\n\n\n\n\n\n\nProblem sets are worth 60% of your grade. Values in parentheses represent point values for each level from 20 points total. This rubric will be assessed at the end of the semester.\n\n\n\n\n\n\n\n\n\nCriteria\nExpert\nCompetent\nNeeds Improvement\n\n\n\n\nCoding style\nStudent has gone beyond what was expected and required, coding manual is followed, code is well commented\nCoding style lacks refinement and has some errors, but code is readable and has some comments\nMany errors in coding style, little attention paid to making the code human readable\n\n\nCoding strategy\nComplicated problem broken down into sub-problems that are individually much simpler. Code is efficient, correct, and minimal. Code uses appropriate data structure (list, data frame, vector/matrix/array). Code checks for common errors\nCode is correct, but could be edited down to leaner code. Some “hacking” instead of using suitable data structure. Some checks for errors.\nCode tackles complicated problem in one big chunk. Code is repetitive and could easily be functionalized. No anticipation of errors.\n\n\nPresentation: graphs\nGraph(s) carefully tuned for desired purpose. One graph illustrates one point\nGraph(s) well chosen, but with a few minor problems: inappropriate aspect ratios, poor labels.\nGraph(s) poorly chosen to support questions.\n\n\nPresentation: tables\nTable(s) carefully constructed to make it easy to perform important comparisons. Careful styling highlights important features.\nTable(s) generally appropriate but possibly some minor formatting deficiencies.\nTable(s) with too many, or inconsistent, decimal places. Table(s) not appropriate for questions and findings. Major display problems.\n\n\nAchievement, mastery, cleverness, creativity\nStudent has gone beyond what was expected and required, e.g., extraordinary effort, additional tools not addressed by this course, unusually sophisticated application of tools from course.\nTools and techniques from the course are applied very competently and, perhaps,somewhat creatively. Chosen task was acceptable, but fairly conservative in ambition.\nStudent does not display the expected level of mastery of the tools and techniques in this course. Chosen task was too limited in scope.\n\n\nEase of access for instructor, compliance with course conventions for submitted work\nAccess as easy as possible, code runs!\nSatisfactory\nNot an earnest effort to reduce friction and comply with conventions and/or code does not run",
    "crumbs": [
      "Assignments",
      "Problet Set Overview"
    ]
  },
  {
    "objectID": "problem-sets/ps-04.html",
    "href": "problem-sets/ps-04.html",
    "title": "R Bootcamp Problem Set 4",
    "section": "",
    "text": "Use the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 12pm on Sept 1."
  },
  {
    "objectID": "problem-sets/ps-04.html#problem-set",
    "href": "problem-sets/ps-04.html#problem-set",
    "title": "R Bootcamp Problem Set 4",
    "section": "",
    "text": "Use the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 12pm on Sept 1."
  },
  {
    "objectID": "problem-sets/ps-04.html#grading-rubric",
    "href": "problem-sets/ps-04.html#grading-rubric",
    "title": "R Bootcamp Problem Set 4",
    "section": "Grading rubric",
    "text": "Grading rubric\n\nEverything is good: full points\nPartially correct answer: depends on how many steps are correct\nReasonable attempt: half points"
  },
  {
    "objectID": "problem-sets/ps-04.html#question-1-2-points",
    "href": "problem-sets/ps-04.html#question-1-2-points",
    "title": "R Bootcamp Problem Set 4",
    "section": "Question 1 2 points\n",
    "text": "Question 1 2 points\n\n\nLoad the tidyverse and here packages.\n\nImport datasets: data/data_rna_protein.csv.gz.\n\ndata_rna_protein.csv.gz: This is a combined dataset from an RNAseq and SILAC proteomics experiment, where a transcription factor (TF) was differentially expressed and the fold change in RNA and protein calculated between TF-expressing and non-expressing cells."
  },
  {
    "objectID": "problem-sets/ps-04.html#question-2-9-points",
    "href": "problem-sets/ps-04.html#question-2-9-points",
    "title": "R Bootcamp Problem Set 4",
    "section": "Question 2 9 points\n",
    "text": "Question 2 9 points\n\nUsing the imported data set, carry out the following:\n\nInspect the data so you know what you are dealing with (summary() etc).\nSelect only the following columns: geneid, iDUX4_logFC, iDUX4_fdr, hl.ratio, and pval.\nRename them as follows: rna_FC = iDUX4_logFC, rna_pval = iDUX4_fdr, protein_FC = hl.ratio, protein_pval = pval (hint: use dplyr::rename())\nDrop all rows with NA values in them (hint: use a function from tidyr)\nRemove duplicate rows (hint: use dplyr::distinct()).\nArrange the table by descending rna_FC and ascending protein_FC.\nConduct steps 2-7 by piping the output of one step to another (i.e, a single workflow & remember to comment).\nSave the output of this workflow into a new object."
  },
  {
    "objectID": "problem-sets/ps-04.html#question-3-9-points",
    "href": "problem-sets/ps-04.html#question-3-9-points",
    "title": "R Bootcamp Problem Set 4",
    "section": "Question 3 9 points\n",
    "text": "Question 3 9 points\n\nHow well do the overall rna_FC and protein_FC values correlate in this experiment?\nUsing the output from Question 2, do the following:\n\nCreate a scatter plot of rna_FC vs protein_FC. observe how the points scatter.\nAdd a line to the plot that would indicate perfect 1:1 correlation. Hint: use geom_abline() with its slope argument.\nAdd a linear model fit using geom_smooth() using its method = 'lm' argument. Observe how the x=y line deviates from your geom_smooth line.\nCalculate the Spearman correlation coefficient. (Hint: This uses a base R math function called cor. Use ?cor or Google to learn more and how to specify method as spearman.\nUsing all of the information from above, comment on the correlation between rna_FC and protein_FC below.\n\nAnswer"
  },
  {
    "objectID": "problem-sets/ps-04.html#submit",
    "href": "problem-sets/ps-04.html#submit",
    "title": "R Bootcamp Problem Set 4",
    "section": "Submit",
    "text": "Submit\nBe sure to click the “Render” button to render the HTML output.\nThen paste the URL of this Posit Cloud project into the problem set on Canvas."
  },
  {
    "objectID": "course-info/syllabus.html",
    "href": "course-info/syllabus.html",
    "title": "MOLB 7950 Syllabus",
    "section": "",
    "text": "MOLB 7950 is a hands-on tutorial of skills and theory needed to process, analyze, and visualize output from large biological data sets. We emphasize the R statistical computing environment.\n🗓️ Class will run from Aug 26 - Oct 30\n📍 Classes will be held in-person at locations found on the schedule page.\n🕘 Class time is 9:00-10:30am\nMOLB 7950 is a three credit hour course.\nThe course is divided into blocks:\n\n\nTHe Bootcamp block covers R programming and introduces important statistical concepts and approaches. We will also cover data types you will encounter during biological data analysis and approaches for their analysis.\nDuring the bootcamp block, we will meet everyday for 90 minutes to cover fundamental concepts you will need throughout the course.\n\n\n\nAfter Bootcamp, will cover experimental approaches used to analyze DNA and RNA. Each block spans ~4 weeks, with each week focused on a particular type of experiment (see below). Each block covers statistical concepts needed for rigorous analysis and analysis approaches to process raw data to results (tables and figures) using reproducible coding techniques.\nIn most weeks we will discuss and analyze data from a publication. You are responsible for reading the week’s material before class begins on Monday.\n\n\n\nThe DNA block covers genome sequencing for identifying mutations, and two approaches for analyzing chromatin state (ChIP-seq and MNase-seq).\nThe RNA block covers RNA-seq, alternative splicing, differential gene expression, and RNA:protein interactions.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#course-overview",
    "href": "course-info/syllabus.html#course-overview",
    "title": "MOLB 7950 Syllabus",
    "section": "",
    "text": "MOLB 7950 is a hands-on tutorial of skills and theory needed to process, analyze, and visualize output from large biological data sets. We emphasize the R statistical computing environment.\n🗓️ Class will run from Aug 26 - Oct 30\n📍 Classes will be held in-person at locations found on the schedule page.\n🕘 Class time is 9:00-10:30am\nMOLB 7950 is a three credit hour course.\nThe course is divided into blocks:\n\n\nTHe Bootcamp block covers R programming and introduces important statistical concepts and approaches. We will also cover data types you will encounter during biological data analysis and approaches for their analysis.\nDuring the bootcamp block, we will meet everyday for 90 minutes to cover fundamental concepts you will need throughout the course.\n\n\n\nAfter Bootcamp, will cover experimental approaches used to analyze DNA and RNA. Each block spans ~4 weeks, with each week focused on a particular type of experiment (see below). Each block covers statistical concepts needed for rigorous analysis and analysis approaches to process raw data to results (tables and figures) using reproducible coding techniques.\nIn most weeks we will discuss and analyze data from a publication. You are responsible for reading the week’s material before class begins on Monday.\n\n\n\nThe DNA block covers genome sequencing for identifying mutations, and two approaches for analyzing chromatin state (ChIP-seq and MNase-seq).\nThe RNA block covers RNA-seq, alternative splicing, differential gene expression, and RNA:protein interactions.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#schedule",
    "href": "course-info/syllabus.html#schedule",
    "title": "MOLB 7950 Syllabus",
    "section": "Schedule",
    "text": "Schedule\nClasses begin on August 26 and end on October 30. Dates are from the Fall 2024 Academic Calendar.\nDuring the Bootcamp block, classes will be held every day, Mon-Fri from 9:00-10:30am.\nDuring the DNA & RNA blocks, we will have in-class exercises and discussion on Mon-Wed-Fri 9:00-10:30am.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#location",
    "href": "course-info/syllabus.html#location",
    "title": "MOLB 7950 Syllabus",
    "section": "Location",
    "text": "Location\nClasses will be held in-person in a variety of different rooms. Please check the schedule page to see each class’s room assignment. All classes will be recorded and made available through Canvas.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#policies",
    "href": "course-info/syllabus.html#policies",
    "title": "MOLB 7950 Syllabus",
    "section": "Policies",
    "text": "Policies\n\nAttendance\nClass attendance is a firm expectation; frequent absences or tardiness are considered cause for a grade reduction.\nif you are sick, please let us know (e-mail Srinivas and Matt) and stay home.\nAnticipated absences outside of sickness should be reported to the instructors of a given block as soon as possible to make plans for possible accommodation.\nWe will record all lectures on Panopto and they will be available online through Canvas.\n\n\nLate and missed work\nWe have a late work policy for homework assignments:\n\nIf a problem set set is late but within 24 hours of due date/time, the grade will be reduced by 50%\nIf a problem set is returned any later, no credit will be given.\nAll regrade requests must be discussed with the professor within one week of receiving your grade. There will be no grade changes after the final project.\n\n\n\nDiversity & Inclusiveness\nOur view is that students from all diverse backgrounds and perspectives will be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class iss a resource, strength, and benefit.\n\n\nDisability Policy\nStudents with disabilities who need accommodations are encouraged to contact the Office of Disability, Access & Inclusion as soon as possible to ensure that accommodations are implemented in a timely fashion.\n\n\nHonor code\nAcademic dishonesty will not be tolerated and is grounds for dismissal from the class with a failing grade (“F”). For other information, please consult the Graduate Student Handbook.\nChatGPT will probably be able to answer most coding questions you ask of it. While it is useful for fleshing out an initial approach from pseudocode, we do not recommend using it, as these conceptual approaches are an essential foundation for buildling expertise in bioinformatic analysis.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#problem-sets",
    "href": "course-info/syllabus.html#problem-sets",
    "title": "MOLB 7950 Syllabus",
    "section": "Problem Sets",
    "text": "Problem Sets\n\nProblem sets will be assigned at the end of each class.\nYou can use external resources but must explicitly cite where you have obtained code (both code you used directly and “paraphrased” code / code used as inspiration). Any reused code that is not explicitly cited will be treated as plagiarism.\nYou can discuss the content of assignments with others in this class. If you do so, you must acknowledge your collaborator(s) at the top of your assignment, for example: “Collaborators: Hillary and Bernie”. Failure to acknowledge collaborators will result in a grade of 0. You may not copy code and/or answers directly from another student. If you copy other work, both parties will receive a grade of 0.\nThe problem set with the lowest score for each student will be dropped.\nRather than copying someone’s work, ask for help. You are not alone in this course!",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#professionalism",
    "href": "course-info/syllabus.html#professionalism",
    "title": "MOLB 7950 Syllabus",
    "section": "Professionalism",
    "text": "Professionalism\n\nPlease refrain from texting or using your computer for anything other than coursework during class.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#assignments-and-grading",
    "href": "course-info/syllabus.html#assignments-and-grading",
    "title": "MOLB 7950 Syllabus",
    "section": "Assignments and Grading",
    "text": "Assignments and Grading\nThe course measures learning through daily problem sets, a final project, and your participation.\n\n\n\nType\n% of grade\n\n\n\n\nProblem Sets\n60\n\n\nFinal Project\n20\n\n\nParticipation\n20\n\n\n\nGrades will be assigned as follows:\n\n\n\nPercent total points\nGrade\n\n\n\n\n&gt;= 95\nA\n\n\n&gt;= 90\nA-\n\n\n&gt;= 85\nB+\n\n\n&gt;= 80\nB\n\n\n\n\nProblem sets\nWe reinforce concepts with problem sets assigned at the end of class that should take ~60 minutes to complete.\nProblems sets assigned on Friday will be more substantial, requiring ~1-2 hours to complete.\nTogether the problem sets constitute 60% of your grade.\n\n\n\n\n\n\n\n\n\n\nAssigned\nDue\nGrades By\nWho grades\nTime to complete (approx)\n\n\n\n\nMon @ 12pm\nTues @ 5pm\nWed @ 5pm\nInstructors / TAs\n60 min\n\n\nTue @ 12pm\nWed @ 5pm\nThurs @ 5pm\nInstructors / TAs\n60 min\n\n\nWed @ 12pm\nThurs @ 5pm\nFri @ 5pm\nInstructors / TAs\n60 min\n\n\nThurs @ 12pm\nFri @ 5pm\nTues @ 5pm\nInstructors / TAs\n60 min\n\n\nFri @ 12pm\nMon @ 5pm\nWed @ 5pm\nInstructors / TAs\n1-2 hr\n\n\n\n\n\nFinal projects\nFinal projects can be completed in groups of 1-3 people. Projects will involve analysis of existing public data sets and end with a short presentation the last week of class. The final project constitutes 20% of your grade.\n\n\nGrading Rubrics\n\nProblem Set Rubric\nProblem sets are worth 60% of your grade. Values in parentheses represent point values for each level from 20 points total. This rubric will be assessed at the end of the semester.\n\n\n\n\n\n\n\n\n\nCriteria\nExpert\nCompetent\nNeeds Improvement\n\n\n\n\nCoding style\nStudent has gone beyond what was expected and required, coding manual is followed, code is well commented\nCoding style lacks refinement and has some errors, but code is readable and has some comments\nMany errors in coding style, little attention paid to making the code human readable\n\n\nCoding strategy\nComplicated problem broken down into sub-problems that are individually much simpler. Code is efficient, correct, and minimal. Code uses appropriate data structure (list, data frame, vector/matrix/array). Code checks for common errors\nCode is correct, but could be edited down to leaner code. Some “hacking” instead of using suitable data structure. Some checks for errors.\nCode tackles complicated problem in one big chunk. Code is repetitive and could easily be functionalized. No anticipation of errors.\n\n\nPresentation: graphs\nGraph(s) carefully tuned for desired purpose. One graph illustrates one point\nGraph(s) well chosen, but with a few minor problems: inappropriate aspect ratios, poor labels.\nGraph(s) poorly chosen to support questions.\n\n\nPresentation: tables\nTable(s) carefully constructed to make it easy to perform important comparisons. Careful styling highlights important features.\nTable(s) generally appropriate but possibly some minor formatting deficiencies.\nTable(s) with too many, or inconsistent, decimal places. Table(s) not appropriate for questions and findings. Major display problems.\n\n\nAchievement, mastery, cleverness, creativity\nStudent has gone beyond what was expected and required, e.g., extraordinary effort, additional tools not addressed by this course, unusually sophisticated application of tools from course.\nTools and techniques from the course are applied very competently and, perhaps,somewhat creatively. Chosen task was acceptable, but fairly conservative in ambition.\nStudent does not display the expected level of mastery of the tools and techniques in this course. Chosen task was too limited in scope.\n\n\nEase of access for instructor, compliance with course conventions for submitted work\nAccess as easy as possible, code runs!\nSatisfactory\nNot an earnest effort to reduce friction and comply with conventions and/or code does not run\n\n\n\n\n\nParticipation rubric\nAttendance & participation is worth 20% of your grade. Values in parentheses represent point values for each level from 20 points total. This rubric will be assessed at the end of the semester.\n\n\n\n\n\n\n\n\n\nCriteria\nExpert\nCompetent\nNeeds improvement\n\n\n\n\nAttendance (physically present for class, or coordinating with instructor when absent)\nAttends class regularly (5)\nAttends most classes (4)\nAttends some classes (0-3)\n\n\nPreparation (activities required for in-class participation, like surveys and software installation)\nCompletes requested activities prior to class (5)\nCompletes most requested activities prior to class, sometimes needs to finish during class (4)\nRarely completes requested activities prior to class, often takes class time to complete (0-3)\n\n\nEngagement (in-class activities like coding exercises and discussion)\nActively engages in class activities (10)\nSometimes engages in class activities (8)\nDoesn’t engage in class activities (0-7)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#related-coursework",
    "href": "course-info/syllabus.html#related-coursework",
    "title": "MOLB 7950 Syllabus",
    "section": "Related coursework",
    "text": "Related coursework\nIn previous iterations of this course, we taught command-line (bash, grep, awk, etc) and Python programming. These skills are useful, but for consistency we opted to focus on R programming and RStudio as an analysis environment.\nAMC also offers shorter workshops on specific analysis strategies that you might find helpful.\n\nBMSC 7810: Practical biological data analysis with R/RStudio (RBI fellows)\nMOLB 7900: Practical Computational Biology for Biologists — Python (Taliaferro and Ramachandran)\nMOLB 7910: Practical Computational Biology for Biologists — R/R Studio (Jagannathan and Mukherjee)",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-info/syllabus.html#acknowldgements-attribution",
    "href": "course-info/syllabus.html#acknowldgements-attribution",
    "title": "MOLB 7950 Syllabus",
    "section": "Acknowldgements & Attribution",
    "text": "Acknowldgements & Attribution\n\nInstructor contributions\nSeveral people have contributed to course development over the past several years.\n\nSujatha Jagannathan contributed the original R bootcamp material.\nSrinivas Ramachandran contributed material for the DNA block, including lecture material and examples for yeast chromatin accessibility and factor mapping.\nMatt Taliaferro contributed material for the RNA block, including lecture material and examples for RNA expression and splicing analysis.\nKent Riemondy and Kristen Wells contributed material for single-cell RNA sequencing.\nJay Hesselberth and Neel Mukherjee revamped much of this material in Fall 2023.\n\n\n\nExternal resources\nWe have borrowed from several (open licensed) resources for course content, including:\n\nStats 545 at UBC, particularly their grading rubrics\nCourses from Mine Çetinkaya-Rundel, particularly inspiration for quarto websites",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "problem-sets/ps-02.html",
    "href": "problem-sets/ps-02.html",
    "title": "R Bootcamp Problem Set 2",
    "section": "",
    "text": "Start by loading libraries you need analysis in the code chunk below. When in doubt, start by loading the tidyverse package."
  },
  {
    "objectID": "problem-sets/ps-02.html#setup",
    "href": "problem-sets/ps-02.html#setup",
    "title": "R Bootcamp Problem Set 2",
    "section": "",
    "text": "Start by loading libraries you need analysis in the code chunk below. When in doubt, start by loading the tidyverse package."
  },
  {
    "objectID": "problem-sets/ps-02.html#problem-set",
    "href": "problem-sets/ps-02.html#problem-set",
    "title": "R Bootcamp Problem Set 2",
    "section": "Problem Set",
    "text": "Problem Set\nEach problem below is worth 4 points.\nUse the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 12pm on Aug 30.\nGrading rubric\n\nEverything is good: 5 points\nPartially correct answers: 3-4 points\nReasonable attempt: 2 points"
  },
  {
    "objectID": "problem-sets/ps-02.html#question-1",
    "href": "problem-sets/ps-02.html#question-1",
    "title": "R Bootcamp Problem Set 2",
    "section": "Question 1",
    "text": "Question 1\nImport the data set data_transcript_exp_subset using the readr package, and assign it to a variable called exp_tbl.\nThe file is located at the following path data/data_transcript_exp_subset.csv.gz"
  },
  {
    "objectID": "problem-sets/ps-02.html#question-2",
    "href": "problem-sets/ps-02.html#question-2",
    "title": "R Bootcamp Problem Set 2",
    "section": "Question 2",
    "text": "Question 2\nThis data frame is a subset (100 lines) of transcript-level gene expression data where transcript abundance was measured at two different time points of a certain treatment conducted in triplicates.\nThe column names have the format of molecule_time_replicate\nFirst, explore the structure of the data set using some of the functions we learned in class (e.g., summary())\nComment on whether this data set is tidy, and if not, list the reasons why. Remember: in tidy data, every column represents a single variable and every row represents a single observation\nAnswer below"
  },
  {
    "objectID": "problem-sets/ps-02.html#question-3",
    "href": "problem-sets/ps-02.html#question-3",
    "title": "R Bootcamp Problem Set 2",
    "section": "Question 3",
    "text": "Question 3\nHow will you reshape the data frame so that each row has only one experimental observation?\nHint: Use pivot_longer()"
  },
  {
    "objectID": "problem-sets/ps-02.html#question-4",
    "href": "problem-sets/ps-02.html#question-4",
    "title": "R Bootcamp Problem Set 2",
    "section": "Question 4",
    "text": "Question 4\nHow will you modify the dataframe so that multiple variables are not present in a single column?\nHint: Use separate()"
  },
  {
    "objectID": "problem-sets/ps-02.html#question-5",
    "href": "problem-sets/ps-02.html#question-5",
    "title": "R Bootcamp Problem Set 2",
    "section": "Question 5",
    "text": "Question 5\nHow will you save your output as a TSV file?\nHint: Use the readr cheatsheet to figure this out.\nhttps://rstudio.cloud/learn/cheat-sheets"
  },
  {
    "objectID": "problem-sets/ps-15.html",
    "href": "problem-sets/ps-15.html",
    "title": "Problem Set Stats Bootcamp - class 15",
    "section": "",
    "text": "-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'janitor'\n\n\nThe following object is masked from 'package:rstatix':\n\n    make_clean_names\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\nang &lt;- read_csv(here(\"data/bootcamp/edger.csv.gz\")) |&gt;\n  clean_names() |&gt;\n  filter(fdr &lt; 0.05) |&gt;\n  select(log_fc_time0_25:log_fc_time8) |&gt;\n  as.matrix()\n\ncolnames(ang) &lt;- gsub(pattern = \"log_fc_\", \"\", colnames(ang))"
  },
  {
    "objectID": "problem-sets/ps-15.html#problem-1",
    "href": "problem-sets/ps-15.html#problem-1",
    "title": "Problem Set Stats Bootcamp - class 15",
    "section": "Problem # 1",
    "text": "Problem # 1\nMake sure to run the chunk above. The data represent the avg fold change in gene expression for an angiotensin II time course (.25, .5, .75, 1, 1.5, 2, 3, 4, 6, 8, 24 hrs) compared to unstimulated."
  },
  {
    "objectID": "problem-sets/ps-15.html#correlation",
    "href": "problem-sets/ps-15.html#correlation",
    "title": "Problem Set Stats Bootcamp - class 15",
    "section": "correlation",
    "text": "correlation\nCreate hierarchical clustering heatmap of pairwise pearson correlation coefficients. And provide 1-2 observations.\n\n# scale\n\n# pairwise pearson correlation\n\n\n# make heatmap\n\nTimepoints close to each other tend to correlate strongly with each other. The 4,6, and 8 hr time points are the most different from all others."
  },
  {
    "objectID": "problem-sets/ps-15.html#pca",
    "href": "problem-sets/ps-15.html#pca",
    "title": "Problem Set Stats Bootcamp - class 15",
    "section": "PCA",
    "text": "PCA\nPerform PCA and visualize PC1 vs PC2.Provide 1-2 observations.\n\n# pca\n\n\n# gather info from summary\n\n\n\n\n# we make a dataframe out of the rotations and will use this to plot\n\n\n# plot"
  },
  {
    "objectID": "problem-sets/ps-15.html#calculate-the-empirical-p-value-of-the-cluster-most-enriched-for-dux4-targets-by-sampling",
    "href": "problem-sets/ps-15.html#calculate-the-empirical-p-value-of-the-cluster-most-enriched-for-dux4-targets-by-sampling",
    "title": "Problem Set Stats Bootcamp - class 15",
    "section": "Calculate the empirical p-value of the cluster most enriched for DUX4 targets by sampling",
    "text": "Calculate the empirical p-value of the cluster most enriched for DUX4 targets by sampling\nIn order to do this, you will need to:\n\nIdentify which cluster is the most enriched for DUX4 targets.\n\nDetermine how many genes are in the cluster. You will need to know this to figure out how many genes to sample from the whole data set.\nDetermine how many of the genes in the cluster are DUX4 targets. This is the metric that you are interested in comparing between the null distribution and your observation.\n\n\nGenerate 1000 random sample of the proper size from all genes and find out how many of them are DUX4 targets.\nVisualize the distribution of DUX4 targets in these 1000 random (your null distribution) and overlay the number of DUX4 targets you observed in the cluster that was most enriched for DUX4 targets.\n\n\n# read in data\ncd &lt;- read_tsv(here(\"data\", \"dux4_clustering_results.csv.gz\"))\n\nRows: 10566 Columns: 15\n-- Column specification --------------------------------------------------------\nDelimiter: \"\\t\"\nchr  (2): gene_symbol, target\ndbl (13): hour00_rep1, hour00_rep2, hour00_rep3, hour04_rep1, hour04_rep2, h...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# how many genes are in cluster of interest?\n\n# how many dux targets are in cluster interest?\n\n\n\n# initialize empty vector\nsampled_targets &lt;- vector()\n\n# randomly sample # genes above from data 1000x and tally number of dux4 targets each random sampling\n\n\n\n# plot\n\nWhat is the p-value?\nWhat is your interpretation?"
  },
  {
    "objectID": "problem-sets/ps-09.html",
    "href": "problem-sets/ps-09.html",
    "title": "R Bootcamp Problem Set 9",
    "section": "",
    "text": "Use the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 5pm on Sept 11."
  },
  {
    "objectID": "problem-sets/ps-09.html#problem-set",
    "href": "problem-sets/ps-09.html#problem-set",
    "title": "R Bootcamp Problem Set 9",
    "section": "",
    "text": "Use the data files in the data/ directory to answer the questions.\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\nThe problem set is due 5pm on Sept 11."
  },
  {
    "objectID": "problem-sets/ps-09.html#libraries",
    "href": "problem-sets/ps-09.html#libraries",
    "title": "R Bootcamp Problem Set 9",
    "section": "Libraries",
    "text": "Libraries\nLoad the libraries you need for analysis below.\nLoad the data\nLoad the data sets and inspect.\nTidy the data (4 points)\nGiven the experimental setup and the shape of the tibbles, you should be able to answer: Are these data tidy?\n\nWhat are the variables in the data?\n\n\nAnswer\n\n\nAre the variables the column names?\n\n\nAnswer\n\nThe names are encoded in the following order:\ngt, time, gene, rep_tech, rep_bio."
  },
  {
    "objectID": "problem-sets/ps-09.html#question-1-4-points",
    "href": "problem-sets/ps-09.html#question-1-4-points",
    "title": "R Bootcamp Problem Set 9",
    "section": "Question 1 (4 points)",
    "text": "Question 1 (4 points)\nCalculate summary statistics for the experiment.\n\nCalculate the mean of the technical replicates within each group of genotype, time, gene, and biological replicate.\nCalculate the mean and standard deviation of the biolgical replicates (which is the mean of technical replicates, above).\n\nYou should have a tibble that looks like this:\n# A tibble: 36 × 5\n   gt         time gene     bio_mean bio_sd\n   &lt;chr&gt;     &lt;int&gt; &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;\n 1 RL-mutant     0 GAPDH       0.444 0.0759\n 2 RL-mutant     0 IFN-beta    3.32  0.188 \n 3 RL-mutant     4 GAPDH       1.61  0.487 \n 4 RL-mutant     4 IFN-beta   18.4   1.15  \n 5 RL-mutant     8 GAPDH       3.25  1.06  \n 6 RL-mutant     8 IFN-beta   32.2   1.82  \n 7 RL-mutant    12 GAPDH       3.90  0.911 \n 8 RL-mutant    12 IFN-beta   47.5   3.78  \n 9 RL-mutant    24 GAPDH       7.93  3.41  \n10 RL-mutant    24 IFN-beta   76.7   4.75  \n# ℹ 26 more rows\n# ℹ Use `print(n = ...)` to see more rows"
  },
  {
    "objectID": "problem-sets/ps-09.html#question-2-4-points",
    "href": "problem-sets/ps-09.html#question-2-4-points",
    "title": "R Bootcamp Problem Set 9",
    "section": "Question 2 (4 points)",
    "text": "Question 2 (4 points)\n\nCreate a plot of expression by time from the data, using the mean of the biological replicates as the y value.\nColor the plot by genes.\nUse ggplot2::geom_pointrange() do represent the standard deviation of the data. Alternatively, use ggplot2::geom_errobar() with geom_point().\nDraw a line through the points with geom_line().\nFacet the plot by genotype.\nChange the colors of the of the plot with a scale function.\nUpdate the labels on the plot (“time (hours)”, etc.)."
  },
  {
    "objectID": "problem-sets/ps-09.html#question-3-4-points",
    "href": "problem-sets/ps-09.html#question-3-4-points",
    "title": "R Bootcamp Problem Set 9",
    "section": "Question 3 (4 points)",
    "text": "Question 3 (4 points)\n\nWhat can you say about the expression of GAPDH and IFN in the different cell types?\n\n\nAnswer.\n\n\nCan you come up with a simple molecular mechanism to explain the results?\n\n\nAnswer."
  },
  {
    "objectID": "problem-sets/ps-09.html#question-4-4-points",
    "href": "problem-sets/ps-09.html#question-4-4-points",
    "title": "R Bootcamp Problem Set 9",
    "section": "Question 4 (4 points)",
    "text": "Question 4 (4 points)\nReformat the data from Question 2 such that you calculate a ratio of IFN to GAPDH. Start with the data Question 1.2, above.\nRe-plot the data as in Question 2, but leave out the color as you have collapsed the two genes into one value."
  },
  {
    "objectID": "problem-sets/ps-09.html#question-5-4-points",
    "href": "problem-sets/ps-09.html#question-5-4-points",
    "title": "R Bootcamp Problem Set 9",
    "section": "Question 5 (4 points)",
    "text": "Question 5 (4 points)\nIs there more spread across the technical replicates, or across the biological replicates (across the whole experiment)?\nTo get at this question, calculate the standard deviations across the two sets of replicates separately. Which one has a greater spread (max - min)? And what might this mean?\n\nAnswer."
  },
  {
    "objectID": "problem-sets/ps-09.html#grading-rubric",
    "href": "problem-sets/ps-09.html#grading-rubric",
    "title": "R Bootcamp Problem Set 9",
    "section": "Grading rubric",
    "text": "Grading rubric\n\nEverything is good: full points\nPartially correct answer: depends on how many steps are correct\nReasonable attempt: half points"
  },
  {
    "objectID": "problem-sets/ps-09.html#submit",
    "href": "problem-sets/ps-09.html#submit",
    "title": "R Bootcamp Problem Set 9",
    "section": "Submit",
    "text": "Submit\nBe sure to click the “Render” button to render the HTML output.\nThen paste the URL of this Posit Cloud project into the problem set on Canvas."
  },
  {
    "objectID": "problem-sets/ps-11.html",
    "href": "problem-sets/ps-11.html",
    "title": "Problem Set Stats Bootcamp - class 11",
    "section": "",
    "text": "-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp"
  },
  {
    "objectID": "problem-sets/ps-11.html#problem-1",
    "href": "problem-sets/ps-11.html#problem-1",
    "title": "Problem Set Stats Bootcamp - class 11",
    "section": "Problem # 1",
    "text": "Problem # 1\nAssume that the height jackalopes fit a normal distribution. Through careful field research measuring 1000 wild jackalopes, we have determined the mean height is 97 cm and the standard deviation is 10 cm. Your was camping and found a jackalope. Being a great friend and knowing your interest in jackalopes, they (harmlessly) subdued and measured the wild jackalope and found that it was 75 cm.\n\nSimulate a normal distribution of 1000 jackalope heights using the mean and sd you painstakingly measured.\n\n\nPlot the density of the jackalope height distribution. Indicate with a vertical line the height of the jackalope your friend measured.\n\n\nCalculate the probability of a jackalope being 75 cm or shorter.\n\n\nAre jackalope heights normally distributed?"
  },
  {
    "objectID": "problem-sets/ps-11.html#explore-coin-flip-distribution-characteristics",
    "href": "problem-sets/ps-11.html#explore-coin-flip-distribution-characteristics",
    "title": "Problem Set Stats Bootcamp - class 11",
    "section": "Explore coin flip distribution characteristics",
    "text": "Explore coin flip distribution characteristics\nWhen we flip a fair coin multiple times (numFlips) in a row, we expect to get heads (or tails) 50% of the time on average. This is not always the case for a single round of flipping, but if we do multiple rounds with (numRounds) that average should be 50%."
  },
  {
    "objectID": "problem-sets/ps-11.html#problem-2",
    "href": "problem-sets/ps-11.html#problem-2",
    "title": "Problem Set Stats Bootcamp - class 11",
    "section": "Problem # 2",
    "text": "Problem # 2\nIn class, we simulated coin flip experiments using two different coins that were either fair (0.5 prob of head) or unfair (0.9 prob of head). We varied the number of flips in a single round (numFlips) and the number of rounds of flipping (numRounds). For this assignment, use the same to coins and use all possible combinations of numFlips and numRounds from the table below.\n\nparameters to explore\n\nnumFlips\nnumRounds\n\n\n\n5\n10\n\n\n500\n100\n\n\n\n\nCreate a tibble has all the combinations of numFlips, numRounds, and prob of getting heads.\n\n\n# hint for 8 flips and 12 rounds of a fair coin you could do\n# rbinom(n = 8, size = 12, prob = .5)/12\n\n\nPlot your result using faceting. I recommend faceting by numFlips (like in class describing both the number and fair v unfair) . Include the observed mean as a black diamond and the true mean as a dashed line.\n\n3. Report the means and sd of each pair of numFlips and numRounds\n4. Describe in a few sentences how increasing numFlips and numRounds alters:\nThe estimation of and spread around the true mean."
  },
  {
    "objectID": "exercises/ex-03.html",
    "href": "exercises/ex-03.html",
    "title": "R Bootcamp - Day 3 - Exercises",
    "section": "",
    "text": "Explore these data sets:\n\ndplyr::starwars\n\ndplyr::band_members, dplyr::band_instruments, dplyr::band_instruments2"
  },
  {
    "objectID": "exercises/ex-03.html#todays-datasets---exercise-1",
    "href": "exercises/ex-03.html#todays-datasets---exercise-1",
    "title": "R Bootcamp - Day 3 - Exercises",
    "section": "",
    "text": "Explore these data sets:\n\ndplyr::starwars\n\ndplyr::band_members, dplyr::band_instruments, dplyr::band_instruments2"
  },
  {
    "objectID": "exercises/ex-03.html#arrange---exercise-2",
    "href": "exercises/ex-03.html#arrange---exercise-2",
    "title": "R Bootcamp - Day 3 - Exercises",
    "section": "arrange - Exercise 2",
    "text": "arrange - Exercise 2"
  },
  {
    "objectID": "exercises/ex-03.html#filter---exercise-3",
    "href": "exercises/ex-03.html#filter---exercise-3",
    "title": "R Bootcamp - Day 3 - Exercises",
    "section": "filter - Exercise 3",
    "text": "filter - Exercise 3\nfilter by membership\n\n# filter based on skin color\n\nConditions can be combined using & (and), | (or).\n\n# filter on skin and eye color\n\nselect - Exercise 4\nmutate (& pipe |&gt;)- Exercise 5\n\n# create a new column to display height in meters\n\n# using the pipe to feed data into multiple functions sequentially\n\n# mutate allows you to refer to columns that you’ve just created\n\n# output needs to be saved into a new dataframe since dplyr does not \"change\" the original dataframe\n\n# using if_else clauses with mutate\n\nrowwise operations (if time permits)\n\n# let's input data (same one used in yesterday's problem set)\n# data &lt;- read_csv(file = \"data/data_transcript_exp_subset.csv\")\n\n# calculate mean for each time point using mutate in a rowwise fashion!\n\nsummarise - Exercise 6\ngroup_by + summarize - Exercise 7"
  },
  {
    "objectID": "problem-sets/ps-12.html",
    "href": "problem-sets/ps-12.html",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "",
    "text": "-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'janitor'\n\n\nThe following object is masked from 'package:rstatix':\n\n    make_clean_names\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00FC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DF&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C5&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E5&gt;' to native encoding\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1, 6, 9, 14, 15, 24:28)]\nbiochem &lt;- biochem[, keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\", \"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb &lt;- inner_join(biochem, weight, by = \"subject_name\") |&gt;\n  na.omit() |&gt;\n  rename(sex = gender)"
  },
  {
    "objectID": "problem-sets/ps-12.html#problem-1",
    "href": "problem-sets/ps-12.html#problem-1",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Problem # 1",
    "text": "Problem # 1\nDoes mouse sex explain mouse total cholesterol levels? Make sure to run chunks above.\n1. Examine and specify the variable(s)\n\nThe response variable y is \\(??\\)\nThe explantory variable x is \\(??\\)\n\nMake a violin plot:\nresponse variable on the y-axis\nexplanatory variable on the x-axis\nGet n, mean, median, sd\nIs it normally distribute?\n\nAnswer here\n\nIs it variance similar between groups?\n\nAnswer here\n\nWhat kind of test are you picking and why?\n\nAnswer here\n\n2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n\n\\(\\mathcal{H}_0\\) is that \\(??\\) does not explain \\(??\\)\n3. Calculate test-statistic, exact p-value and plot\n\nMy interpretation of the result\n\n\n# i have pre-selected some families to compare\nmyfams &lt;- c(\n  \"B1.5:E1.4(4) B1.5:A1.4(5)\",\n  \"F1.3:A1.2(3) F1.3:E2.2(3)\",\n  \"A1.3:D1.2(3) A1.3:H1.2(3)\",\n  \"D5.4:G2.3(4) D5.4:C4.3(4)\"\n)\n\n# only keep the familys in myfams\nbfam &lt;- b |&gt;\n  filter(family %in% myfams) |&gt;\n  droplevels()\n\n# simplify family names and make factor\nbfam$family &lt;- gsub(pattern = \"\\\\..*\", replacement = \"\", x = bfam$family) |&gt;\n  as.factor()\n\n\n# make B1 the reference (most similar to overall mean)\nbfam$family &lt;- relevel(x = bfam$family, ref = \"B1\")"
  },
  {
    "objectID": "problem-sets/ps-12.html#problem-2",
    "href": "problem-sets/ps-12.html#problem-2",
    "title": "Problem Set Stats Bootcamp - class 12",
    "section": "Problem # 2",
    "text": "Problem # 2\nDoes mouse family explain mouse total cholesterol levels? Make sure to run chunk above.\n1. Examine and specify the variable(s)\n\nThe response variable y is \\(??\\)\nThe explantory variable x is \\(??\\)\n\nMake a plot:\nresponse variable on the y-axis\nexplanatory variable on the x-axis\nGet n, mean, median, sd\nIs it normally distribute?\n\nAnswer here\n\nIs it variance similar between groups?\n\nAnswer here\n\nWhat kind of test are you picking and why?\n\nAnswer here ### 2. Declare null hypothesis \\(\\mathcal{H}_0\\)\n\n\\(\\mathcal{H}_0\\) is that \\(??\\) does not explain \\(??\\)\n3. Calculate test-statistic, exact p-value and plot\n\nMy interpretation of the result"
  },
  {
    "objectID": "exercises/ex-04.html#todays-datasets",
    "href": "exercises/ex-04.html#todays-datasets",
    "title": "R Bootcamp - Day 4",
    "section": "Today’s datasets",
    "text": "Today’s datasets\nIn this class, we will use a data set from ggplot2: diamonds contains thousands of gem prices and qualities.\nThere are many interesting data sets you can install as R packages for learning to manipulate and plot data:\n\nbabynames\ngapminder\npalmerpenguins"
  },
  {
    "objectID": "exercises/ex-04.html#getting-familiar-with-the-data---exercise-1",
    "href": "exercises/ex-04.html#getting-familiar-with-the-data---exercise-1",
    "title": "R Bootcamp - Day 4",
    "section": "Getting familiar with the data - Exercise 1",
    "text": "Getting familiar with the data - Exercise 1"
  },
  {
    "objectID": "exercises/ex-04.html#the-syntax-of-ggplot",
    "href": "exercises/ex-04.html#the-syntax-of-ggplot",
    "title": "R Bootcamp - Day 4",
    "section": "The syntax of ggplot()\n",
    "text": "The syntax of ggplot()"
  },
  {
    "objectID": "exercises/ex-04.html#making-a-plot-step-by-step-exercise-2",
    "href": "exercises/ex-04.html#making-a-plot-step-by-step-exercise-2",
    "title": "R Bootcamp - Day 4",
    "section": "Making a plot step-by-step (Exercise 2)",
    "text": "Making a plot step-by-step (Exercise 2)\n\nInitialize a plot with data.\nNext, specify the coordinate system.\nAdd a geom (geom_point).\nMap aesthetics to other variables.\n\nReduce overplotting by adjusting the transparency of points."
  },
  {
    "objectID": "exercises/ex-04.html#looking-under-the-hood-of-ggplot-exercise-3",
    "href": "exercises/ex-04.html#looking-under-the-hood-of-ggplot-exercise-3",
    "title": "R Bootcamp - Day 4",
    "section": "Looking under the hood of ggplot (Exercise 3)",
    "text": "Looking under the hood of ggplot (Exercise 3)"
  },
  {
    "objectID": "exercises/ex-04.html#ggplot-is-powerfully-simple-for-making-complex-plots",
    "href": "exercises/ex-04.html#ggplot-is-powerfully-simple-for-making-complex-plots",
    "title": "R Bootcamp - Day 4",
    "section": "ggplot is powerfully simple for making complex plots",
    "text": "ggplot is powerfully simple for making complex plots\nWhy can’t I just do this?"
  },
  {
    "objectID": "exercises/ex-04.html#geom-functions",
    "href": "exercises/ex-04.html#geom-functions",
    "title": "R Bootcamp - Day 4",
    "section": "Geom functions",
    "text": "Geom functions\n\nUse a geom function to represent data points, use the geom aesthetic properties to represent variables.\nEach function returns a plot layer.\nThere are many geoms in ggplot that are specific to plots with 1, 2, or 3 variables\n\nMake a bar plot.\n\nUpdate the bar plot aesthetics.\n\nChange to a density plot.\n\nColor the density plot.\n\nPlot subsets by mapping fill to cut\n\nUse ggridges to plot staggered subsets.\nhttps://wilkelab.org/ggridges/"
  },
  {
    "objectID": "exercises/ex-04.html#geom-functions-for-two-variables",
    "href": "exercises/ex-04.html#geom-functions-for-two-variables",
    "title": "R Bootcamp - Day 4",
    "section": "Geom functions for two variables",
    "text": "Geom functions for two variables\nMake a column plot.\nSame data with a box plot.\n\nBox plot, with fill color by cut.\nViolin plot with fill color by cut."
  },
  {
    "objectID": "exercises/ex-04.html#continuous-x-continuous-y---exercise-6",
    "href": "exercises/ex-04.html#continuous-x-continuous-y---exercise-6",
    "title": "R Bootcamp - Day 4",
    "section": "continuous x, continuous y - Exercise 6",
    "text": "continuous x, continuous y - Exercise 6\nSubset diamonds to see points more clearly.\nMake a scatter plot.\nNow add a smoothing line.\nHere we can combine geoms to see points & the fit"
  },
  {
    "objectID": "exercises/ex-09.html",
    "href": "exercises/ex-09.html",
    "title": "Exercises 9",
    "section": "",
    "text": "A yeast gene expression experiment\nNext, we’ll examine some gene expression data from the budding yeast S. cerevisiae. We’ll roughly follow the analysis strategy taken by David Robinson in his blog Variance Explained.\nThe data come from:\n\nBrauer MJ, Huttenhower C, Airoldi EM, Rosenstein R, Matese JC, Gresham D, Boer VM, Troyanskaya OG, Botstein D. Coordination of growth rate, cell cycle, stress response, and metabolic activity in yeast. Mol Biol Cell. 2008 [Link]\n\nThey used chemostats to control the growth rate of cells under different nutrient-limited conditions.\nIn this experiment, cells were grown in different media limited for (one of) glucose, uracil, leucine, sulfate, phosphate, or ammonia. Over a series of fixed, equilibrium growth rates (established by the dilution rate of fresh media), cells were harvested and gene expression was measured by genome-wide microarrays.\nThis is a well organized experiment (so it’s useuful for teaching / learning), but there’s nothing particularly special about the setup.\n\nWe could be measuring protein or metabolite levels instead of gene expression, or analyzing cell features from images taken of the cells.\nWe might be adding an increasing amount of a drug candidate instead of nutrient deprivation\nWe might be altering the growth density of mammalian cells (by plating) instead of controlling growth rate in a chemostat.\n\nLoad libraries\nLoad libraries you’ll need for the analysis below.\nLoad the data\nA raw version of the gene expression data are in:\n\ndata/brauer_gene_exp_wide.tsv.gz\n\nIn addition, another tibbles contains related information:\n\ndata/yeast_go_terms.tsv.gz\n\nLoad each of the above files and inspect.\n\nbrauer_gene_exp_wide &lt;- ___ \nyeast_go_terms &lt;- ___\n\nTidy the data\nAre these data tidy?\n\nbrauer_gene_exp_tidy &lt;-\n  pivot_longer(\n    data = ___,\n    cols = ___,\n    names_to = \"___\",\n    values_to = \"___\"\n  ) |&gt;\n  separate(\n    ___,\n    into = c(\"___\", \"___\"),\n    sep = 1,\n    convert = TRUE\n  )\n\nNext, we want to update the nutrient abbreviations so they’re easier to remember.\n\nnutrient_abbrs &lt;- tribble(\n  ~ nutrient_abbr, ~ nutrient,\n  \"G\", \"Glucose\",\n  \"L\", \"Leucine\",\n  \"P\", \"Phosphate\",\n  \"S\", \"Sulfate\",\n  \"N\", \"Ammonia\",\n  \"U\", \"Uracil\"\n)\n\n# now, we need to *join* the tibbles\nbrauer_gene_exp_tidy &lt;-\n  left_join(___, ___) |&gt;\n  # drop the nutrient abbreviation \n  select(___)\n\nNext, we want the common gene names, which contain useful information for filtering and grouping. These are in yeast_go_terms, so we need to join.\n\n# need a tibble that maps systematic\n# common names\nname_map &lt;- select(\n  yeast_go_terms,\n  ___, ___ \n)\n\n# we need to *join* again . . .\nbrauer_gene_exp_tidy &lt;-\n  left_join(___, ___) |&gt;\n  # reorganize so that systematic and common names come first\n  select(___)\n\nFinally, we’ll drop all rows with NA expression values, and arrange the tibble.\n\nbrauer_gene_exp_tidy &lt;-\n  # drop rows where `exp` is `NA`\n  drop_na(___, ___) |&gt;\n  # arrange by common name, nutrient, and rate\n  arrange(___) \n\nHeatmap of gene expression values\nHeatmaps are a useful approach to visualize thousands of data points, orgnaized by experimental variables to show patterns in the data.\nWe’ll use the ComplexHeatmap package from Bioconductor, which provides a flexible framework for generating heatmaps.\n\nbrauer_mat_dat &lt;-\n  brauer_gene_exp |&gt;\n  unite(___, ___) |&gt;\n  pivot_wider(\n    names_from = ___,\n    values_from = ___\n  )\n\nbrauer_mat &lt;-\n  # remove name columns, just need the data\n  select(___, ___) |&gt;\n  as.matrix()\n\n# Inspect the matrix above.\n\nComplexHeatmap::Heatmap(___)\n\nExpression of select genes associated with nutrient metabolism\nExamine the genes (common_name) that start with LEU.\n\nleu_genes_tbl &lt;- brauer_gene_exp_tidy |&gt;\n  filter(str_detect(___, \"___\"))\n\nggplot(\n  leu_genes_tbl,\n  aes(\n    x = ___,\n    y = ___,\n    color = ___ \n  )\n) +\n  geom_point() + \n  geom_smooth(method = 'lm', se = FALSE) +\n  facet_wrap(~ ___) +\n  theme_cowplot() +\n  scale_color_brewer(palette = \"Dark2\")\n\nModeling the relationship between gene expression and growth rate\nOne gene\nLet’s look specifically at a linear model of the data for LEU1 under leucine starvation.\n\nleu1_tbl &lt;- leu_genes_tbl |&gt;\n  filter(common_name == \"___\" & nutrient == \"___\")\n\nggplot(leu1_tbl, aes(___, ___)) +\n  geom_point(size = 3) +\n  theme_cowplot()\n\nLet’s take a look at the linear model of these data.\n\nmod &lt;- lm(exp ~ rate, data = leu1_tbl)\nsummary(mod)\n\nThe relevant information (rate, intercept, p.value) for the model is not easily accessed.\nWe can use the broom library to tidy the model information.\n\nlibrary(broom)\nbroom::tidy(mod)\n\nAll genes\nDoing this for one gene is interesting, but really we’d like models for all of the conditions so that we can compare between them to identify interesting patterns.\nThe following code chunk will do the following:\n\nnest data for model fitting into a new column data\n\nfit linear models to the data column using purrr::map()\n\ntidy the linear models using broom::tidy()\n\nunnest the model coefficients\n\n\nlinear_model_tbl &lt;-\n  brauer_gene_exp_tidy |&gt;\n  group_by(systematic_name, common_name, nutrient) |&gt;\n  nest() |&gt;\n  # look at the data up to the `nest()` call\n  mutate(\n    model = purrr::map(\n      data,\n      ~ lm(exp ~ rate, data = .)\n    )\n  ) |&gt;\n  mutate(\n    model_tidy = purrr::map(\n      model,\n      broom::tidy\n    )\n  ) |&gt;\n  select(-model, -data) |&gt;\n  unnest(cols = c(model_tidy))\n\nNote that we now have slope and intercept terms for each group we specified.\n\nthe intercept indicates how highly a gene is expressed when starved of a nutrient.\nthe rate indicates how much a gene’s expression responds to increasing nutrient (i.e., growth rate).\nFurther analysis\nAt this point, you can ask questions like the following:\n\nHow do other groups of metabolic genes respond to nutrient deprivation? Start with the ‘PHO’, ‘URA’, and ‘SUL’ genes. Comment on features that stand out, both within and across nutrient deprivation conditions.\nWhat if you include and group by the GO terms in the yeast_go_terms tibble instead of gene name? I.e., you could detect the string leucine in the biological process and group by those instead of gene name (you’d need to join the tidy tibble with the GO information first).\nAre there other genes that behave like LEU1 under leucine starvation? I.e., a strong negative slope in one condition, and positive slopes in the others?"
  },
  {
    "objectID": "exercises/ex-01.html",
    "href": "exercises/ex-01.html",
    "title": "R Bootcamp - Day 1",
    "section": "",
    "text": "We are using RStudio through Posit Cloud for the class.\nLook at RStudio panels one at a time.\nEnvironment, History, Console, Files, Plots, Packages, Help, etc.\n\nSee menu:\nHelp &gt; Cheat Sheets &gt; RStudio IDE Cheat Sheet"
  },
  {
    "objectID": "exercises/ex-01.html#rstudio---exercise-1",
    "href": "exercises/ex-01.html#rstudio---exercise-1",
    "title": "R Bootcamp - Day 1",
    "section": "",
    "text": "We are using RStudio through Posit Cloud for the class.\nLook at RStudio panels one at a time.\nEnvironment, History, Console, Files, Plots, Packages, Help, etc.\n\nSee menu:\nHelp &gt; Cheat Sheets &gt; RStudio IDE Cheat Sheet"
  },
  {
    "objectID": "exercises/ex-01.html#r-as-a-calculator---exercise-2",
    "href": "exercises/ex-01.html#r-as-a-calculator---exercise-2",
    "title": "R Bootcamp - Day 1",
    "section": "R as a calculator - Exercise 2",
    "text": "R as a calculator - Exercise 2\n\nR can function like an advanced calculator\n\n\nTry simple math.\nAssign a numeric value to an object.\n\n\n&lt;- and = are assignment operators.\nBy convention, R programmers use &lt;-.\n\nx &lt;- 1 reads “set the value of x to 1”.\n\n. . .\n= and == are two different operators.\n\na = is used for assignment (e.g., x = 1)\na == tests for equivalence (e.g. x == 1 says “does x equal 1?”)"
  },
  {
    "objectID": "exercises/ex-01.html#functions-and-arguments---exercise-3",
    "href": "exercises/ex-01.html#functions-and-arguments---exercise-3",
    "title": "R Bootcamp - Day 1",
    "section": "Functions and arguments - Exercise 3",
    "text": "Functions and arguments - Exercise 3"
  },
  {
    "objectID": "exercises/ex-01.html#writing-a-simple-function---exercise-4",
    "href": "exercises/ex-01.html#writing-a-simple-function---exercise-4",
    "title": "R Bootcamp - Day 1",
    "section": "Writing a simple function - Exercise 4",
    "text": "Writing a simple function - Exercise 4"
  },
  {
    "objectID": "exercises/ex-01.html#data-types---exercise-5",
    "href": "exercises/ex-01.html#data-types---exercise-5",
    "title": "R Bootcamp - Day 1",
    "section": "Data types - Exercise 5",
    "text": "Data types - Exercise 5\n\nThere are many data types in R.\nWe’ll mainly use numeric, character, and logical."
  },
  {
    "objectID": "exercises/ex-01.html#vectors---exercise-6",
    "href": "exercises/ex-01.html#vectors---exercise-6",
    "title": "R Bootcamp - Day 1",
    "section": "Vectors - Exercise 6",
    "text": "Vectors - Exercise 6\nLet’s create some vectors.\n\nThe c function combines values together (e.g., c(1,2,3))\n\n. . ."
  },
  {
    "objectID": "exercises/ex-01.html#data-frames",
    "href": "exercises/ex-01.html#data-frames",
    "title": "R Bootcamp - Day 1",
    "section": "Data frames",
    "text": "Data frames\n\nA data.frame is a rectangle, where each column is a vector, and each row is a slice across vectors.\ndata.frame columns are vectors, and can have different types (numeric, character, factor, etc.).\nA data.frame is constructed with data.frame()."
  },
  {
    "objectID": "exercises/ex-01.html#data-frames-tibbles---exercise-7",
    "href": "exercises/ex-01.html#data-frames-tibbles---exercise-7",
    "title": "R Bootcamp - Day 1",
    "section": "Data frames & tibbles - Exercise 7",
    "text": "Data frames & tibbles - Exercise 7\nCreate a data.frame and tibble.\nNow echo the contents of df and tbl to the console and inspect"
  },
  {
    "objectID": "exercises/ex-01.html#r-packages---exercise-8",
    "href": "exercises/ex-01.html#r-packages---exercise-8",
    "title": "R Bootcamp - Day 1",
    "section": "R packages - Exercise 8",
    "text": "R packages - Exercise 8\nLet’s do the following to explore R packages:\n\nLook at the “Environment” panel in Rstudio\nExplore Global Environment\nExplore the contents of a package"
  },
  {
    "objectID": "exercises/ex-01.html#quarto-exercise---exercise-9",
    "href": "exercises/ex-01.html#quarto-exercise---exercise-9",
    "title": "R Bootcamp - Day 1",
    "section": "Quarto Exercise - Exercise 9",
    "text": "Quarto Exercise - Exercise 9\nLet’s do the following to explore Quarto documents:\n\nCreate a new Quarto document\nRender the document to see the output"
  },
  {
    "objectID": "exercises/ex-01.html#problem-sets-and-submission",
    "href": "exercises/ex-01.html#problem-sets-and-submission",
    "title": "R Bootcamp - Day 1",
    "section": "Problem sets and submission",
    "text": "Problem sets and submission\nYour first problem set is in problem-sets/ps-01.qmd"
  },
  {
    "objectID": "exercises/ex-10.html",
    "href": "exercises/ex-10.html",
    "title": "Stats Bootcamp - class 10",
    "section": "",
    "text": "Flip a coin 5 times with equal prob of H or T\nAgain\n. . .\nSet a seed\n\n#\n\n\n#"
  },
  {
    "objectID": "exercises/ex-10.html#lets-flip-a-fair-coin",
    "href": "exercises/ex-10.html#lets-flip-a-fair-coin",
    "title": "Stats Bootcamp - class 10",
    "section": "",
    "text": "Flip a coin 5 times with equal prob of H or T\nAgain\n. . .\nSet a seed\n\n#\n\n\n#"
  },
  {
    "objectID": "exercises/ex-10.html#lets-flip-an-unfair-coin",
    "href": "exercises/ex-10.html#lets-flip-an-unfair-coin",
    "title": "Stats Bootcamp - class 10",
    "section": "Let’s flip an unfair coin",
    "text": "Let’s flip an unfair coin\nFlip a coin 5 times with equal prob of H or T\nAgain"
  },
  {
    "objectID": "exercises/ex-10.html#lets-summarize-the-flipping-results",
    "href": "exercises/ex-10.html#lets-summarize-the-flipping-results",
    "title": "Stats Bootcamp - class 10",
    "section": "Let’s summarize the flipping results",
    "text": "Let’s summarize the flipping results\nFlip a fair coin 10\nFlip a fair coin 10 and calculate mean\nAgain\n. . .\nUnfair coin\nUnfair coin, again"
  },
  {
    "objectID": "exercises/ex-10.html#lets-go-wild-flipping",
    "href": "exercises/ex-10.html#lets-go-wild-flipping",
    "title": "Stats Bootcamp - class 10",
    "section": "Let’s go wild flipping",
    "text": "Let’s go wild flipping\nFlip a fair coin 10 times and calculate mean. Then do 5 rounds of that experiment.\n. . .\nSame thing for an unfair coin."
  },
  {
    "objectID": "exercises/ex-10.html#tidy-and-visualize-flips",
    "href": "exercises/ex-10.html#tidy-and-visualize-flips",
    "title": "Stats Bootcamp - class 10",
    "section": "Tidy and visualize flips",
    "text": "Tidy and visualize flips\nmake a dataframe with means and accompanying info\n. . .\nplot it"
  },
  {
    "objectID": "exercises/ex-10.html#play-around-some-more",
    "href": "exercises/ex-10.html#play-around-some-more",
    "title": "Stats Bootcamp - class 10",
    "section": "Play around some more",
    "text": "Play around some more"
  },
  {
    "objectID": "exercises/ex-14.html",
    "href": "exercises/ex-14.html",
    "title": "Stats Bootcamp - class 14",
    "section": "",
    "text": "# we are reading the data directly from the internet\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00FC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DF&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C5&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E5&gt;' to native encoding\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1,6,9,14,15,24:28)]\nbiochem &lt;- biochem[,keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\",\"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename sex to sex\nb &lt;- inner_join(biochem, weight, by=\"subject_name\") |&gt; \n  na.omit() |&gt;\n  rename(sex=gender)"
  },
  {
    "objectID": "exercises/ex-14.html#prepare-mouse-biochem-data",
    "href": "exercises/ex-14.html#prepare-mouse-biochem-data",
    "title": "Stats Bootcamp - class 14",
    "section": "",
    "text": "# we are reading the data directly from the internet\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E4&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00FC&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00DF&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E6&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00D8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00F8&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00C5&gt;' to native encoding\n\n\nWarning in FUN(X[[i]], ...): unable to translate '&lt;U+00E5&gt;' to native encoding\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1,6,9,14,15,24:28)]\nbiochem &lt;- biochem[,keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\",\"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename sex to sex\nb &lt;- inner_join(biochem, weight, by=\"subject_name\") |&gt; \n  na.omit() |&gt;\n  rename(sex=gender)"
  },
  {
    "objectID": "exercises/ex-14.html#learning-objectives",
    "href": "exercises/ex-14.html#learning-objectives",
    "title": "Stats Bootcamp - class 14",
    "section": "Learning objectives",
    "text": "Learning objectives\n\n\nFormulate and Execute null hypothesis testing\n\nIdentify and Perform the proper statistical test for data type/comparison\n\nCalculate and Interpret p-values"
  },
  {
    "objectID": "exercises/ex-14.html#random-variables",
    "href": "exercises/ex-14.html#random-variables",
    "title": "Stats Bootcamp - class 14",
    "section": "Random variables",
    "text": "Random variables\nResponse Variable ( y - aka dependent or outcome variable): this variable is predicted or its variation is explained by the explanatory variable. In an experiment, this is the outcome that is measured following manipulation of the explanatory variable.\nExplanatory Variable ( x - aka independent or predictor variable): explains variations in the response variable. In an experiment, it is manipulated by the researcher."
  },
  {
    "objectID": "exercises/ex-14.html#the-simplicity-underlying-common-tests",
    "href": "exercises/ex-14.html#the-simplicity-underlying-common-tests",
    "title": "Stats Bootcamp - class 14",
    "section": "The simplicity underlying common tests",
    "text": "The simplicity underlying common tests\nMost of the common statistical models (t-test, correlation, ANOVA; etc.) are special cases of linear models or a very close approximation. This simplicity means that there is less to learn. It all comes down to:\n\n\\(y = a \\cdot x + b\\)\n\nThis needless complexity multiplies when students try to rote learn the parametric assumptions underlying each test separately rather than deducing them from the linear model."
  },
  {
    "objectID": "exercises/ex-14.html#stats-equation-for-a-line",
    "href": "exercises/ex-14.html#stats-equation-for-a-line",
    "title": "Stats Bootcamp - class 14",
    "section": "Stats equation for a line",
    "text": "Stats equation for a line\nModel:\n\\(y\\) equals the intercept (\\(\\beta_0\\)) pluss a slope (\\(\\beta_1\\)) times \\(x\\).\n\\(y = \\beta_0 + \\beta_1 x \\qquad \\qquad \\mathcal{H}_0: \\beta_1 = 0\\)\n… which is the same as \\(y = b + a \\cdot x\\).\nThe short hand for this in R: y ~ 1 + x\nR interprets this as:\ny = 1*number + x*othernumber\nThe task of t-tests, lm, etc., is simply to find the numbers that best predict \\(y\\)."
  },
  {
    "objectID": "exercises/ex-14.html#appropriate-statistical-test-cheatsheet",
    "href": "exercises/ex-14.html#appropriate-statistical-test-cheatsheet",
    "title": "Stats Bootcamp - class 14",
    "section": "Appropriate statistical test cheatsheet",
    "text": "Appropriate statistical test cheatsheet"
  },
  {
    "objectID": "exercises/ex-14.html#comparing-means-between-two-groups",
    "href": "exercises/ex-14.html#comparing-means-between-two-groups",
    "title": "Stats Bootcamp - class 14",
    "section": "Comparing means between two groups",
    "text": "Comparing means between two groups\nWe will compare mouse \\(weight\\) by \\(sex\\).\n\n# plot weight by sex\np_ws &lt;- ggplot(b,\n               aes(x = sex, y = weight)) +\n  geom_jitter(size=1) +\n  geom_hline(yintercept = mean(b$weight),\n             color = \"red\") +\n  theme_cowplot()\n\n\n# plot weight by sex with mean weight and mean weight by sex  \np_ws2 &lt;- ggplot(b,\n                aes(x = sex, y = weight)) +\n  geom_jitter(size=1) +\n  geom_hline(yintercept = mean(b$weight),\n             color = \"red\") +\n stat_summary(fun = \"mean\", geom = \"point\",  fill = \"blue\", shape = 23, size=3) +\n  theme_cowplot()\n\nplot_grid(p_ws, p_ws2, ncol = 2, labels = c(\"weight\",\"weight by sex\"), scale = c(1,1))"
  },
  {
    "objectID": "exercises/ex-14.html#step-1-can-mouse-sex-explain-mouse-weight",
    "href": "exercises/ex-14.html#step-1-can-mouse-sex-explain-mouse-weight",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 1: Can mouse sex explain mouse weight?",
    "text": "STEP 1: Can mouse sex explain mouse weight?\nModel: \\(y_{i} = \\beta_0 \\cdot 1+ \\beta_1 \\cdot x_{i}\\)\nNull Hypothesis: \\(\\mathcal{H}_0: \\beta_1 = 0\\)\n\\(\\mathcal{H}_0:\\) mouse \\(sex\\) does NOT explain \\(weight\\)\nAlternative Hypothesis: \\(\\mathcal{H}_1: \\beta_1 \\neq 0\\)\n\\(\\mathcal{H}_1:\\) mouse \\(sex\\) does explain \\(weight\\)\nImportant: \\(x_{i}\\) is an indicator (0 or 1) saying whether data point i was sampled from one or the other group (female or male).\nWe will explore this in more detail soon."
  },
  {
    "objectID": "exercises/ex-14.html#step-2-fit-linear-model-and-examine-results",
    "href": "exercises/ex-14.html#step-2-fit-linear-model-and-examine-results",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 2: Fit linear model and examine results",
    "text": "STEP 2: Fit linear model and examine results\n\nfit_ws &lt;- \n\nFit summary:\n\n??(fit_ws) |&gt;\n  gt() |&gt;\n  fmt_number(columns = r.squared:statistic, decimals = 3)\n\nCoefficient summary:\n\n??(fit_ws) |&gt;\n  gt() |&gt;\n  fmt_number(columns =estimate:statistic, decimals = 3)"
  },
  {
    "objectID": "exercises/ex-14.html#collecting-residuals-and-other-information",
    "href": "exercises/ex-14.html#collecting-residuals-and-other-information",
    "title": "Stats Bootcamp - class 14",
    "section": "Collecting residuals and other information",
    "text": "Collecting residuals and other information\nadd residuals and other information\n\n#augment\nb_ws &lt;- \n\n\n# mean weight\navg_w &lt;-\n\n# mean weight female\navg_wf &lt;- \n\n\n# mean weight male\navg_wm &lt;-"
  },
  {
    "objectID": "exercises/ex-14.html#step-3-visualize-the-error-around-fit",
    "href": "exercises/ex-14.html#step-3-visualize-the-error-around-fit",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 3: Visualize the error around fit",
    "text": "STEP 3: Visualize the error around fit\n\n# plot of data with mean and colored by residuals\n\np_ws &lt;- ggplot(b_ws,\n               aes(x = sex, y = weight)) +\n  geom_point(position = position_jitter(),\n             aes(color = .resid)) +\n  scale_color_gradient2(low = \"blue\",\n                        mid = \"black\",\n                        high = \"yellow\") +\n    geom_hline(yintercept = ??,\n               color = \"darkgrey\") +\n  geom_segment(aes(x=.5, xend=1.5,\n                   y=??, yend=??),\n               color=\"red\") +\n    geom_segment(aes(x=1.5, xend=2.5,\n                     y=??), yend=??,\n                 color=\"red\") +\n  theme_cowplot()\n  \np_ws"
  },
  {
    "objectID": "exercises/ex-14.html#step-3-visualize-the-error-around-the-null-mean-weight",
    "href": "exercises/ex-14.html#step-3-visualize-the-error-around-the-null-mean-weight",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 3: Visualize the error around the null (mean weight)",
    "text": "STEP 3: Visualize the error around the null (mean weight)\n\np_w &lt;- ggplot(b_ws,\n               aes(x = sex, y = weight)) +\n  geom_point(position = position_jitter(),\n             aes(color = weight-avg_w)) +\n  scale_color_gradient2(low = \"blue\",\n                        mid = \"black\",\n                        high = \"yellow\") +\n    geom_hline(yintercept = avg_w,\n               color = \"darkgrey\") +\n  theme_cowplot()\n  \np_w"
  },
  {
    "objectID": "exercises/ex-14.html#compare-fit-error-to-null-error-graphically",
    "href": "exercises/ex-14.html#compare-fit-error-to-null-error-graphically",
    "title": "Stats Bootcamp - class 14",
    "section": "Compare fit error to null error graphically",
    "text": "Compare fit error to null error graphically\n\nplot_grid(p_ws, p_w, ncol = 2, labels = c(\"weight by sex\",\"weight by intercept\"))\n\nWe are fitting 2 lines to the data. For the weight by sex model of the fit (left), we fit 2 lines. For the weight by null model (right) we fit 1 line."
  },
  {
    "objectID": "exercises/ex-14.html#exceptions-mice-with-highest-residuals",
    "href": "exercises/ex-14.html#exceptions-mice-with-highest-residuals",
    "title": "Stats Bootcamp - class 14",
    "section": "Exceptions: mice with highest residuals",
    "text": "Exceptions: mice with highest residuals"
  },
  {
    "objectID": "exercises/ex-14.html#matrices-interlude-begin",
    "href": "exercises/ex-14.html#matrices-interlude-begin",
    "title": "Stats Bootcamp - class 14",
    "section": "Matrices Interlude Begin\n",
    "text": "Matrices Interlude Begin\n\n\nHow do we go from 2 fit lines to 1 equation\n\nSince we don’t want to calculate any of this by hand, the framework needs to be flexible such that a computer can execute for different flavors of comparison (cont y vs cont x, cont y vs 2 or more categorical x, …)."
  },
  {
    "objectID": "exercises/ex-14.html#lets-focus-on-just-a-few-mice",
    "href": "exercises/ex-14.html#lets-focus-on-just-a-few-mice",
    "title": "Stats Bootcamp - class 14",
    "section": "Let’s focus on just a few mice",
    "text": "Let’s focus on just a few mice\nRemember that:\\(weight\\) is \\(y\\)\\(F_{avg}\\) is the average \\(weight\\) of \\(females\\)\\(M_{avg}\\) is the average \\(weight\\) of \\(males\\)\n. . .\nA048054885, female\\(y_{85}= 1 \\cdot F_{avg} + 0 \\cdot M_{avg} + residual_{85}\\)\nA067109771, female\\(y_{71}= 1 \\cdot F_{avg} + 0 \\cdot M_{avg} + residual_{71}\\)\n. . .\nA066822351, male\\(y_{51}= 0 \\cdot F_{avg} + 1 \\cdot M_{avg} + residual_{51}\\)\nA048274362, male\\(y_{62}= 0 \\cdot F_{avg} + 1 \\cdot M_{avg} + residual_{62}\\)"
  },
  {
    "objectID": "exercises/ex-14.html#lets-focus-on-just-a-few-mice-1",
    "href": "exercises/ex-14.html#lets-focus-on-just-a-few-mice-1",
    "title": "Stats Bootcamp - class 14",
    "section": "Let’s focus on just a few mice",
    "text": "Let’s focus on just a few mice\n\nb_ws |&gt; \n  filter(subject_name %in% c(\"A048054885\",\"A067109771\",\"A066822351\",\"A048274362\")) |&gt;\n  select(subject_name, weight, sex, .fitted, .resid) |&gt;\n  arrange(sex) |&gt;\n  gt()"
  },
  {
    "objectID": "exercises/ex-14.html#need-a-volunteer",
    "href": "exercises/ex-14.html#need-a-volunteer",
    "title": "Stats Bootcamp - class 14",
    "section": "Need a volunteer",
    "text": "Need a volunteer\nMe: Ooohh my, imagine how tedious it would be to do this for all mice…Volunteer: Wait a sec…isn’t there a way to formulate this as a matrix algebra problem.Me: You’re right - I’m so glad you asked! Let’s conjur matrix-magic to solve this problem..\n. . .\n\\(f_{avg} = \\beta_0\\) is the average \\(weight\\) of \\(female\\) mice\\(m_{avg} = \\beta_1\\) is the average \\(weight\\) of \\(male\\) mice\n. . .\n\\(\\begin{bmatrix} y_{85} \\\\ y_{71} \\\\ y_{51} \\\\y_{62} \\end{bmatrix} = \\begin{bmatrix} 1 & 0 \\\\ 1 & 0 \\\\ 0 & 1 \\\\ 0 & 1 \\end{bmatrix} \\cdot \\begin{bmatrix} \\beta_0 \\\\ \\beta_1 \\end{bmatrix} + \\begin{bmatrix} e_{85} \\\\ e_{71} \\\\ e_{51} \\\\e_{62} \\end{bmatrix}\\)\n. . .\nSo basically this looks like the same equation for fitting a line we’ve been discussing, just w/a few more dimensions :)\nThis is a conceptual peak into the underbelly of how the \\(\\beta\\) cofficients and least squares is performed using matrix operations (linear algebra). If you are interested in learning more see references at the end of the slides.\nMatrices Interlude FIN"
  },
  {
    "objectID": "exercises/ex-14.html#calculate-r2",
    "href": "exercises/ex-14.html#calculate-r2",
    "title": "Stats Bootcamp - class 14",
    "section": "Calculate \\(R^2\\)\n",
    "text": "Calculate \\(R^2\\)\n\n\\(SS_{fit}\\) — sum of squared errors around the least-squares fit\n\nss_fit &lt;- \n\n\\(SS_{null}\\) — sum of squared errors around the mean of \\(y\\)\n\nss_null &lt;- \n\n\\(R^2 = 1 - \\displaystyle \\frac {SS_{fit}}{SS_{null}}\\)\n\nrsq &lt;- ??\n\n\nglance(fit_ws) |&gt; select(r.squared)\n\nWoohoo!!"
  },
  {
    "objectID": "exercises/ex-14.html#compare-to-traditional-t-test",
    "href": "exercises/ex-14.html#compare-to-traditional-t-test",
    "title": "Stats Bootcamp - class 14",
    "section": "Compare to traditional t-test",
    "text": "Compare to traditional t-test\n\nb |&gt; \n  ?? |&gt;\n  select(-c(n1,n2,df)) |&gt;\n  gt()\n\n\ntidy(fit_ws) |&gt;\n  select(term, estimate, statistic, p.value) |&gt;\n  gt()"
  },
  {
    "objectID": "exercises/ex-14.html#prep-data-for-fams",
    "href": "exercises/ex-14.html#prep-data-for-fams",
    "title": "Stats Bootcamp - class 14",
    "section": "prep data for fams",
    "text": "prep data for fams\n\n# i have pre-selected some families to compare\nmyfams &lt;- c(\"B1.5:E1.4(4) B1.5:A1.4(5)\",\n            \"F1.3:A1.2(3) F1.3:E2.2(3)\",\n            \"A1.3:D1.2(3) A1.3:H1.2(3)\",\n            \"D5.4:G2.3(4) D5.4:C4.3(4)\")\n\n# only keep the familys in myfams\nbfam &lt;- b |&gt;\n  filter(family %in% myfams) |&gt;\n  droplevels() \n\n# simplify family names and make factor\nbfam$family &lt;- gsub(pattern = \"\\\\..*\", replacement = \"\", x = bfam$family) |&gt;\n  as.factor()\n\n\n# make B1 the reference (most similar to overall mean)\nbfam$family &lt;- relevel(x = bfam$family, ref =\"B1\")"
  },
  {
    "objectID": "exercises/ex-14.html#step-1-can-family-explain-weight",
    "href": "exercises/ex-14.html#step-1-can-family-explain-weight",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 1: Can family explain weight?",
    "text": "STEP 1: Can family explain weight?\nANOVA -&gt; comparing means of 3 or more groups.\nLet’s compare the \\(weight\\) by \\(family\\), but only for a few selected families.\n\nggplot(data = ??,\n       aes(??)) +\n  geom_jitter(width = .2) +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-14.html#what-does-the-model-look-like",
    "href": "exercises/ex-14.html#what-does-the-model-look-like",
    "title": "Stats Bootcamp - class 14",
    "section": "What does the model look like?",
    "text": "What does the model look like?\nModel: \\(y_{i} = \\beta_0 \\cdot 1+ \\beta_1 \\cdot x_{i}\\)\nNull Hypothesis: \\(\\mathcal{H}_0: \\beta_1 = 0\\)\n\\(\\mathcal{H}_0:\\) mouse \\(family\\) does NOT explain \\(weight\\)\nAlternative Hypothesis: \\(\\mathcal{H}_1: \\beta_1 \\neq 0\\)\n\\(\\mathcal{H}_1:\\) mouse \\(family\\) does explain \\(weight\\)\nImportant: \\(x_{i}\\) is an indicator (0 or 1) saying which group point \\(i\\) was sampled from using the matrix encoding of 0s and 1s.\nBelow is an example depicting 6 observations with 2 from each of 3 families:\n\\(\\begin{bmatrix} y_{1} \\\\ y_{2} \\\\ y_{3} \\\\y_{4} \\\\y_{5} \\\\y_{5} \\end{bmatrix} = \\begin{bmatrix} 1 & 0 & 0 \\\\ 1 & 0 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 1 & 0 \\\\ 0 & 0 & 1 \\\\ 0 & 0 & 1 \\\\ \\end{bmatrix} \\cdot \\begin{bmatrix} \\beta_0 \\\\ \\beta_1 \\end{bmatrix} + \\begin{bmatrix} e_{1} \\\\ e_{2} \\\\ e_{3} \\\\e_{4} \\\\e_{5} \\\\e_{6} \\end{bmatrix}\\)"
  },
  {
    "objectID": "exercises/ex-14.html#step-2-fit-linear-model-and-examine-results-1",
    "href": "exercises/ex-14.html#step-2-fit-linear-model-and-examine-results-1",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 2: Fit linear model and examine results",
    "text": "STEP 2: Fit linear model and examine results\n\nfit_wf &lt;- ??\n\nFit summary:\n\nglance(fit_wf) |&gt;\n  gt() |&gt;\n  fmt_number(columns = r.squared:statistic, decimals = 3)\n\nCoefficient summary:\n\ntidy(fit_wf) |&gt;\n  gt() |&gt;\n  fmt_number(columns =estimate:statistic, decimals = 3)"
  },
  {
    "objectID": "exercises/ex-14.html#collecting-residuals-and-other-information-1",
    "href": "exercises/ex-14.html#collecting-residuals-and-other-information-1",
    "title": "Stats Bootcamp - class 14",
    "section": "Collecting residuals and other information",
    "text": "Collecting residuals and other information\nadd residuals and other information\n\n#augment\nb_wf &lt;- \n\n# mean weight per fam\nmean_B1 &lt;- fit_wf$coefficients[??]\n\nmean_A1 &lt;- mean_B1 +\n  fit_wf$coefficients[??]\n\nmean_D5 &lt;- mean_B1 +\n  fit_wf$coefficients[??]\n\nmean_F1 &lt;- mean_B1 +\n  fit_wf$coefficients[??]"
  },
  {
    "objectID": "exercises/ex-14.html#step-3-visualize-the-error-around-fit-1",
    "href": "exercises/ex-14.html#step-3-visualize-the-error-around-fit-1",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 3: Visualize the error around fit",
    "text": "STEP 3: Visualize the error around fit\n\nggplot(b_wf,\n       aes(x = family, y = weight)) +\n  geom_point(position = position_jitter(),\n             aes(color = .resid)) +\n  scale_color_gradient2(low = \"blue\",\n                        mid = \"black\",\n                        high = \"yellow\") +\ngeom_segment(aes(x=.5, xend=1.5, y=mean_B1, yend=mean_B1), color=\"red\") +\n  geom_segment(aes(x=1.5, xend=2.5, y=mean_A1, yend=mean_A1), color=\"red\") +\n  geom_segment(aes(x=2.5, xend=3.5, y=mean_D5, yend=mean_D5), color=\"red\") +\n  geom_segment(aes(x=3.5, xend=4.5, y=mean_F1, yend=mean_F1), color=\"red\") +\n  geom_segment(aes(x=.5, xend=4.5, y=mean(weight), yend=mean(weight)), color=\"black\") +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-14.html#compare-to-traditional-anova",
    "href": "exercises/ex-14.html#compare-to-traditional-anova",
    "title": "Stats Bootcamp - class 14",
    "section": "Compare to traditional ANOVA",
    "text": "Compare to traditional ANOVA\n\nbfam |&gt; \n  ?? |&gt;\n  gt()\n\n\ntidy(fit_wf) |&gt;\n  select(term, estimate, statistic, p.value) |&gt;\n  gt()"
  },
  {
    "objectID": "exercises/ex-14.html#comparing-2-groups-of-2-continuous-variables",
    "href": "exercises/ex-14.html#comparing-2-groups-of-2-continuous-variables",
    "title": "Stats Bootcamp - class 14",
    "section": "Comparing 2 groups of 2 continuous variables",
    "text": "Comparing 2 groups of 2 continuous variables\nANCOVA, Analysis of Covariance. ANOVA with more than one independent variable. What is the impact of mouse age on mouse weight for males vs females.\n\nggplot(data = b, aes(y = weight, x = age, color=sex)) +\n  geom_point(size=.5) +\n  geom_smooth(method=lm) +\n  theme_cowplot()"
  },
  {
    "objectID": "exercises/ex-14.html#step-2-fit-linear-model-and-examine-results-2",
    "href": "exercises/ex-14.html#step-2-fit-linear-model-and-examine-results-2",
    "title": "Stats Bootcamp - class 14",
    "section": "STEP 2: Fit linear model and examine results",
    "text": "STEP 2: Fit linear model and examine results\n\nfit_wa_sex &lt;- lm(formula = weight ~ 1 + age + sex, data = b)\nb_wa_sex &lt;- augment(fit_ws, data = b)\n\nFit summary:\n\nglance(fit_wa_sex) |&gt;\n  gt() |&gt;\n  fmt_number(columns = r.squared:statistic, decimals = 3)\n\nCompare to traditional:\n\naov(formula = weight ~ 1 + age + sex, data = b) |&gt;\n  glance()"
  },
  {
    "objectID": "exercises/ex-14.html#references",
    "href": "exercises/ex-14.html#references",
    "title": "Stats Bootcamp - class 14",
    "section": "References",
    "text": "References\nLinear Models Pt.3 - Design Matrices\nA Matrix Formulation of the Multiple Regression Model\nDoing and reporting your first ANOVA and ANCOVA in R40f2ef"
  },
  {
    "objectID": "exercises/ex-13.html",
    "href": "exercises/ex-13.html",
    "title": "Stats Bootcamp - class 13",
    "section": "",
    "text": "# we are reading the data directly from the internet\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1,6,9,14,15,24:28)]\nbiochem &lt;- biochem[,keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\",\"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb &lt;- inner_join(biochem, weight, by=\"subject_name\") |&gt; \n  na.omit() |&gt;\n  rename(sex=gender)"
  },
  {
    "objectID": "exercises/ex-13.html#prepare-mouse-biochem-data",
    "href": "exercises/ex-13.html#prepare-mouse-biochem-data",
    "title": "Stats Bootcamp - class 13",
    "section": "",
    "text": "# we are reading the data directly from the internet\nbiochem &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |&gt;\n  janitor::clean_names()\n\n# simplify names a bit more\ncolnames(biochem) &lt;- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep &lt;- colnames(biochem)[c(1,6,9,14,15,24:28)]\nbiochem &lt;- biochem[,keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight &lt;- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) &lt;- c(\"subject_name\",\"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb &lt;- inner_join(biochem, weight, by=\"subject_name\") |&gt; \n  na.omit() |&gt;\n  rename(sex=gender)"
  },
  {
    "objectID": "exercises/ex-13.html#association-between-mouse-weight-and-tot_cholesterol",
    "href": "exercises/ex-13.html#association-between-mouse-weight-and-tot_cholesterol",
    "title": "Stats Bootcamp - class 13",
    "section": "Association between mouse \\(weight\\) and \\(tot\\_cholesterol\\)\n",
    "text": "Association between mouse \\(weight\\) and \\(tot\\_cholesterol\\)\n\n\nggscatter()\n\nwe previously established these are normal enough &gt; \\(\\mathcal{H}_0\\) is no (linear) relationship between \\(tot\\_cholesterol\\) and \\(weight\\)\n\n\nb |&gt; \n  cor_test(??, ??,\n           method = \"??\"\n           )\n\nP value well below 0.05\n\n\\(\\mathcal{H}_0\\) is no relationship between \\(tot\\_cholesterol\\) and \\(weight\\) NOT WELL SUPPORTED\n\nSo there is a (linear) relationship between \\(tot\\_cholesterol\\) and \\(weight\\)"
  },
  {
    "objectID": "exercises/ex-13.html#visualize-pearson-correlation",
    "href": "exercises/ex-13.html#visualize-pearson-correlation",
    "title": "Stats Bootcamp - class 13",
    "section": "Visualize Pearson correlation",
    "text": "Visualize Pearson correlation\n\nggscatter(data = b,\n          y = \"weight\",\n          x = \"tot_cholesterol\"\n          ) + \n  stat_cor(method = \"pearson\",\n           label.x = 1,\n           label.y = 30)"
  },
  {
    "objectID": "exercises/ex-13.html#manual-calculation-of-pearson-correlation",
    "href": "exercises/ex-13.html#manual-calculation-of-pearson-correlation",
    "title": "Stats Bootcamp - class 13",
    "section": "Manual calculation of Pearson correlation",
    "text": "Manual calculation of Pearson correlation\n\\(Corr(x,y) = \\displaystyle \\frac {\\sum_{i=1}^{n} (x_{i} - \\overline{x})(y_{i} - \\overline{y})}{\\sum_{i=1}^{n} \\sqrt(x_{i} - \\overline{x})^2 \\sqrt(y_{i} - \\overline{y})^2}\\)\n\n# mean total cholesterol\nm_chol &lt;- \n\n# average weight\nm_weight &lt;- \n\n# difference from mean total cholesterol\ndiff_chol &lt;- \n\n# difference from mean total weight\ndiff_weight &lt;-\n\n# follow formula above\nmanual_pearson &lt;- \n\nmanual_pearson"
  },
  {
    "objectID": "exercises/ex-13.html#spearman-correlation-nonparametric",
    "href": "exercises/ex-13.html#spearman-correlation-nonparametric",
    "title": "Stats Bootcamp - class 13",
    "section": "Spearman Correlation (nonparametric)",
    "text": "Spearman Correlation (nonparametric)\nSpearman’s rank correlation coefficientor Spearman’s ρ, named after Charles Spearman is a nonparametric measure of rank correlation (statistical dependence between the rankings of two variables). It assesses how well the relationship between two variables can be described using a monotonic function.\nMore info here.\n\nb |&gt; \n  cor_test(weight, tot_cholesterol,\n           method = \"??\"\n           )\n\nP value well below 0.05\n\n\\(\\mathcal{H}_0\\) is no relationship between \\(tot\\_cholesterol\\) and \\(weight\\) NOT WELL SUPPORTED"
  },
  {
    "objectID": "exercises/ex-13.html#visualize-spearman-correlation",
    "href": "exercises/ex-13.html#visualize-spearman-correlation",
    "title": "Stats Bootcamp - class 13",
    "section": "Visualize Spearman correlation",
    "text": "Visualize Spearman correlation\n\nggscatter(data = b,\n          y = \"weight\",\n          x = \"tot_cholesterol\"\n          ) + \n  stat_cor(method = \"spearman\",\n           label.x = 1,\n           label.y = 30)"
  },
  {
    "objectID": "exercises/ex-13.html#lets-create-a-hypothetical-example",
    "href": "exercises/ex-13.html#lets-create-a-hypothetical-example",
    "title": "Stats Bootcamp - class 13",
    "section": "Let’s create a hypothetical example",
    "text": "Let’s create a hypothetical example\ncreate tibble \\(d\\) with variables \\(x\\) and \\(y\\)\n\\(x\\), 1:50\n\\(y\\), which is \\(x^{10}\\)\n\nd &lt;- tibble(\n  x=??,\n  y=??)\n\n. . .\nscatter plot\n\nggscatter(data = d,\n          x = \"x\",\n          y = \"y\")\n\n\nPearson\n\nd |&gt; \n  cor_test(x, y,\n           method = \"pearson\"\n           ) |&gt;\n  select(cor)\n\n. . .\nSpearman\n\nd |&gt; \n  cor_test(x, y,\n           method = \"spearman\"\n           ) |&gt;\n  select(cor)"
  },
  {
    "objectID": "exercises/ex-13.html#additional-examples-with-correlation",
    "href": "exercises/ex-13.html#additional-examples-with-correlation",
    "title": "Stats Bootcamp - class 13",
    "section": "Additional examples with correlation",
    "text": "Additional examples with correlation\ncompare 1 variable to all other quantitative variables\n\\(weight\\)\n\nb |&gt;\n  cor_test(??) |&gt;\n  gt()\n\nrelationship between \\(weight\\) and \\(tot\\_cholesterol\\) by \\(sex\\)\n\nb |&gt;\n\n  gt()"
  },
  {
    "objectID": "exercises/ex-13.html#appropriate-statistical-test-cheatsheet",
    "href": "exercises/ex-13.html#appropriate-statistical-test-cheatsheet",
    "title": "Stats Bootcamp - class 13",
    "section": "Appropriate statistical test cheatsheet",
    "text": "Appropriate statistical test cheatsheet"
  },
  {
    "objectID": "exercises/ex-13.html#regression",
    "href": "exercises/ex-13.html#regression",
    "title": "Stats Bootcamp - class 13",
    "section": "Regression",
    "text": "Regression\nWe are going to change our frame work to learn about regression. The nice thing is that everything we learn for regression is applicable to all the tests we just learned."
  },
  {
    "objectID": "exercises/ex-13.html#the-simplicity-underlying-common-tests",
    "href": "exercises/ex-13.html#the-simplicity-underlying-common-tests",
    "title": "Stats Bootcamp - class 13",
    "section": "The simplicity underlying common tests",
    "text": "The simplicity underlying common tests\nMost of the common statistical models (t-test, correlation, ANOVA; etc.) are special cases of linear models or a very close approximation. This simplicity means that there is less to learn. It all comes down to:\n\n\\(y = a \\cdot x + b\\)\n\nThis needless complexity multiplies when students try to rote learn the parametric assumptions underlying each test separately rather than deducing them from the linear model."
  },
  {
    "objectID": "exercises/ex-13.html#equation-for-a-line",
    "href": "exercises/ex-13.html#equation-for-a-line",
    "title": "Stats Bootcamp - class 13",
    "section": "Equation for a line",
    "text": "Equation for a line\nRemember:\\(y = a \\cdot x + b\\)\nOR\\(y = b + a \\cdot x\\)\n\\(a\\) is the SLOPE (2) \\(b\\) is the y-intercept (1)\n\nd &lt;- tibble(x=c(-1,3),\n            y=c(-1,6)\n             )\n\nggplot(data=d, aes(x=x,y=y)) + \n  geom_blank() +\n  geom_abline(intercept = 1,\n              slope = 2,\n              col = \"red\") +\n  theme_linedraw()"
  },
  {
    "objectID": "exercises/ex-13.html#stats-equation-for-a-line",
    "href": "exercises/ex-13.html#stats-equation-for-a-line",
    "title": "Stats Bootcamp - class 13",
    "section": "Stats equation for a line",
    "text": "Stats equation for a line\nModel:\n\\(y\\) equals the intercept (\\(\\beta_0\\)) pluss a slope (\\(\\beta_1\\)) times \\(x\\).\n\\(y = \\beta_0 + \\beta_1 x \\qquad \\qquad \\mathcal{H}_0: \\beta_1 = 0\\)\n… which is the same as \\(y = b + a \\cdot x\\).\nThe short hand for this in R: y ~ 1 + x\nR interprets this as:\ny = 1*number + x*othernumber\nThe task of t-tests, lm, etc., is simply to find the numbers that best predict \\(y\\)."
  },
  {
    "objectID": "exercises/ex-13.html#stats-equation-for-a-line-1",
    "href": "exercises/ex-13.html#stats-equation-for-a-line-1",
    "title": "Stats Bootcamp - class 13",
    "section": "Stats equation for a line",
    "text": "Stats equation for a line\nAll you need is an intercept (\\(\\beta_0\\)) and a slope (\\(\\beta_1\\)) to get a line:\n\nggplot(data=d, aes(x=x,y=y)) + \n  geom_blank() +\n  geom_abline(intercept = 1,\n              slope = 2,\n              col = \"red\") +\n  theme_linedraw()\n\n\n\n\n\n\n\n\\(\\beta_0\\) = 1 (the y-intercept), \\(\\beta_1\\) = 2 (the slope)\n\\(y = \\beta_0 \\cdot 1 + \\beta_1 \\cdot x\\)\n\\(y = 1 \\cdot 1 + 2 \\cdot x\\)\n\\(y = 1 + 2x\\)\n\nOur mission: FIND THE BEST \\(\\beta\\) coefficients"
  },
  {
    "objectID": "exercises/ex-13.html#linear-regression",
    "href": "exercises/ex-13.html#linear-regression",
    "title": "Stats Bootcamp - class 13",
    "section": "Linear Regression",
    "text": "Linear Regression\n\nSTEP 1: Make a scatter plot visualize the linear relationship between x and y.\nSTEP 2: Perform the regression\nSTEP 3: Look at the \\(R^2\\), \\(F\\)-value and \\(p\\)-value\nSTEP 4: Visualize fit and errors\nSTEP 5: Calculate \\(R^2\\), \\(F\\)-value and \\(p\\)-value ourselves"
  },
  {
    "objectID": "exercises/ex-13.html#step-1-can-mouse-cholesterol-levels-explain-mouse-weight",
    "href": "exercises/ex-13.html#step-1-can-mouse-cholesterol-levels-explain-mouse-weight",
    "title": "Stats Bootcamp - class 13",
    "section": "STEP 1: Can mouse cholesterol levels explain mouse weight?",
    "text": "STEP 1: Can mouse cholesterol levels explain mouse weight?\nPlot \\(weight\\) (y, response variable) and \\(tot_cholesterol\\) (x, explanatory variable)\n\nggplot(data = ??,\n       aes(y = ??,\n           x = ??)) +\n  geom_point(size=.5) +\n  scale_color_manual() +\n  theme_linedraw()"
  },
  {
    "objectID": "exercises/ex-13.html#step-2-do-the-regression",
    "href": "exercises/ex-13.html#step-2-do-the-regression",
    "title": "Stats Bootcamp - class 13",
    "section": "STEP 2: Do the regression",
    "text": "STEP 2: Do the regression\nKeep calm and fit a line! Remember: \\(y = \\beta_0 \\cdot 1+ \\beta_1 \\cdot x\\)\nlinear model equation: \\(weight = \\beta_0 \\cdot 1 + \\beta_1 \\cdot tot\\_cholesterol\\)\n\n\\(\\mathcal{H}_0:\\) \\(tot\\_cholesterol\\) does NOT explain \\(weight\\) Null Hypothesis: \\(\\mathcal{H}_0: \\beta_1 = 0\\)\n\n\\(weight = \\beta_0 \\cdot 1 + 0 \\cdot tot\\_cholesterol\\) \\(weight = \\beta_0 \\cdot 1\\)\n\n\\(\\mathcal{H}_1:\\) Mouse \\(tot\\_cholesterol\\) does explain \\(weight\\)\n\n\\(weight = \\beta_0 \\cdot 1 + \\beta_1 \\cdot tot\\_cholesterol\\)\nThe cool thing here is that we can assess and compare our null and alternative hypothesis by learning and examining the model coefficients (namely the slope). Ultimately, we are comparing a complex model (with cholesterol) to a simple model (without cholesterol).\nhttps://statisticsbyjim.com/regression/interpret-constant-y-intercept-regression/"
  },
  {
    "objectID": "exercises/ex-13.html#step-4-look-at-the-r2-f-value-and-p-value",
    "href": "exercises/ex-13.html#step-4-look-at-the-r2-f-value-and-p-value",
    "title": "Stats Bootcamp - class 13",
    "section": "STEP 4: Look at the \\(R^2\\), \\(F\\)-value and \\(p\\)-value",
    "text": "STEP 4: Look at the \\(R^2\\), \\(F\\)-value and \\(p\\)-value\n\n# fitting a line\nfit_WvC &lt;- lm(\n  data = ??,\n  formula = ??)\n\n\n# base R summary of fit\nsummary(fit_WvC)\n\nThat’s a lot of info, but how would I access it? Time to meet your new best friend:\nBroom"
  },
  {
    "objectID": "exercises/ex-13.html#tidying-output",
    "href": "exercises/ex-13.html#tidying-output",
    "title": "Stats Bootcamp - class 13",
    "section": "Tidying output",
    "text": "Tidying output\ninformation about the model fit\n\n??(fit_WvC) |&gt;\n  gt() |&gt;\n  fmt_number(columns = r.squared:statistic, decimals = 3)\n\ninformation about the intercept and coefficients\n\n??(fit_WvC)|&gt;\n  gt() |&gt;\n  fmt_number(columns =estimate:statistic, decimals = 3)\n\nsave the intercept and slope into variable to use later\n\nchol_intercept &lt;- \n\nchol_slope &lt;- \n\n\n\nfor every 1 unit increase in cholesterol there is a 1.85 unit increase weight\n\n\nggplot(data = b,\n       aes(y = weight,\n           x = tot_cholesterol)) +\n  geom_smooth(method = \"lm\") +\n  geom_point(size=.5) +\n  scale_color_manual() +\n  theme_linedraw()\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "exercises/ex-13.html#collecting-residuals-and-other-information",
    "href": "exercises/ex-13.html#collecting-residuals-and-other-information",
    "title": "Stats Bootcamp - class 13",
    "section": "Collecting residuals and other information",
    "text": "Collecting residuals and other information\nadd residuals and other information\n\nb_WvC &lt;- ??(fit_WvC, data = b)\n\nb_WvC"
  },
  {
    "objectID": "exercises/ex-13.html#what-are-residuals",
    "href": "exercises/ex-13.html#what-are-residuals",
    "title": "Stats Bootcamp - class 13",
    "section": "What are Residuals\n",
    "text": "What are Residuals\n\nResiduals, \\(e\\) — the difference between the observed value of the response variable \\(y\\) and the explanatory value \\(\\widehat{y}\\) is called the residual. Each data point has one residual. Specifically, it is the distance on the y-axis between the observed \\(y_{i}\\) and the fit line.\n\\(e = y_{i} - \\widehat{y}\\)\nResiduals with large absolute values indicate the data point is NOT well explained by the model."
  },
  {
    "objectID": "exercises/ex-13.html#step-5-visualize-fit-and-errors",
    "href": "exercises/ex-13.html#step-5-visualize-fit-and-errors",
    "title": "Stats Bootcamp - class 13",
    "section": "STEP 5: Visualize fit and errors",
    "text": "STEP 5: Visualize fit and errors\nVisualize the residuals OR the error around the fit\n\nggplot(data = b_WvC,\n       aes(x = tot_cholesterol, y = weight)) +\n  geom_point(size=1, aes(color = .resid)) + \n  geom_abline(intercept = pull(chol_intercept),\n              slope = pull(chol_slope),\n              col = \"red\") +\n  scale_color_gradient2(low = \"blue\", \n                        mid = \"black\",\n                        high = \"yellow\") + \n  geom_segment(aes(xend = tot_cholesterol,\n                   yend = .fitted),\n               alpha = .1) + # plot line representing residuals\n  theme_linedraw() \n\n\nVisualize the total error OR the error around the null. So no cholesterol fit, just the mean of y.\n\navg_weight &lt;- mean(b_WvC$weight)"
  },
  {
    "objectID": "exercises/ex-13.html#step-6-calculate-r2-f-value-p-value-ourselves",
    "href": "exercises/ex-13.html#step-6-calculate-r2-f-value-p-value-ourselves",
    "title": "Stats Bootcamp - class 13",
    "section": "STEP 6: Calculate \\(R^2\\), \\(F\\)-value, \\(p\\)-value ourselves",
    "text": "STEP 6: Calculate \\(R^2\\), \\(F\\)-value, \\(p\\)-value ourselves"
  },
  {
    "objectID": "exercises/ex-13.html#what-is-r2",
    "href": "exercises/ex-13.html#what-is-r2",
    "title": "Stats Bootcamp - class 13",
    "section": "What is \\(R^2\\)\n",
    "text": "What is \\(R^2\\)\n\n\\(R^2\\) — the coefficient of determination, which is the proportion of the variance in the response variable that is predictable from the explanatory variable(s).\n\\(R^2 = 1 - \\displaystyle \\frac {SS_{fit}}{SS_{null}}\\)\n\\(SS_{fit}\\) — sum of squared errors around the least-squares fit\n\\(SS_{fit} = \\sum_{i=1}^{n} (data - line)^2 = \\sum_{i=1}^{n} (y_{i} - (\\beta_0 \\cdot 1+ \\beta_1 \\cdot x)^2\\)\n\\(SS_{null}\\) — sum of squared errors around the mean of \\(y\\)\n\\(SS_{null} = \\sum_{i=1}^{n} (data - mean)^2 = \\sum_{i=1}^{n} (y_{i} - \\overline{y})^2\\)"
  },
  {
    "objectID": "exercises/ex-13.html#calculate-r2",
    "href": "exercises/ex-13.html#calculate-r2",
    "title": "Stats Bootcamp - class 13",
    "section": "Calculate \\(R^2\\)\n",
    "text": "Calculate \\(R^2\\)\n\n\\(SS_{fit}\\) — sum of squared errors around the least-squares fit\n\nss_fit &lt;- ??\nss_fit\n\n\\(SS_{null}\\) — sum of squared errors around the mean of \\(y\\)\n\nss_null &lt;- ??\nss_null \n\n\\(R^2 = 1 - \\displaystyle \\frac {SS_{fit}}{SS_{null}}\\)\n\nrsq &lt;- 1- ??\n\nglance(fit_WvC) |&gt; select(r.squared)\n\n. . .\nBTW this is the same \\(R\\) as from the Pearson correlation, just squared:\n\nb |&gt; \n  cor_test(weight,tot_cholesterol,\n           method = \"pearson\") |&gt;\n  mutate(r2 = cor^2) |&gt;\n  pull(r2) |&gt;\n  round(2)"
  },
  {
    "objectID": "exercises/ex-13.html#interpret-r2",
    "href": "exercises/ex-13.html#interpret-r2",
    "title": "Stats Bootcamp - class 13",
    "section": "Interpret \\(R^2\\)\n",
    "text": "Interpret \\(R^2\\)\n\nThere is a 13 % reduction in the variance when we take mouse \\(cholesterol\\) into account\nOR\\(cholesterol\\) explains 13% of variation in mouse \\(weight\\)"
  },
  {
    "objectID": "exercises/ex-13.html#what-is-the-f-statistic",
    "href": "exercises/ex-13.html#what-is-the-f-statistic",
    "title": "Stats Bootcamp - class 13",
    "section": "What is the F-statistic\n",
    "text": "What is the F-statistic\n\nF-statistic — based on the ratio of two variances: the explained variance (due to the model) and the unexplained variance (residuals).\n\\(F = \\displaystyle \\frac{SS_{fit}/(p_{fit}-p_{null})} {SS_{null}/(n-p_{fit})}\\)\n\\(p_{fit}\\) — number of parameters (coefficients) in the fit line\n\\(p_{null}\\) — number of parameters (coefficients) in the mean line\n\\(n\\) — number of data points"
  },
  {
    "objectID": "exercises/ex-13.html#calculate-the-f-statistic",
    "href": "exercises/ex-13.html#calculate-the-f-statistic",
    "title": "Stats Bootcamp - class 13",
    "section": "Calculate the F-statistic\n",
    "text": "Calculate the F-statistic\n\n\\(F = \\displaystyle \\frac{SS_{null} - SS_{fit}/(p_{fit}-p_{null})} {SS_{fit}/(n-p_{fit})}\\)\n\npfit &lt;- ??\npnull &lt;- ??\nn &lt;- ??\n\nf &lt;- ??\n\n\nf\n\nglance(fit_WvC) |&gt; select(statistic)"
  },
  {
    "objectID": "exercises/ex-13.html#p-values",
    "href": "exercises/ex-13.html#p-values",
    "title": "Stats Bootcamp - class 13",
    "section": "P-values",
    "text": "P-values\nYou don’t really need to know what the \\(F-statistic\\) is unless you want to calculate the p-value. In this case we need to generate a null distribution of \\(F-statistic\\) values to compare to our observed \\(F-statistic\\).\nTherefore, we will randomize the \\(tot_cholesterol\\) and \\(weight\\) and then calculate the \\(F-statistic\\).\n\n\nWe will do this many many times to generate a null distribution of \\(F-statistic\\)s.\n\nThe p-value will be the probability of obtaining an \\(F-statistic\\) in the null distribution at least as extreme as our observed \\(F-statistic\\)."
  },
  {
    "objectID": "exercises/ex-13.html#lets-get-started",
    "href": "exercises/ex-13.html#lets-get-started",
    "title": "Stats Bootcamp - class 13",
    "section": "Let’s get started",
    "text": "Let’s get started\n\n# set up an empty tibble to hold our null distribution\nfake_biochem &lt;- tribble()\n\n# we will perform 100 permutations\nmyPerms &lt;- 100\n\nfor (i in 1:myPerms) {\n  tmp &lt;- bind_cols(\n    b_WvC[sample(nrow(b_WvC)), \"weight\"],\n    b_WvC[sample(nrow(b_WvC)),\"tot_cholesterol\"],\n    \"perm\"=factor(rep(i,nrow(b_WvC)))\n    )\n\n  fake_biochem &lt;- bind_rows(fake_biochem,tmp)\n  rm(tmp)\n\n}\n\n\n# let's look at permutations 1 and 2\nggplot(fake_biochem |&gt; filter(perm %in% c(1:2)), aes(x=weight, y=tot_cholesterol, color=perm)) +\n  geom_point(size=.1) +\n  theme_minimal()"
  },
  {
    "objectID": "exercises/ex-13.html#run-100-linear-models",
    "href": "exercises/ex-13.html#run-100-linear-models",
    "title": "Stats Bootcamp - class 13",
    "section": "Run 100 linear models!",
    "text": "Run 100 linear models!\nNow we will calculate and extract linear model results for each permutation individually using nest, mutate, and map functions\n\nfake_biochem_lms &lt;- fake_biochem |&gt;\n  nest(data = -perm) |&gt;\n  mutate(\n    fit = map(data, ~ lm(weight ~ tot_cholesterol, data = .x)),\n    glanced = map(fit, glance)\n  ) |&gt;\n  unnest(glanced)"
  },
  {
    "objectID": "exercises/ex-13.html#visualize-the-null",
    "href": "exercises/ex-13.html#visualize-the-null",
    "title": "Stats Bootcamp - class 13",
    "section": "Visualize the null",
    "text": "Visualize the null\nLet’s take a look at the null distribution of F-statistics from the randomized values\n\nggplot(fake_biochem_lms,\n       aes(x = statistic)) +\ngeom_density(color=\"red\") +\ntheme_minimal()\n\n\nremember that the \\(F-statistic\\) we observed was 255!\n\nggplot(fake_biochem_lms, aes(x = statistic)) +\nxlim(0,f*1.1) +\ngeom_density(color=\"red\") +\ngeom_vline(xintercept = f, color = \"blue\") +\n#  scale_x_log10() +\ntheme_minimal() \n\nIn our 100 randoized simulations, we never see an F-statistic as extreme as the one we observed in the actual data. Therefore:\n\nP &lt; 0.01 or 1/100\n\nReminder, our calculate P value was:"
  },
  {
    "objectID": "exercises/ex-13.html#how-to-find-the-best-least-squares-fit",
    "href": "exercises/ex-13.html#how-to-find-the-best-least-squares-fit",
    "title": "Stats Bootcamp - class 13",
    "section": "How to find the best (least squares) fit?",
    "text": "How to find the best (least squares) fit?\n\nRotate the line of fit\n\nFind the fit that minimizes the Sum of Squared Residuals or \\(SS_{fit}\\)\n\nThis is the derivative (slope of tangent at best point = 0) of the function describing the \\(SS_{fit}\\) and the next rotation is 0."
  },
  {
    "objectID": "exercises/ex-13.html#references",
    "href": "exercises/ex-13.html#references",
    "title": "Stats Bootcamp - class 13",
    "section": "References",
    "text": "References\nDifferences between correlation and regression\nalso more differences between correlation and regression.\nCommon statistical tests are linear models from Jonas Lindeløv\nStatquest\nStats gobbledygook\nLinear Regression Assumptions and Diagnostics in R: Essentials\nPRINCIPLES OF STATISTICS from GraphPad/SAS.\nStatquest: how to go from F-statistic to p-value\nStatQuest: Fitting a line to data, aka least squares, aka linear regression.\nStatQuest: Gradient Descent, Step-by-Step"
  }
]