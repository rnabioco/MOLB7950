---
title: "R Bootcamp - class 1"
author: "Sujatha Jagannathan"
---

## Learning Objectives for the R Bootcamp

-   Follow best coding practices
-   Know the fundamentals of R programming
-   Become familiar with "tidyverse" suite of packages
-   tidyr: "Tidy" a messy dataset
-   Transform data to derive new information
-   ggplot2: Visualize and communicate results
-   Practice reproducible analysis using Rmarkdown (Rigor &
    Reproducibility)

[!](img/tidy1.png) Source: R for Data Science by Hadley Wickham

## Today's class outline

-   Coding best practices
-   Review R basics
-   R vs Rstudio
-   Functions & Arguments
-   Data types
-   Data structures
-   R Packages
-   Review Rmarkdown

## Good coding practices - why?

> "Good coding style is like correct punctuation: you can manage without
> it, butitsuremakesthingseasiertoread." --- Hadley Wickham

## File Names

-   File names should be meaningful and end in `.R`, `.Rmd`,
-   Avoid using special characters in file names - stick with numbers,
    letters, `-`, and `_`.
-   *Never* include spaces in file names!

``` r
# Good names
fit_models.R  
utility_functions.Rmd  

# Bad names
fit models.R  
foo.r  
stuff.r  
```

## File Names

\* If files should be run in a particular order, prefix them with
numbers. \* If it seems likely you'll have more than 10 files, left pad
with zero. \* It looks nice (constant width) and sorts nicely.

``` r
00_download.R  
01_explore.R  
...  
09_model.R  
10_visualize.R  
```

## File Names

-   Avoid capitalizing when not necessary.
-   If you want to include dates in your file name, use the ISO 8601
    standard: `YYYY-MM-DD`
-   Use delimiters intentionally! (helps you to recover metadata easily
    from file names)
-   For example, "\_" to delimit fields; "-" to delimit words

``` r
2019-02-15_class1_data-wrangling.Rmd
```

## File Names

XXX: update to explain R projects and `here`

-   Avoid hard coding file names and instead use relative paths.
-   `~` represents the current working directory.
-   Use `getwd()` to figure out what your working directory is.

``` r
# Good
"~/class1/code/test.R"
    
# Bad
"/Users/sjaganna/Desktop/CU-onedrive/08-teaching/molb7910/class1/data.csv"
```

## Organisation

-   Try to give a file a concise name that evokes its contents
-   One way to organize your files is by grouping them into `data`,
    `code`, `plots`, etc.
-   For **this class** we will use the following structure:

``` r
slides
  - data
  - img
  - class-01.Rmd
  - class-02.Rmd
  ...
exercises
  - data
  - exercises-01.Rmd
  - exercises-02.Rmd
  ...
```

## Internal structure

Use commented lines of `-` and `=` to break up your code chunk into
easily readable segments. Or better yet, make each "action" it's own
chunk and give it a name.

``` r
# Load data ---------------------------

# Plot data ---------------------------
```

# Questions?

## Basics of R - Overview

-   R as a calculator (Exercise #1)
-   Functions and arguments (Exercises #2-3)
-   Data types: numeric, character, logical (& more) (Exercise #4)
-   Data structures: vector, list, matrix, data frame, tibbles
    (Exercises #5-6)
-   Package system, Rstudio, and Rmarkdown (Exercises #7-8)

## Data structures

-   R has multiple data structures.
-   Most of the time you will deal with tabular data sets, you will
    manipulate them, take sub-sections of them.
-   It is essential to know what are the common data structures in R and
    how they can be used.
-   R deals with named data structures, this means you can give names to
    data structures and manipulate or operate on them using those names.

## Data structures

\[![](img/data-structures.png)\] Source: Devopedia

## Tibbles

-   A **tibble**, or `tbl_df`, is a modern reimagining of the
    data.frame, keeping what time has proven to be effective, and
    throwing out what is not.
-   Tibbles are data.frames that are lazy and surly: they do less (i.e.
    they don't change variable names or types, and don't do partial
    matching) and complain more (e.g. when a variable does not exist).
-   This forces you to confront problems earlier, typically leading to
    cleaner, more expressive code. Tibbles also have an enhanced
    `print()` method which makes them easier to use with large datasets
    containing complex objects.
-   `tibble()` does much less than `data.frame()`: - it never changes
    the type of the inputs - it never changes the names of variables -
    it never creates `row.names()`

Source: [tibbles chapter](http://r4ds.had.co.nz/tibbles.html) in *R for
data science*.\]

## Exercices \# 5-6

------------------------------------------------------------------------

## Package system (Exercise \# 7)

-   An R package is a collection of code, data, documentation, and tests
    that is easily sharable
-   A package often has a collection of custom functions that enable you
    to carry out a workflow. eg. DESeq for RNA-seq analysis
-   The most popular places to get R packages from are CRAN,
    Bioconductor, and Github.
-   Once a package is installed, one still has to "load" them into the
    environment using a `library(<package>)` call.

## Rmarkdown (Exercise #8)

-   Rmarkdown is a fully reproducible authoring framework to create,
    collaborate, and communicate your work.
-   Rmarkdown supports a number of output formats including pdfs, word
    documents, slide shows, html, etc.
-   An Rmarkdown document is a plain text file with the extension `.Rmd`
    and contains the following basic components: - An (optional) YAML
    header surrounded by ---s. - Chunks of R code surrounded by
    `\`\`\`. - Text mixed with simple text formatting like `# heading`
    `*italics*`, and `**bold**`.

------------------------------------------------------------------------

## Homework instructions

-   Today's homework is to simply go over everything we covered today
    and make sure you understand it.
-   Use office hours if you have questions

------------------------------------------------------------------------

## Acknowledgements

The material for this class was heavily borrowed from:

-   Introduction to R by Altuna Akalin:
    http://compgenomr.github.io/book/introduction-to-r.html
-   R for data science by Hadley Wickham:
    https://r4ds.had.co.nz/index.html

------------------------------------------------------------------------

## Further Reading & Resources

-   R for data science https://r4ds.had.co.nz/index.html
-   Advanced R by Hadley Wickam https://adv-r.hadley.nz/
-   Installing R: https://cran.r-project.org/
-   Installing RStudio: https://rstudio.com/products/rstudio/download/
