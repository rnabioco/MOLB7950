{
  "hash": "42bca76b1a4773a1ebc0260a4e3c16aa",
  "result": {
    "markdown": "---\ntitle: \"R Bootcamp Problem Set 3\"\nauthor: \"Insert your name here\"\n---\n\n\n## Setup\n\nStart by loading libraries you need analysis in the code chunk below.\nWhen in doubt, start by loading the tidyverse package.\n\n\n::: {.cell}\n\n:::\n\n\n## Problem Set\n\nEach problem below is worth **5 points**.\n\nUse the data files in the `data/` directory to answer the questions.\n\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\n\n**The problem set is due 12pm on Aug 31.**\n\n### Grading rubric\n\n- Everything is good: 5 points\n- Partially correct answers: 3-4 points\n- Reasonable attempt: 2 points\n\n## Question 1\n\nLoad the `palmerpenguins` package. Inspect the `penguins` tibble with `summary`. \n\nUse `drop_na()` to remove rows with `NA` values in the `penguins` tibble. How many rows were removed from the tibble?\n\n\n\n::: {.cell}\n\n:::\n\n\nThen, use `replace_na()` to replace `NA` values in `bill_length_mm` and `bill_depth_mm` with a value of 0.\n\n\n::: {.cell}\n\n:::\n\n\n## Question 2\n\nUse `arrange`, `filter`, and `select` on a dataframe. Do the following, in order:\n\n1. Import the data set `data/data_transcript_exp_tidy.csv`. \n2. Sort the tibble by expression data (`count`) from highest to lowest level.\n3. Filter the tibble by `count` > 100\n4. Select all columns *except* for `type`\n\n\n::: {.cell}\n\n:::\n\n\n## Question 3\n\nHow will you:\n\nA) create a new column `log10count` that contains log10 transformed `count` values and\nB) rearrange the columns in the following order: ensembl_transcript_id, type, time, replicate, count, log10count.\n\n(Note that we have dropped `extra`)\n\nHint: Use `mutate` and `select`\n\n\n::: {.cell}\n\n:::\n\n\n## Question 4\n\nCalculate a per-transcript sum, while keeping the `time` information?\n\nHint: Use `group_by` with multiple variables, and `summarise` the \"count\" values using `sum()`\n\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}