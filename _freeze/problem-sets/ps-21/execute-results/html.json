{
  "hash": "85dc807a3a31dd970238f6888ef0a4d9",
  "result": {
    "markdown": "---\ntitle: \"DNA Block - Problem Set 21\"\nexecute: \n  eval: false\n---\n\n\n## Problem Set\n\nIn this problem set you'll examine the binding sites of the Reb1 transcription factor by CUT&RUN.\n\nThe first several chunks just run, putting libraries and files in your environment\n\nEach question below is worth 4 points.\n\n### Setup \n\nStart by loading libraries you need analysis in the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(here)\nlibrary(valr)\nlibrary(cowplot)\n\n# genome viz\nlibrary(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene)\nlibrary(Gviz)\nlibrary(rtracklayer)\n\n# motif discovery and viz\nlibrary(BSgenome.Scerevisiae.UCSC.sacCer3)\nlibrary(rGADEM)\nlibrary(seqLogo)\n```\n:::\n\n\nNext, load the coverage tracks for CUT&RUN data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrack_start <- 1e5 \ntrack_end <- 2e5 \n\n# genes track\nsgd_genes_trk <-\n  GeneRegionTrack(\n    TxDb.Scerevisiae.UCSC.sacCer3.sgdGene,\n    chromosome = \"chrII\",\n    start = track_start,\n    end = track_end,\n    fill = \"#009E73\",\n    background.title = \"white\",\n    col.title = \"black\",\n    fontsize = 14\n  )\n\n# signal tracks\ntrack_info <-\n  tibble(\n    file_name = c(\n      \"CutRun_Reb1_lt120.bw\",\n      \"CutRun_Abf1_lt120.bw\",\n      \"CutRun_Reb1_gt150.bw\",\n      \"CutRun_Abf1_gt150.bw\"\n    ),\n    sample_type = c(\n      \"Reb1_Short\", \"Abf1_Short\",\n      \"Reb1_Long\", \"Abf1_Long\"\n    )\n  ) |>\n  mutate(\n    file_path = here(\"data/block-dna\", file_name),\n    big_wig = purrr::map(\n      file_path, ~ import.bw(.x, as = \"GRanges\")\n    ),\n    data_track = purrr::map2(\n      big_wig, sample_type,\n      ~ DataTrack(\n          .x,\n          name = .y,\n          background.title = \"white\",\n          col.title = \"black\",\n          col.axis = \"black\",\n          fontsize = 12\n      )\n    )\n  ) |>\n  dplyr::select(sample_type, big_wig, data_track)\n\n# x-axis track\nx_axis_trk <- GenomeAxisTrack(\n  col = \"black\",\n  col.axis = \"black\",\n  fontsize = 16\n)\n```\n:::\n\n\nNow that we have tracks loaded, we can make a plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotTracks(\n  c(\n    sgd_genes_trk,\n    track_info$data_track,\n    x_axis_trk\n  ),\n  from = track_start,\n  to = track_end,\n  chromosome = \"chrII\",\n  transcriptAnnotation = \"gene\",\n  shape = \"arrow\",\n  type = \"histogram\"\n)\n```\n:::\n\n\n### Question 1\n\nHow do you interpret the differences in signals between the short and long fragments above? I.e.,\nwhere are the short fragments enriched? And where do you see more of the long fragments?\n\n> Answer.\n\n### Question 2\n\nRemake the plot above, but zoom in to a promoter region that has strong enrichment\nfor both Reb1 and Abf1 (short fragments).\n\nDo the signals for Reb1 and Abf1 line up with one another? Why is this the case? \n\n> Answer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotTracks(\n  c(\n    sgd_genes_trk,\n    track_info$data_track,\n    x_axis_trk\n  ),\n  from = ___,\n  to = ___,\n  chromosome = \"chrII\",\n  transcriptAnnotation = \"gene\",\n  shape = \"arrow\",\n  type = \"histogram\"\n)\n```\n:::\n\n\n### Question 3\n\nNext we'll take a look at Reb1 CUT&RUN data. In the following chunk, use the appraoch\nwe took in class to identify enriched sites of Reb1 binding. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nreb1_tbl <- read_bigwig(here(\"data/block-dna/CutRun_Reb1_lt120.bw\"))\n\n# number of reads in the original Reb1 BED file\ntotal_reads <- 16e6\n\ngenome <- read_genome(here(\"data/block-dna/sacCer3.chrom.sizes\"))\n\n# how can we calculate genome size?\ngenome_size <- ___ \n\n# define the genome-wide lambda value here\ngenome_lambda <- ___ / ___ \n\npeak_calls <-\n  reb1_tbl |>\n  # define single-base sites\n  mutate(\n    midpoint = start + round((end - start) / 2),\n    start = midpoint,\n    end = start + 1,\n    # use the poisson to calculate a p-value with the genome-wide lambda\n    pval = ___(score, genome_lambda),\n    # convert p-values to FDR\n    fdr = p.adjust(pval, method = \"fdr\")\n  )\n```\n:::\n\n\nLet's take a look at a plot of the p-value across a chromosome.\n\nUse `geom_hline()` to draw a red horizontal line at a cutoff that selects ~10 regions \nenriched for Reb1 binding. You'll use this cutoff in the code chunks below.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  filter(peak_calls, chrom == \"chrII\"),\n  # convert p-values to positive values for plotting\n  aes(start, ___)\n) + \n  geom_line() +\n  xlim(track_start, track_end) +\n  theme_cowplot() +\n  geom_hline(___)\n```\n:::\n\n\n### Question 4\n\nHow many peaks are called in this region? Use the cutoff you defined above to identify \n\"peaks\" of Reb1 binding.\n\n> Answer.\n\nHow many *total* peaks are identified in the genome using this cutoff?\n\n> Answer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# most stringent cut-off\npeak_calls_sig <- \n  filter(\n    peak_calls,\n    ___\n    ) |>\n    # collapse neighboring, significant sites\n    bed_merge(max_dist = 20)\n\nfilter(\n  peak_calls_sig,\n  chrom == \"chrII\" &\n    start >= track_start &\n    end <= track_end\n)\n```\n:::\n\n\nLet's visualize these peaks in the context of genomic CUT&RUN signal. We need to define an `AnnotationTrack` with the peak intervals, which we can plot against the CUT&RUN coverage we defined above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# need a GRanges object to convert to an AnnotationTrack\npeak_calls_gr <-\n  GRanges(\n    seqnames = peak_calls_sig$chrom,\n    ranges = IRanges(peak_calls_sig$start, peak_calls_sig$end)\n  )\n\npeak_calls_trk <-\n  AnnotationTrack(\n    peak_calls_gr,\n    name = \"Peak calls\",\n    fill = \"red\",\n    background.title = \"white\",\n    col.title = \"red\",\n    fontsize = 16,\n    rotation.title = 0\n  )\n\nreb1_short_trk <-\n  filter(\n    track_info,\n    sample_type == \"Reb1_Short\"\n  ) |>\n  pull(data_track)\n\nplotTracks(\n  c(\n    sgd_genes_trk,\n    reb1_short_trk,\n    peak_calls_trk,\n    x_axis_trk\n  ),\n  from = track_start,\n  to = track_end,\n  chromosome = \"chrII\",\n  transcriptAnnotation = \"gene\",\n  shape = \"arrow\",\n  type = \"histogram\"\n)\n```\n:::\n\n\n### Question 5\n\nUse the peak calls you defined to identify a putative sequence motif bound by Reb1. You can\nassume that the most abundant motif identified is the most likely candidate.\n\nUse Google and Pubmed to identify a study that defines a Reb1 motif using a genomewide analysis. How well does your \nmotify match the previously defined one?\n\n\n::: {.cell}\n\n```{.r .cell-code}\npeak_seqs <- BSgenome::getSeq(\n  # provided by BSgenome.Scerevisiae.UCSC.sacCer3\n  Scerevisiae,\n  peak_calls_gr\n)\n\n# takes ~2 minutes to run\ngadem <- rGADEM::GADEM(\n  peak_seqs,\n  genome = Scerevisiae,\n  verbose = 1\n)\n\n# look at the consensus motifs\nconsensus(gadem)\n\n# how many consensus motifs are there?\nnOccurrences(gadem)\n```\n:::\n\n\nNow let's look at the sequence logo for the top hit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npwm <- gadem@motifList[[1]]@pwm\n\nseqLogo::seqLogo(pwm)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}