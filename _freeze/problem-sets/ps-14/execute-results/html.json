{
  "hash": "33c604d7afcfeb1162ca5690b5797495",
  "result": {
    "markdown": "---\ntitle: \"Problem Set Stats Bootcamp - class 12\"\nsubtitle: \"Hypothesis Testing\"\nauthor: \"Neelanjan Mukherjee\"\neditor: visual\n---\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'janitor'\n\n\nThe following object is masked from 'package:rstatix':\n\n    make_clean_names\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\n\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbiochem <- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/Biochemistry.txt\", show_col_types = FALSE) |>\n  janitor::clean_names()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00C4>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00D6>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00DC>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00E4>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00F6>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00FC>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00DF>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00C6>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00E6>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00D8>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00F8>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00C5>' to native encoding\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in FUN(X[[i]], ...): unable to translate '<U+00E5>' to native encoding\n```\n\n\n:::\n\n```{.r .cell-code}\n# simplify names a bit more\ncolnames(biochem) <- gsub(pattern = \"biochem_\", replacement = \"\", colnames(biochem))\n\n# we are going to simplify this a bit and only keep some columns\nkeep <- colnames(biochem)[c(1, 6, 9, 14, 15, 24:28)]\nbiochem <- biochem[, keep]\n\n# get weights for each individual mouse\n# careful: did not come with column names\nweight <- read_tsv(\"http://mtweb.cs.ucl.ac.uk/HSMICE/PHENOTYPES/weight\", col_names = F, show_col_types = FALSE)\n\n# add column names\ncolnames(weight) <- c(\"subject_name\", \"weight\")\n\n# add weight to biochem table and get rid of NAs\n# rename gender to sex\nb <- inner_join(biochem, weight, by = \"subject_name\") |>\n  na.omit() |>\n  rename(sex = gender)\n```\n:::\n\n\n## Problem \\# 1\n\nCan mouse sex explain mouse cholesterol? {.smaller}\n\n## STEP 1: Null hypothesis and variable specification\n\n$\\mathcal{H}_0:$ \n\n> ?? is the response variable\n\n> ?? is the explanatory variable\n\n## STEP 2: Fit linear model and examine results {.smaller}\n\n\n::: {.cell}\n\n:::\n\n\nFit summary:\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\nCoefficient summary:\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\n## Collecting residuals and other information {.smaller}\n\nadd residuals and other information\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\n## STEP 4: Visualize the error around fit {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# plot of data with mean and colored by residuals\n```\n:::\n\n\n## STEP 3: Visualize the error around the null (mean weight) {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\n## Plot the fit error and the null error as 2 panels {.smaller}\n\n\n::: {.cell}\n\n:::\n\n\n## Calculate $R^2$ {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\n$R^2 = 1 - \\displaystyle \\frac {SS_{fit}}{SS_{null}}$\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\ncheck agains Rsq in your fit\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\n## Compare to traditional t-test {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n::: {.cell output-location='column-fragment'}\n\n:::\n\n\n## Provide your interpreation of the result\n\n\n",
    "supporting": [
      "ps-14_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}