{
  "hash": "31a5d9939611225c7861368d171841b5",
  "result": {
    "markdown": "---\ntitle: \"R Bootcamp Problem Set 3\"\nauthor: \"Insert your name here\"\n---\n\n\n## Setup\n\nStart by loading libraries you need analysis in the code chunk below.\nWhen in doubt, start by loading the tidyverse package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\n```\n:::\n:::\n\n\n## Problem Set\n\nEach problem below is worth **5 points**.\n\nUse the data files in the `data/` directory to answer the questions.\n\nFor this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.\n\n**The problem set is due 12pm on Aug 31.**\n\n### Grading rubric\n\n- Everything is good: 5 points\n- Partially correct answers: 3-4 points\n- Reasonable attempt: 2 points\n\n## Question 1\n\nLoad the `palmerpenguins` package. Inspect the `penguins` tibble with `summary`. \n\nUse `drop_na()` to remove rows with `NA` values in the `penguins` tibble. How many rows were removed from the tibble?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n\nsummary(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2                                 \n```\n:::\n\n```{.r .cell-code}\npenguins_nona <- drop_na(penguins)\nnrow(penguins) - nrow(penguins_nona)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11\n```\n:::\n:::\n\n\nThen, use `replace_na()` to replace `NA` values in `bill_length_mm` and `bill_depth_mm` with a value of 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreplace_na(penguins, list(bill_length_mm = 0, bill_depth_mm = 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 x 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen            0             0                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# i 334 more rows\n# i 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n## Question 2\n\nUse `arrange`, `filter`, and `select` on a data frame. Do the following, in order:\n\n1. Import the data set `data/data_transcript_exp_tidy.csv`. \n2. Sort the tibble by expression data (`count`) from highest to lowest level.\n3. Filter the tibble by `count` > 100\n4. Select all columns *except* for `type`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_tbl <- read_csv(here(\"data/data_transcript_exp_tidy.csv.gz\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 600 Columns: 5\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr (4): ensembl_transcript_id, type, time, replicate\ndbl (1): count\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nexp_tbl |>\n  arrange(count) |>\n  filter(count > 100) |>\n  select(-type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 109 x 4\n   ensembl_transcript_id      time  replicate count\n   <chr>                      <chr> <chr>     <dbl>\n 1 ENST00000342753.8_291_1314 0h    rep2       101 \n 2 ENST00000378251.2_29_1778  0h    rep3       102 \n 3 ENST00000378230.7_524_3101 0h    rep3       105 \n 4 ENST00000054666.10_116_416 14h   rep3       105 \n 5 ENST00000344843.11_97_544  14h   rep1       106 \n 6 ENST00000400809.7_379_1567 14h   rep3       106.\n 7 ENST00000054666.10_116_416 14h   rep1       108 \n 8 ENST00000615252.4_548_1268 14h   rep3       108.\n 9 ENST00000445648.5_40_1390  0h    rep1       109.\n10 ENST00000291386.3_370_895  14h   rep2       109 \n# i 99 more rows\n```\n:::\n:::\n\n\n## Question 3\n\nHow will you:\n\nA) create a new column `log10count` that contains log10 transformed `count` values and\nB) rearrange the columns in the following order: ensembl_transcript_id, type, time, replicate, count, log10count.\n\n(Note that we have dropped `extra`)\n\nHint: Use `mutate` and `select`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_tbl |>\n  mutate(log10count = log10(count)) |>\n  select(ensembl_transcript_id, type, time, replicate, count, log10count)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 600 x 6\n   ensembl_transcript_id      type  time  replicate count log10count\n   <chr>                      <chr> <chr> <chr>     <dbl>      <dbl>\n 1 ENST00000327044.6_51_2298  rna   0h    rep1        243      2.39 \n 2 ENST00000327044.6_51_2298  rna   0h    rep2        322      2.51 \n 3 ENST00000327044.6_51_2298  rna   0h    rep3        303      2.48 \n 4 ENST00000327044.6_51_2298  rna   14h   rep1        177      2.25 \n 5 ENST00000327044.6_51_2298  rna   14h   rep2        177      2.25 \n 6 ENST00000327044.6_51_2298  rna   14h   rep3        239      2.38 \n 7 ENST00000338591.7_360_2034 rna   0h    rep1         19      1.28 \n 8 ENST00000338591.7_360_2034 rna   0h    rep2         17      1.23 \n 9 ENST00000338591.7_360_2034 rna   0h    rep3         15      1.18 \n10 ENST00000338591.7_360_2034 rna   14h   rep1          9      0.954\n# i 590 more rows\n```\n:::\n:::\n\n\n## Question 4\n\nCalculate a per-transcript sum, while keeping the `time` information?\n\nHint: Use `group_by` with multiple variables, and `summarise` the \"count\" values using `sum()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_tbl |>\n  group_by(ensembl_transcript_id, time) |>\n  summarize(count_sum = sum(count))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'ensembl_transcript_id'. You can override\nusing the `.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 200 x 3\n# Groups:   ensembl_transcript_id [100]\n   ensembl_transcript_id        time  count_sum\n   <chr>                        <chr>     <dbl>\n 1 ENST00000054650.8_159_876    0h         33.8\n 2 ENST00000054650.8_159_876    14h        16.5\n 3 ENST00000054666.10_116_416   0h        447  \n 4 ENST00000054666.10_116_416   14h       281  \n 5 ENST00000054668.5_220_418    0h          0  \n 6 ENST00000054668.5_220_418    14h        22.5\n 7 ENST00000234590.8_121_1423   0h      31565  \n 8 ENST00000234590.8_121_1423   14h     16394  \n 9 ENST00000263741.11_1328_1496 0h         97.5\n10 ENST00000263741.11_1328_1496 14h        79  \n# i 190 more rows\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}