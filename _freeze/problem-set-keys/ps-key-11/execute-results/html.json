{
  "hash": "0828cc7992ce447b7d6533f249caefef",
  "result": {
    "markdown": "---\ntitle: \"Problem Set Stats Bootcamp - class 11\"\nsubtitle: \"Distributions and probabilites\"\nauthor: \"Neelanjan Mukherjee\"\neditor: visual\n---\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.3     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n```\n\n\n:::\n:::\n\n\n## Problem \\# 1\n\nAssume that the height [jackalopes](https://www.youtube.com/watch?v=VkUi4qdZStQ) fit a normal distribution. Through careful field research measuring 1000 wild jackalopes, we have determined the mean height is 97 cm and the standard deviation is 10 cm. Your was camping and found a jackalope. Being a great friend and knowing your interest in jackalopes, they (harmlessly) subdued and measured the wild jackalope and found that it was 75 cm.\n\n1.  Simulate a normal distribution of `1000` jackalope heights using the `mean` and `sd` you painstakingly measured.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nj <- tibble(height=rnorm(n = 1000, mean = 97, sd = 10))\n```\n:::\n\n\n2.  Plot the density of the jackalope height distribution. Indicate with a vertical line the height of the jackalope your friend measured.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = j, \n       aes(x=height)\n       ) +\n  geom_density() +\n  geom_vline(xintercept = 75) +\n  theme_cowplot() \n```\n\n::: {.cell-output-display}\n![](ps-key-11_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n3.  Calculate the probability of a jackalope being 75 cm or shorter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(75, mean = 97, sd = 10, lower.tail = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01390345\n```\n\n\n:::\n:::\n\n\n3.  Are jackalope heights normally distributed?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nj |>\n  shapiro_test(height)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 3\n  variable statistic     p\n  <chr>        <dbl> <dbl>\n1 height       0.999 0.796\n```\n\n\n:::\n:::\n\n\n## Explore coin flip distribution characteristics\n\nWhen we flip a fair coin multiple times (`numFlips`) in a row, we expect to get heads (or tails) 50% of the time on average. This is not always the case for a single round of flipping, but if we do multiple rounds with (`numRounds`) that average should be 50%.\n\n## Problem \\# 2\n\nIn class, we simulated coin flip experiments using two different coins that were either fair (0.5 prob of head) or unfair (0.9 prob of head). We varied the number of flips in a single round (`numFlips`) and the number of rounds of flipping (`numRounds`). For this assignment, use the same to coins and use all possible combinations of `numFlips` and `numRounds` from the table below.\n\n| `numFlips` | `numRounds` |\n|------------|-------------|\n| 5          | 10          |\n| 500        | 100         |\n\n: parameters to explore\n\n1.  Create a tibble has all the combinations of `numFlips`, `numRounds`, and `prob` of getting heads.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# hint for 8 flips and 12 rounds of a fair coin you could do\n# rbinom(n = 8, size = 12, prob = .5)/12\n\nfair5 <- tibble(\n  r10=rbinom(n = 5, size = 10, prob = .5)/10,\n  r100=rbinom(n = 5, size = 100, prob = .5)/100,\n  type=rep(\"fair5\")\n  )\n\n\nfair500 <- tibble(\n  r10=rbinom(n = 500, size = 10, prob = .5)/10,\n  r100=rbinom(n = 500, size = 100, prob = .5)/100,\n  type=rep(\"fair500\")\n  ) \n\n\nunfair5 <- tibble(\n  r10=rbinom(n = 5, size = 10, prob = .9)/10,\n  r100=rbinom(n = 5, size = 100, prob = .9)/100,\n  type=rep(\"unfair5\")\n  )\n\nunfair500 <- tibble(\n  r10=rbinom(n = 500, size = 10, prob = .9)/10,\n  r100=rbinom(n = 500, size = 100, prob = .9)/100,\n  type=rep(\"unfair500\")\n  )\n\nall <- bind_rows(fair5, fair500, unfair5, unfair500) |>\n  pivot_longer(cols = c(\"r10\",\"r100\"),\n             names_to = \"r\",\n             values_to = \"f\"\n             )\n```\n:::\n\n\n2.  Plot your result using `faceting`. I recommend `faceting` by `numFlips` (like in class describing both the number and fair v unfair) . Include the observed mean as a black diamond and the true mean as a dashed line.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(all , aes(x=r, y=f, color=r)) +\n  geom_jitter() +\n  stat_summary(fun.y=mean, geom=\"point\",\n               shape=18,\n               size=3, color=\"black\") +\n  ylim(-0.05,1.05) +\n   facet_grid(~type) +\n  geom_hline(yintercept = .5, linetype = \"dashed\") +\n  geom_hline(yintercept = .9, linetype = \"dashed\") +\n  theme_cowplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\ni Please use the `fun` argument instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ps-key-11_files/figure-html/plot-1.png){width=672}\n:::\n:::\n\n\n3\\. Report the means and sd of each pair of `numFlips` and `numRounds`\n\n\n::: {.cell output-location='slide'}\n\n```{.r .cell-code}\nall |> \n  group_by(type,r) |>\n  get_summary_stats(show = c(\"mean\",\"sd\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 x 6\n  type      r     variable     n  mean    sd\n  <chr>     <chr> <fct>    <dbl> <dbl> <dbl>\n1 fair5     r10   f            5 0.48  0.11 \n2 fair5     r100  f            5 0.5   0.054\n3 fair500   r10   f          500 0.495 0.158\n4 fair500   r100  f          500 0.5   0.05 \n5 unfair5   r10   f            5 0.84  0.114\n6 unfair5   r100  f            5 0.912 0.031\n7 unfair500 r10   f          500 0.897 0.093\n8 unfair500 r100  f          500 0.9   0.03 \n```\n\n\n:::\n:::\n\n\n4\\. Describe in a few sentences how increasing `numFlips` and `numRounds` alters:The estimation of and spread around the true mean.\n\nIncreasing `numRounds` leads to a closer approximation of the true mean.\n\nIncreasing `numRounds` leads to a decrease in the sd.\n\nIncreasing `numFlips` increases the sd.\n",
    "supporting": [
      "ps-key-11_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}