{
  "hash": "cca3a0663a9c2abaff948c71bc9d758a",
  "result": {
    "markdown": "---\ntitle: \"R Bootcamp Problem Set 4\"\nauthor: \"Your name here\"\ndate: last-modified \n---\n\n\n## Problem Set\n\nUse the data files in the `data/` directory to answer the questions.\n\nFor this problem set, you are allowed to help each other, but you are not\nallowed to post correct answers in slack.\n\n**The problem set is due 12pm on Sept 1.**\n\n## Grading rubric\n\n- Everything is good: full points\n- Partially correct answer: depends on how many steps are correct\n- Reasonable attempt: half points\n\n## Question 1 **5 points**\n\n1. Load the tidyverse and here packages.  \n2. Import datasets: `data/data_rna_protein.csv.gz`.\n\n`data_rna_protein.csv.gz`: This is a combined dataset from an RNAseq and SILAC\nproteomics experiment, where a transcription factor (TF) was differentially\nexpressed and the fold change in RNA and protein calculated between\nTF-expressing and non-expressing cells.\n   \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.2     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/jayhesselberth/devel/rnabioco/molb-7950\n```\n:::\n\n```{.r .cell-code}\nexp_tbl <- read_csv(\n   here(\"problem-sets/data/data_rna_protein.csv.gz\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 21282 Columns: 17\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr  (1): geneid\ndbl (16): iDUX4_logFC, iDUX4_logCPM, iDUX4_LR, iDUX4_pval, iDUX4_fdr, hl.rat...\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Question 2 **5 points**\n\nUsing the imported data set, carry out the following:  \n\n1. Inspect the data so you know what you are dealing with (`summary()` etc). \n\n2. Select only the following columns: `geneid`, `iDUX4_logFC`, `iDUX4_fdr`,\n   `hl.ratio`, and `pval`.\n\n3. Rename them as follows: rna_FC = iDUX4_logFC, rna_pval = iDUX4_fdr,\n   protein_FC = hl.ratio, protein_pval = pval (hint: use `dplyr::rename()`)\n\n4. Drop all rows with `NA` values in them (hint: use a function from `tidyr`)\n\n6. Remove duplicate rows (hint: use `dplyr::distinct()`).\n\n7. Arrange the table by descending `rna_FC` and ascending \n   `protein_FC`.\n   \n8. Conduct steps 2-7 by piping the output of one step to another (i.e, a single\n   workflow & remember to comment).\n   \n9. Save the output of this workflow into a new object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_tbl_subset <- exp_tbl |>\n   select(geneid, iDUX4_logFC, iDUX4_fdr, hl.ratio, pval) |>\n   rename(\n      rna_FC = iDUX4_logFC,\n      rna_pval = iDUX4_fdr,\n      protein_FC = hl.ratio,\n      protein_pval = pval\n      ) |>\n   drop_na() |>\n   distinct() |>\n   arrange(desc(rna_FC), protein_FC)\n```\n:::\n\n\n## Question 3  **5 points**\n\nHow well do the overall `rna_FC` and `protein_FC` values correlate in this\nexperiment?\n\nUsing the output from the above question, do the following:  \n\n1. Create a scatter plot of `rna_FC` vs `protein_FC`. observe how the points scatter.\n\n2. Add a line to the plot that would indicate perfect 1:1 correlation.\n   Hint: use `geom_abline()` with its `slope` argument.\n   \n3. Add a linear model fit using `geom_smooth()` (`method = 'lm'`).\n   Observe how the x=y line deviates from your geom_smooth line.\n\n4. Calculate the Spearman correlation coefficient. (Hint: This uses a base R math\n   function called `cor` - Use help() or Google to learn more and how to specify\n   method as `spearman`)\n\n5. Using all of the information from above, comment on the correlation between\n   `rna_FC` and `protein_FC` below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(exp_tbl_subset, aes(rna_FC, protein_FC)) +\n   geom_point() +\n   geom_abline(linewidth = 1, color = 'green') +\n   geom_smooth(method = 'lm', se = FALSE, linewidth = 1)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](ps-key-04_files/figure-html/q4-1.png){width=672}\n:::\n\n```{.r .cell-code}\nrna_prot_cor <- cor(\n   exp_tbl_subset$rna_FC,\n   exp_tbl_subset$protein_FC,\n   method = 'spearman'\n)\n```\n:::\n\n\n### Answer\n\nThe green line indicates a perfect correlation, and the blue line is the linear model fit of the data. The Spearman correlation is 0.346, indicating a strong positive correlation. One way to think about this is that there are 0.346 proteins made per mRNA.\n\n## Submit\n\nBe sure to click the \"Render\" button to render the HTML output.\n\nThen paste the URL of this Posit Cloud project into the problem set on Canvas.\n",
    "supporting": [
      "ps-key-04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}