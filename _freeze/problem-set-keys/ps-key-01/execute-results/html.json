{
  "hash": "7f9217177586d63c5cc89e261022295d",
  "result": {
    "markdown": "---\ntitle: \"Problem Set 1 Key\"\nauthor: \"JH\"\n---\n\n\n## Problem Set\n\nEach problem below is worth **10 points**.\n\n**The problem set is due 12pm on Aug 30.**\n\n### Grading rubric\n\n- Everything is good: 5 points\n- Partially correct answers: 3-4 points\n- Reasonable attempt: 2 points\n\n## Setup\n\nStart by loading libraries you need analysis below. When in doubt, start by loading the tidyverse package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.2     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.3     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.2     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n## Question 1\n\nCreate 3 different vectors called `x`, `y`, and `z`:\n\n- `x` should be character vector of length 5\n- `y` should be a numerica vector of length 5\n- `z` should be a logical vector of length 5\n\nUse `length()` to calculate the length of each vector.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- LETTERS[1:5]\ny <- 1:5\nz <- c(TRUE, TRUE, FALSE, FALSE, FALSE)\n\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"A\" \"B\" \"C\" \"D\" \"E\"\n```\n:::\n\n```{.r .cell-code}\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5\n```\n:::\n\n```{.r .cell-code}\nz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  TRUE  TRUE FALSE FALSE FALSE\n```\n:::\n\n```{.r .cell-code}\nlength(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nlength(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nlength(z)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\n## Question 2\n\nUsing the vectors you created above, create a new tibble with column names\n`x`, `y`, and `z`.\n\nUse `nrow()` and `ncol()` to calculate the number of rows and columns.\n\nWhat do you notice about the length of the vectors and the number of rows.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntbl <- tibble(x = x, y = y, z = z)\nnrow(tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nncol(tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n### Answer\n\nThe length of the vectors and the number of rows are the same, because\ntibble columns are simply the vectors we started with.\n\n## Submit\n\nBe sure to click the \"Render\" button to render the HTML output.\n\nThen paste the URL of this Posit Cloud project into the problemt set on Canvas.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}