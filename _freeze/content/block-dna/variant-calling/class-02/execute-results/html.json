{
  "hash": "3e6fabbcc9969c7f43752e85c8c38dec",
  "result": {
    "markdown": "---\ntitle: \"Genome sequencing 2 - practice\"\nauthor: \"Your name here\"\n---\n\n\n## Sequencing Coverage\n\nFrom binomial theory, we learned we need a certain level of coverage to generate reliable variant calls, due to the randomness of sampling alleles at a site using sequencing.\n\nWe also learned that reads are not distributed randomly in a genome. Coverage is itself a distribution, and we typically discuss it's mean. I.e. 30-fold coverage means *on average* each base is sequenced 30 times.\n\nHow do we estimate the numbers of times a base is expected to be sequenced given a certain level of coverage?\n\nThis theory comes from [Lander and Waterman](https://pubmed.ncbi.nlm.nih.gov/3294162/), who made two assumptions about sequencing:\n\n1.  Reads will be distributed randomly across the genome.\n2.  The ability to detect overlaps (alignments) doesn't vary between reads\n\nThey concluded that read coverage is modeled by the Poisson distribution.\n\nThe Poisson probability function is:\n\n$$ P(Y = y) = \\frac{{ e^{ - C } C ^ y }} {{ y!}} $$\n\nwhere:\n\n1.  **`y` is the number of times a base is read.** It is the exact number of times a base is sequenced.\n2.  **`C` is the mean coverage** (lambda in the traditional Poisson sense). It's the mean number of aligned reads covering a site.\n\nThe formula above gives the probability of a base being sequenced a certain number of times.\n\nFor example, what is the probability of a base being sequenced *3 times or less* at at mean coverage of 10?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(dpois(x = 0:3, lambda = 10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01033605\n```\n:::\n\n```{.r .cell-code}\n# or ...\nppois(3, lambda = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.01033605\n```\n:::\n:::\n\n\n### Excercises\n\nWhat if we're trying to characterize heterozygous alleles in a human genome at differing levels of coverage?\n\n1.  How many variants are in an average human genome? \\[Answer *4285714*\\]\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# size (bp) of the haploid human genome\nG <- 3e9\n# chance of seeing a common variant in a random person. comes from e.g.\n# https://www.nature.com/articles/nature15393\np_var <- 1 / 700\n\n# calculate number of variants\nn_var <- G * p_var\nn_var\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4285714\n```\n:::\n:::\n\n\n2.  How many of these variants have zero coverage (i.e., no reads covering those sites) after sequencing to mean coverage of 5, 15, 30-fold? \\[Answer *28876.92, 1.61, 4.01041e-07*\\].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nppois(0, 5) * n_var\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 28876.92\n```\n:::\n\n```{.r .cell-code}\nppois(0, 15) * n_var\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.31101\n```\n:::\n\n```{.r .cell-code}\nppois(0, 30) * n_var\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4.01041e-07\n```\n:::\n:::\n\n\n# Variant Calling --- Practice\n\n## Learning objectives\n\n1.  Understand the format and content of VCF files\n2.  Learn how to parse and analyze VCF files to summarize and identify candidate variants\n3.  Understand the value of variant annotation for variant interpretation.\n\n## The experiment\n\nYeast alpha and beta tubulin genes encode heterodimeric protein components that assemble into long filaments important for cell division and motility.\n\n1.  The parent strain has two point mutations at the TUB1 and TUB3 loci.\n2.  Suppressor mutants of this strain were selected for growth in the presence of a microtubule destabilizing drug.\n3.  Suppressor isolates were each backcrossed 2X to the parent strain, confirming that suppression segregates 2:2.\n4.  After the backcross, a suppressor F2 isolate was backcrossed to our wild type strain to test whether suppression was linked to the TUB1 or TUB3 mutants; we found suppression was not linked.\n\nStrains 4365-4368 are a tetrad from this F2 x wt cross with genotypes:\n\n1.  4366_S2 (tub sup)\n2.  4365_S1 (tub SUP)\n3.  4367_S3 (TUB sup)\n4.  4368_S4 (TUB SUP)\n\n**Goal: identify and characterize genetic variants that segregate in the expected 2:2 pattern in these strains**\n\n#### The awesome power of yeast genetics\n\nYeast are not humans (duh). They can be made stably haploid, so the genotype-phenotype link is easier to study.\n\n\n\n\n\nThis is valuable because you can directly isolate a recessive mutation in a genetic background. Moreover you can do a cross and identify mutations that segregate with the phenotype among the progeny. The advantage here is that you can identify common variants (relative to the reference genome) that are not associated with phenotype and eliminate them as candidates.\n\n\"Backcrossing\" refers to the process of crossing an offspring to its wild-type parent. Repeated backcrossing and mutant isolation allows fine mapping of monogenic traits via increased numbers of meiotic crossovers.\n\n#### Human trio sequencing\n\nIdentifying variants in a yeast cross is conceptually similar to human trio sequencing, wherein you sequence MOM, DAD, and KID to identify variants in KID that plausibly explain KID's phenotype. The main difference between the yeast and human experiments is that humans are diploid, so you're often looking for either:\n\n1.  Heterzygous alleles of an uncommon variant in MOM and DAD; and a homozygous alternative allele in KID. (recessive case)\n2.  Gain-of-function, de novo alleles in KID that are not in MOM and DAD. (dominant case)\n\nYou can increase the power of the approach in humans by expanding to people in a pedigree where the phenotype has been annotated.\n\n### Genome sequencing\n\n1.  Purify genomic DNA and shear to \\~500 bp fragments\n2.  Ligate adaptor oligonucleotides, PCR amplify to incorporate sample-specific barcodes\n3.  Sequence this library, collecting \\~10 million, 2 x 150 bp reads from the ends of each fragment\n\n### Data analysis\n\n*We're not going to do this because it takes more computational resources than RStudio Cloud can provide. For reference, these two steps take \\< 60 minutes (for the yeast genome)*\n\n1.  Align to the reference [Saccharomyces cerevisiae reference genome](https://hgdownload.soe.ucsc.edu/goldenPath/sacCer3/bigZips/) with [bwa](https://github.com/lh3/bwa). \\[**`FASTQ > BAM`**\\].\n\n    bwa mem -x ref.fa reads.fq | samtools sort > alignment.bam\n\n2.  Call variants in the BAM file with respect to the reference using [freebayes](https://github.com/ekg/freebayes) \\[**`BAM > VCF`**\\]\n\n    freebayes -f ref.fa alignment.bam > combined.vcf\n\n## VCF inspection\n\n### Variant identification\n\nThere two files in `data/`:\n\n1.  `combined.vcf.gz`\n2.  `combined.annotated.vcf.gz`\n\nFor the first steps, we'll start with the first file, `combined.vcf.gz`.\n\nWe'll use the [`VariantAnnotation`](https://bioconductor.org/packages/release/bioc/vignettes/VariantAnnotation/inst/doc/VariantAnnotation.pdf) library from Bioconductor to inspect the file. \n\nLet's inspect the VCF file to review its structure.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(VariantAnnotation)\nvcf <- readVcf(\"data/combined.vcf.gz\")\nvcf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass: CollapsedVCF \ndim: 16708 4 \nrowRanges(vcf):\n  GRanges with 5 metadata columns: paramRangeID, REF, ALT, QUAL, FILTER\ninfo(vcf):\n  DataFrame with 43 columns: NS, DP, DPB, AC, AN, AF, RO, AO, PRO, PAO, QR, ...\ninfo(header(vcf)):\n           Number Type    Description                                          \n   NS      1      Integer Number of samples with data                          \n   DP      1      Integer Total read depth at the locus                        \n   DPB     1      Float   Total read depth per bp at the locus; bases in rea...\n   AC      A      Integer Total number of alternate alleles in called genotypes\n   AN      1      Integer Total number of alleles in called genotypes          \n   AF      A      Float   Estimated allele frequency in the range (0,1]        \n   RO      1      Integer Count of full observations of the reference haplot...\n   AO      A      Integer Count of full observations of this alternate haplo...\n   PRO     1      Float   Reference allele observation count, with partial o...\n   PAO     A      Float   Alternate allele observations, with partial observ...\n   QR      1      Integer Reference allele quality sum in phred                \n   QA      A      Integer Alternate allele quality sum in phred                \n   PQR     1      Float   Reference allele quality sum in phred for partial ...\n   PQA     A      Float   Alternate allele quality sum in phred for partial ...\n   SRF     1      Integer Number of reference observations on the forward st...\n   SRR     1      Integer Number of reference observations on the reverse st...\n   SAF     A      Integer Number of alternate observations on the forward st...\n   SAR     A      Integer Number of alternate observations on the reverse st...\n   SRP     1      Float   Strand balance probability for the reference allel...\n   SAP     A      Float   Strand balance probability for the alternate allel...\n   AB      A      Float   Allele balance at heterozygous sites: a number bet...\n   ABP     A      Float   Allele balance probability at heterozygous sites: ...\n   RUN     A      Integer Run length: the number of consecutive repeats of t...\n   RPP     A      Float   Read Placement Probability: Phred-scaled upper-bou...\n   RPPR    1      Float   Read Placement Probability for reference observati...\n   RPL     A      Float   Reads Placed Left: number of reads supporting the ...\n   RPR     A      Float   Reads Placed Right: number of reads supporting the...\n   EPP     A      Float   End Placement Probability: Phred-scaled upper-boun...\n   EPPR    1      Float   End Placement Probability for reference observatio...\n   DPRA    A      Float   Alternate allele depth ratio.  Ratio between depth...\n   ODDS    1      Float   The log odds ratio of the best genotype combinatio...\n   GTI     1      Integer Number of genotyping iterations required to reach ...\n   TYPE    A      String  The type of allele, either snp, mnp, ins, del, or ...\n   CIGAR   A      String  The extended CIGAR representation of each alternat...\n   NUMALT  1      Integer Number of unique non-reference alleles in called g...\n   MEANALT A      Float   Mean number of unique non-reference allele observa...\n   LEN     A      Integer allele length                                        \n   MQM     A      Float   Mean mapping quality of observed alternate alleles   \n   MQMR    1      Float   Mean mapping quality of observed reference alleles   \n   PAIRED  A      Float   Proportion of observed alternate alleles which are...\n   PAIREDR 1      Float   Proportion of observed reference alleles which are...\n   MIN_DP  1      Integer Minimum depth in gVCF output block.                  \n   END     1      Integer Last position (inclusive) in gVCF output record.     \ngeno(vcf):\n  List of length 10: GT, GQ, GL, DP, AD, RO, QR, AO, QA, MIN_DP\ngeno(header(vcf)):\n          Number Type    Description                                           \n   GT     1      String  Genotype                                              \n   GQ     1      Float   Genotype Quality, the Phred-scaled marginal (or unc...\n   GL     G      Float   Genotype Likelihood, log10-scaled likelihoods of th...\n   DP     1      Integer Read Depth                                            \n   AD     R      Integer Number of observation for each allele                 \n   RO     1      Integer Reference allele observation count                    \n   QR     1      Integer Sum of quality of the reference observations          \n   AO     A      Integer Alternate allele observation count                    \n   QA     A      Integer Sum of quality of the alternate observations          \n   MIN_DP 1      Integer Minimum depth in gVCF output block.                   \n```\n:::\n\n```{.r .cell-code}\n# What are the first few lines?\n# What are the column names (first line after the comment section)\n# What is in the INFO field?\n# What is in the FORMAT field?\n```\n:::\n\n\nHow many samples are in the VCF file?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# use `length` to get the number of samples\nsamples(header(vcf))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"4366_S2\" \"4365_S1\" \"4367_S3\" \"4368_S4\"\n```\n:::\n:::\n\n\n#### Excercises\n\nHow many variants are in the VCF file?\n\n\n::: {.cell}\n\n:::\n\n\n2.  How many sites involve complex REF or ALT alleles (i.e., not SNPs)?\n\n\n::: {.cell}\n\n:::\n\n\n## Identifying variants associated with phenotypes\n\nIn yeast genetics, phenotypic status is represented by capitalization. After selecting for a phenotype and doing genetic mapping, organisms that are wild-type for a trait are noted with upper case letters, while mutant organisms are lower case.\n\nFor example, two of the strains below have wild-type tubulin function (TUB) and two others have mutant tubulin function (tub; these are temperature-sensitive alleles of TUB1 and TUB3).\n\n1.  4366_S2 (tub sup)\n2.  4365_S1 (tub SUP)\n3.  4367_S3 (TUB sup)\n4.  4368_S4 (TUB SUP)\n\n**(yes, I know these appear numerically out of order; they're in order with respect to genotype)**\n\nWe'll inspect the `gt_types` associated with each variant to ask for variant types that segregate in the expected pattern.\n\n> `gt_types` is an array of 0,1,2,3 == HOM_REF, HET, UNKNOWN, HOM_ALT\\`\n\nSo `[0, 0, 0, 0]` means all four samples are HOM_REF (homozygous reference). So `[0, 1, 0, 1]` means samples 1 and 3 are HOM_REF and 2 and 4 are HET (heterozygous).\n\nFor variants that explain the *tub* phenotype, we want to filter for `[1, 1, 0, 0]` or `[3, 3, 0, 0]`\n\nFor variants that explain the *sup* phenotype, we want to filter for `[1, 0, 1, 0]` or `[3, 3, 0, 0]`\n\nN.B.: The genome of these cells is haploid. But I forgot to adjust the `--ploidy` parameter in freebayes (default is 2, diploid). So some of the sites have enough coverage to be called heterozygous, when really they should only be \"homozygous\" alternate.\n\n\n::: {.cell}\n\n:::\n\n\nLet's filter for variants that track with the tub phenotype.\n\n\n::: {.cell}\n\n:::\n\n\nThat's an excitingly small number! How else might we winnow these down? Hint: let's filter for high confidence calls.\n\n\n::: {.cell}\n\n:::\n\n\nWelp. That didn't help much, and we don't have many more ways with this file to winnow down the number further with the existing data\n\n## Variant Annotation\n\n**VARIANT ANNOTATION TO THE RESCUE**.\n\nRemember from my lecture that one key step of variant identification is **variant annotation**.\n\nThis involves taking an initial VCF file and annotating each variant and annotating it with data from external sources.\n\n**Question**: What are some things you might want to know about each variant?\n\nThe variant annotation step is done using the [snpEff](https://pcingola.github.io/SnpEff/) software, which takes the unannotated VCF file and a set of external annotations and creates a new, annotated VCF.\n\nThat new file is in `data/combined.annotated.vcf.gz`.\n\nLet's inspect the annotated VCF. How many variants are in the annotated VCF file? How many are in the unannotated file?\n\n\n::: {.cell}\n\n:::\n\n\nLet's find some variants that impact coding regions specifically.\n\n\n::: {.cell}\n\n:::\n\n\nSuch annotations include whether it's coding or non-coding, what impact it might have on an open reading frame, and even information about the predicted **impact** of specific mutations (LOW, MODERATE, HIGH impacts).\n\nHow does the software decide between LOW, MODERATE, and HIGH impacts? This is, in part, pre-calculated in the form of the [BLOSUM matrix](https://en.wikipedia.org/wiki/BLOSUM), which quantifies the log-likelihood of substitutions between resides in a multiple sequence alignments.\n\n**Question:** What drives the low likelihood of substitution between e.g., tryptophan (W) and aspartate (D)? Perhaps looking at amino acid side chain chemistries might help.\n\n\n\n\n::: {.cell}\n\n:::\n\n\n**YES!** Now that is a small number of variants. What are they?\n\n\n::: {.cell}\n\n:::\n\n\nBut that's sort of ugly. Can we clean it up? Let's inspect the contents of the [`ANN` field](https://pcingola.github.io/SnpEff/SnpEff_manual.html).\n\nTry to print:\n\n1.  the chromosome\n2.  the position\n3.  fields 2, 3, 4, 12, and 13 of the first ANN field (these are joined by commas)\n\n\n::: {.cell}\n\n:::\n\n\n## Variant interpretation\n\nLet's try to interpret the impact of this variant.\n\n1.  What's the impact of the variant on the open reading frame?\n\n2.  Where does this mutation lie with respect to annotated protein domains? \\[Use yeastgenome.org\\]\n\n3.  What's the function of this gene? Has it been linked to tubulin function? \\[Use pubmed.com\\]\n\n## A thought experiment to compare the utility of Illumina and ONT\n\nImagine you have a locus structured like this:\n\n    ----A--B----Alu---<<<<----Alu----C--D------\n\nwhere A, B, C, D are genes, the `<<<<` is a directional promoter, and the Alu elements are representative repetitive elements.\n\nRecombination between the Alu elements could sometimes give you this:\n\n    ----A--B----Alu--->>>>----Alu----C--D------\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}