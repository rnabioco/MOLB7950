{
  "hash": "108282bf5f78f732b6093160e25b5631",
  "result": {
    "markdown": "---\ntitle: \"Stats Class 02\"\nauthor: \"Srinivas Ramachandran\"\ndate: \"9/13/2022\"\noutput:\n  pdf_document: default\n  html_document: default\n---\n\n\n\n\n## Class Objectives\n\n1.  Understand how to determine if two samples come from different\n    distributions\n    a.  Using theoretical distributions\n    b.  Using resampling/bootstrap\n    c.  Using non-parametric tests\n2.  Learn how to determine if overlap of two categories is significant\n\n## Continuing from last class\n\nLet us start by reading in the dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read dataset\ndata <- read.csv(file = \"data/cell_dimensions.tsv\", sep = \"\\t\", stringsAsFactors = T)\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Cell_Rg Cell_Len   Cell_Type\n1 2.441927 4.143111 Fibroblasts\n2 2.832714 6.648487 Fibroblasts\n3 3.085169 7.822642 Fibroblasts\n4 3.243857 7.997854 Fibroblasts\n5 3.359737 7.448261 Fibroblasts\n6 3.434748 7.800078 Fibroblasts\n```\n:::\n:::\n\n\nWe generated observed and theoretical distributions of Rg. First muscle:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get muscle Rg as a vector:\nmuscle_rg <- data[data$Cell_Type == \"Muscle\", ]$Cell_Rg\n# generate histogram\nmuscle_rg_hist <- hist(muscle_rg, breaks = 30, plot = F)\n# Use seq to create a range of numbers\ncell_size_list <- seq(0, 12, 0.2)\n# Use dnorm to calculate probability at each point of the vector above\ndist_cell_size_muscle <- dnorm(cell_size_list, mean = 7, sd = 1)\nplot(muscle_rg_hist$mids, muscle_rg_hist$density, xlim = c(0, 12), ylim = c(0, 0.5))\nlines(cell_size_list, dist_cell_size_muscle, col = \"red\", xlim = c(0, 12), ylim = c(0, 0.5))\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nNext, fibroblasts:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get Fib Rg as a vector:\nfib_rg <- data[data$Cell_Type == \"Fibroblasts\", ]$Cell_Rg\n# generate histogram\nfib_rg_hist <- hist(fib_rg, breaks = 30, plot = F)\n# Use dnorm to calculate probability at each point of the cell_size_list vector\ndist_cell_size_fib <- dnorm(cell_size_list, mean = 5, sd = 1)\nplot(fib_rg_hist$mids, fib_rg_hist$density, xlim = c(0, 12), ylim = c(0, 0.5))\nlines(cell_size_list, dist_cell_size_fib, col = \"red\", xlim = c(0, 12), ylim = c(0, 0.5))\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nWe are confident that Rg is sampled from Normal distributions, so we can\ntake advantage of knowing exact details of the theoretical\ndistributions. We could work out the math using formulae, or we could\nsample the distribution to get an intuitive feel.\n\nThe question we are asking is: Is the Rg of muscle different from Rg of\nfibroblasts?\n\nWe now know that the Rg is sampled from normal distribution as follows:\n\n1.  Muscle - mean = 7, sd = 1\n2.  Fibroblasts - mean = 5, sd = 1\n\nThe advantage of having a theoretical distribution is that we can\ncalculate exact differences. We will use 10,000 points sampled from each\ndistribution to illustrate this. Let us generate 10,000 points from\nthese distributions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheoretical_fib <- rnorm(10000, mean = 5, sd = 1)\ntheoretical_muscle <- rnorm(10000, mean = 7, sd = 1)\n```\n:::\n\n\nThe difference in Rg between the two cell types would be simply:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndiff_cell_Rg <- theoretical_muscle - theoretical_fib\n```\n:::\n\n\nWhat is the distribution of the difference?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(diff_cell_Rg, breaks = 100, freq = F)\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nThe difference is also a Normal distribution!\n\nThe mean of this distribution is simply difference in mean of the\nstarting distributions: 7-5 = 2. The sd is the square root of sum of\nsquares of the sd of the starting distributions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsqrt(1^2 + 1^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.414214\n```\n:::\n:::\n\n\nLet us see if this is the case, by overlaying the theoretical normal\ndistribution over the histogram of differences:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(diff_cell_Rg, breaks = 100, freq = F, xlim = c(-3, 10))\nlines(x = seq(-3, 10, 0.1), y = dnorm(seq(-3, 10, 0.1), m = 2, sd = 1.414), lwd = 3, col = \"red\", xlim = c(-3, 10))\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe probability that muscle has larger Rg than fibroblasts is the\nprobability that the difference is \\> 0.\n\nWe can use the theoritical distribution to figure this out:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(0, mean = 2, sd = 1.414, lower.tail = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9213817\n```\n:::\n:::\n\n\nSo 92% of muscle cells will have bigger Rg than fibroblasts.\n\nNow, here again are the theeoretical distributions of the two cell\ntypes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(cell_size_list, dist_cell_size_muscle, col = \"red\", xlim = c(0, 12), ylim = c(0, 0.5), type = \"l\")\nlines(cell_size_list, dist_cell_size_fib, col = \"blue\", xlim = c(0, 12), ylim = c(0, 0.5))\nabline(v = 7, col = \"red\")\nabline(v = 5, col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nTo ask if muscle has significantly higher Rg, you could ask, what is the\nprobability of seeing an Rg in fibroblasts that this higher than mean Rg\nof muscle:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(7, mean = 5, sd = 1, lower.tail = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.02275013\n```\n:::\n:::\n\n\n2.2% of fibroblasts have Rg greater than or equal to the mean Rg of\nmuscle.\n\n(Is this the p-value?)\n\nBelow we will go through two methods to determine the statistical\nsignificance, or p-value of this comparison.\n\n## Bootstrapping\n\nTo get statistical significance, we ask: \"what is the probability of the\nobserved measure occuring in a null distribution?\"\n\nWe could either use a theoretical null distribution or create our own\nusing existing data.\n\nWhat if we didn't know the underlying distribution of the data or we\ndidn't care? Biological systems are complex and many times, the standard\ntheoretical distributions will not capture the observed distribution.\n\nWith increasing number of data points and increasing computing power, we\ndon't need to rely on theoretical distributions.\n\nWe can create our own multiverse (a.k.a the null distribution) with\nresampling/bootstrapping.\n\nHere are the steps involved in bootstrapping:\n\n1.  We will aggregate our observations into a new vector. This is the\n    starting point of creating our multiverse.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_obs <- c(muscle_rg, fib_rg)\n```\n:::\n\n\n2.  When we sample 100 observations from \"all_obs\" randomly, we create a\n    new Rg dataset sampled from the combined data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp_muscle_rg <- sample(all_obs, 100, replace = T)\ntmp_fib_rg <- sample(all_obs, 100, replace = T)\n```\n:::\n\n\nWe could do this without replacement too:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nidx_b <- sample(1:200, 100)\nidx_a <- setdiff(1:200, idx_b)\ntmp_muscle_rg <- all_obs[idx_a]\ntmp_fib_rg <- all_obs[idx_b]\n```\n:::\n\n\n3.  We then calculate the difference in mean of the two sampled\n    datasets. Here, we just performed an experiment where we sampled two\n    sets of Rg from a single distribution and calculated the differences\n    in mean between the two sets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp_diff <- mean(tmp_muscle_rg) - mean(tmp_fib_rg)\ntmp_diff\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1915003\n```\n:::\n:::\n\n\n4.  We repeat this many times (here let us do 1000 repetitions) to get\n    the null distribution of the differences in mean. The null\n    distribution assumes that the Rg for muscle and fibroblasts were\n    drawn from the same distribution:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# initialize a vector with 0s\nbs_mean_diff <- rep(0, 1000)\nfor (i in 1:1000) {\n  tmp_muscle_rg <- sample(all_obs, 100, replace = T)\n  tmp_fib_rg <- sample(all_obs, 100, replace = T)\n  bs_mean_diff[i] <- mean(tmp_muscle_rg) - mean(tmp_fib_rg)\n  # if you want to sample without replacement:\n  # idx_b <- sample(1:200,100)\n  # idx_a <- setdiff(1:200,idx_b)\n  # bs_mean_diff[i] = mean(all_obs[idx_a]) - mean(all_obs[idx_b])\n}\n```\n:::\n\n\nLet us see the distribution of the mean difference of random sampling of\nRg with the observed difference in red:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(bs_mean_diff, freq = F, xlim = c(-3, 3))\nabline(v = mean(muscle_rg) - mean(fib_rg), col = \"red\", lwd = 3, xlim = c(-3, 3))\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nThe observed difference is way higher than anything we saw in 1000\nsamples from the comobined Rg's.\n\nHow often do we see a mean difference in sampling that is higher than\nobserved?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(bs_mean_diff > (mean(muscle_rg) - mean(fib_rg)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nNever! So the difference in mean Rg we observe between muscle and\nfibroblasts is highly statistically significant. In other words, p=0\n\nBootstrapping requires no assumptions and can be applied to any dataset\nsuccesfully to determine if the same measure from two samples are\nsignificantly different.\n\nLet us do the same compaarison between fibroblasts and neurons:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nneuron_rg <- data[data$Cell_Type == \"Neuron\", ]$Cell_Rg\nall_obs <- c(neuron_rg, fib_rg)\nbs_mean_diff <- rep(0, 10000)\nfor (i in 1:10000) {\n  # tmp_neuron_rg <- sample(all_obs,100,replace = T)\n  # tmp_fib_rg <- sample(all_obs,100,replace = T)\n  # bs_mean_diff[i] = mean(tmp_neuron_rg) - mean(tmp_fib_rg)\n  idx_b <- sample(1:200, 100)\n  idx_a <- setdiff(1:200, idx_b)\n  bs_mean_diff[i] <- mean(all_obs[idx_a]) - mean(all_obs[idx_b])\n}\nhist(bs_mean_diff, freq = F, xlim = c(-1, 1))\nabline(v = mean(neuron_rg) - mean(fib_rg), col = \"red\", lwd = 3, xlim = c(-1, 1))\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mean(neuron_rg)-mean(fib_rg)\nmean(bs_mean_diff < (mean(neuron_rg) - mean(fib_rg)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0821\n```\n:::\n:::\n\n\nHere, the probability of the difference in mean observed in the null\ndistribution is 0.0824, higher than accepted level of significance\n(0.05).\n\n## Non-parametric tests\n\nAnother way to ask if the two samples are drawn from different\ndistributions is to use non parametric statistical tests that have\ninbuilt null distributions. The two that will be useful in a wide range\nof scenarios are Kolmogrov Smirnov test and Wilcoxon test, both of which\nare easy to implement in R.\n\nThe \"p.value\" variable gives the probability that the two samples were\ndrawn from the same underlying distribution. Hence, if p.value is less\nthan 0.05 (or a more stringent cutoff), it means the two samples are\nsignificantly different.\n\nKS test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nks.test(muscle_rg, fib_rg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAsymptotic two-sample Kolmogorov-Smirnov test\n\ndata:  muscle_rg and fib_rg\nD = 0.7, p-value < 2.2e-16\nalternative hypothesis: two-sided\n```\n:::\n\n```{.r .cell-code}\nks.test(neuron_rg, fib_rg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tAsymptotic two-sample Kolmogorov-Smirnov test\n\ndata:  neuron_rg and fib_rg\nD = 0.1, p-value = 0.6994\nalternative hypothesis: two-sided\n```\n:::\n:::\n\n\nWilcoxon test:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwilcox.test(muscle_rg, fib_rg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon rank sum test with continuity correction\n\ndata:  muscle_rg and fib_rg\nW = 9227, p-value < 2.2e-16\nalternative hypothesis: true location shift is not equal to 0\n```\n:::\n\n```{.r .cell-code}\nwilcox.test(neuron_rg, fib_rg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon rank sum test with continuity correction\n\ndata:  neuron_rg and fib_rg\nW = 4444, p-value = 0.1747\nalternative hypothesis: true location shift is not equal to 0\n```\n:::\n:::\n\n\n## Overlaps\n\nWe come across the question of overlaps quite a bit in biological\ndatasets.\n\nA typical question would be: \"Does my list of upregulated genes overlap\nwith \\[my favorite\\] category of genes?\"\n\n(Or the dreaded Reviewer comment \"You should do a GO analysis\" which\nmeans you have to add a supplementary figure no one cares about.)\n\nLet us take an experiment where you measured change in gene expression\nand categorized each gene as either \"Upregulaated\" or \"Not_Upregulated\".\n\nYou hypothesize that your intervention affects cell cycle genes, so you\nget a list of cell cycle genes from a database and categorize each gene\nin your gene list as either cell cycle gene or not.\n\nIf the two categories have nothing to do with each other, then they\nco-occur just by chance. They would be \"independent\" of each other and\nwe can calculate the joint probability for such a scenario as follows:\n\nIf Cell_Cycle and Upregulation are independent:\n\nP(Cell_Cycle $\\bigcap$ Upregulation) = P(Cell_Cycle)\\*P(Upregulation)\n\nWe now have an observed probability of intetrsection from your\nexperiment. So we can determine the ratio of observed over expected:\n\nP(Cell_Cycle $\\bigcap$ Upregulation) / ( P(Cell_Cycle)\\*P(Upregulation)\n)\n\nMore the ratio greater than 1, more significant the intersection between\nthe two categories.\n\nLet us look at such an experiment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap_dat <- read.csv(file = \"data/Gene_Association.csv\", sep = \",\")\nhead(overlap_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  X...Gene Cell_Cycle_Gene  Exp_Change\n1   Gene_1      Cell_Cycle Upregulated\n2   Gene_2      Cell_Cycle Upregulated\n3   Gene_3      Cell_Cycle Upregulated\n4   Gene_4      Cell_Cycle Upregulated\n5   Gene_5      Cell_Cycle Upregulated\n6   Gene_6      Cell_Cycle Upregulated\n```\n:::\n:::\n\n\nLet us calculate individual probabilities and joint probability:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nct_total <- nrow(overlap_dat)\nct_cell_cycle <- nrow(overlap_dat[overlap_dat$Cell_Cycle_Gene == \"Cell_Cycle\", ])\n\np_cell_cycle <- ct_cell_cycle / ct_total\n\nct_upreg <- nrow(overlap_dat[overlap_dat$Exp_Change == \"Upregulated\", ])\n\np_upreg <- ct_upreg / ct_total\n\nct_both <- nrow(overlap_dat[overlap_dat$Cell_Cycle_Gene == \"Cell_Cycle\" &\n  overlap_dat$Exp_Change == \"Upregulated\", ])\np_joint <- ct_both / ct_total\n\nnoquote(paste0(\"p_cell_cycle \", p_cell_cycle))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] p_cell_cycle 0.15\n```\n:::\n\n```{.r .cell-code}\nnoquote(paste0(\"p_upreg \", p_upreg))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] p_upreg 0.19\n```\n:::\n\n```{.r .cell-code}\nnoquote(paste0(\"p_joint \", p_joint))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] p_joint 0.11\n```\n:::\n\n```{.r .cell-code}\nexcess <- p_joint / (p_cell_cycle * p_upreg)\nnoquote(paste0(\"Observed/Expected = \", excess))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] Observed/Expected = 3.85964912280702\n```\n:::\n:::\n\n\nIs this statistically significant?\n\nWe will use the Fisher exact test\\* to get the significance of this\nobservation, or what is the probability of observing this overlap from\ntwo randomly distributed variables.\n\n\\*(chi squared test and hypergeometric test can also be used)\n\nFirst we will generate a contingency table:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc_table <- table(overlap_dat$Cell_Cycle_Gene, overlap_dat$Exp_Change)\nc_table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                \n                 Not_Upregulated Upregulated\n  Cell_Cycle                   4          11\n  Not_Cell_Cycle              77           8\n```\n:::\n:::\n\n\nYou can see that off diagonal seems enriched already.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfisher.test(c_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tFisher's Exact Test for Count Data\n\ndata:  c_table\np-value = 5.137e-07\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n 0.007467239 0.172362221\nsample estimates:\nodds ratio \n0.04022862 \n```\n:::\n:::\n\n\nThe overlap is highly significant.\n\n#### Using bootstrap\n\nWe can estimate significance alternatively using bootstrapping:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# make a copy of the overlap_dat dataframe so we can shuffle\n# the cell_cycle column each repetition of the bootstrap.\n\ntemp_overlap_df <- overlap_dat\n\n# initialize vector that will contain number of genes that\n# have both a cell cycle category and are upregulated\n\noverlap_ct <- rep(0, 1000)\nfor (i in 1:1000) {\n  # shuffle Cell_Cycle_Gene column\n  temp_overlap_df$Cell_Cycle_Gene <- sample(overlap_dat$Cell_Cycle_Gene, nrow(overlap_dat))\n  # count overlap\n  overlap_ct[i] <- nrow(temp_overlap_df[temp_overlap_df$Cell_Cycle_Gene == \"Cell_Cycle\" &\n    temp_overlap_df$Exp_Change == \"Upregulated\", ])\n}\n```\n:::\n\n\nWe have generated a distribution of number of genes that would have\noverlapping cell cycle category and upregulation category by chance. Now\nlet us compare the distribution with what we observe:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(overlap_ct, freq = F, xlim = c(0, 12), breaks = 10)\n\nabline(v = ct_both, col = \"red\", lwd = 3, xlim = c(0, 12))\n```\n\n::: {.cell-output-display}\n![](stats-class-02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nAnd the p-value from bootstrapping:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(overlap_ct > ct_both)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\nSo the bootstrap p-value is 0.\n",
    "supporting": [
      "stats-class-02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}