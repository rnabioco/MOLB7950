{
  "hash": "6cfdc02577d478b9f3209708437fadb9",
  "result": {
    "markdown": "---\ntitle: \"R Bootcamp - Day 7\"\nsubtitle: \"odds & ends\"\nauthor: \"Jay Hesselberth\"\n---\n\n\n\n\n## Class 7 outline\n\n* Useful dplyr verbs (Exercises XXX)\n* Combining tables (Exercises XXX)\n\n## Combining tables by *variables* (i.e., columns)\n\n  - `bind_cols()`\n  - `left_join()`\n  - `right_join()`\n  - `inner_join()`\n  - `full_join()`\n \n## Combining tables by *cases* (i.e., rows)\n\n  - `bind_rows()`\n  - `intersect()`\n  - `setdiff()`\n  - `union()`\n\n## dplyr cheatsheet\n\nLook at \"combine variables\" and \"combine cases\" at the top.\n\n![](../img/dplyr/combining-tables.png){fig-align=\"center\"}\n\n## mutating joins - visualized\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n![](../img/tidyexplain/left-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n![](../img/tidyexplain/right-join.gif)\n:::\n::::\n\n::: aside\n[tidyexplain](https://github.com/gadenbuie/tidyexplain) from @gadenbuie \n:::\n\n## Joining tables by a variable - Exercise 1\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  left_join(band_instruments)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 Mick  Stones  <NA>  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  right_join(band_instruments)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n3 Keith <NA>    guitar\n```\n:::\n:::\n\n\n## filtering joins - visualized\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n![](../img/tidyexplain/inner-join.gif)\n:::\n\n::: {.column width=\"50%\"}\n![](../img/tidyexplain/full-join.gif)\n:::\n::::\n\n::: aside\n[tidyexplain](https://github.com/gadenbuie/tidyexplain) from @gadenbuie \n:::\n\n## Joining tables by a variable - Exercise 2\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  inner_join(band_instruments)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 x 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  full_join(band_instruments)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 Mick  Stones  <NA>  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith <NA>    guitar\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nband_members |>\n  full_join(\n    band_instruments2,\n    by = c(\"name\" = \"artist\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 Mick  Stones  <NA>  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith <NA>    guitar\n```\n:::\n:::\n\n\n## Other dplyr verbs\n\nThere are many other dplyr verbs.\n\nWe've used `rename`, `count`, `add_row`, `add_column`,\n`distinct`, `sample_n`, `sample_frac`, `slice`, `pull`\n\nCheck out the [dplyr cheatsheet]() to learn more! \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}