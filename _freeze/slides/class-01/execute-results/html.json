{
  "hash": "962dc58d51b23934ca137b34cb0574d7",
  "result": {
    "markdown": "---\ntitle: \"R Bootcamp - Day 1\"\nauthor: \"Jay Hesselberth\"\ndate: last-modified\n---\n\n\n\n## Class introduction\n\n* Instructors (me, Neel, Kent)\n* TAs (Kathryn and Brandon)\n* Typical day\n  - Slides and exercises\n  \n## Learning Objectives for the R Bootcamp\n\n- Learn the fundamentals of R programming (*class 1*)\n- Become familiar with \"tidyverse\" suite of packages\n  - tidyr: \"Tidy\" a messy dataset (*class 2*)\n  - dplyr: Transform data to derive new information (*class 3*)\n  - ggplot2: Visualize and communicate results (*classes 4 and 5*)\n- Practice reproducible analysis using Quarto/Rmarkdown (Rigor & Reproducibility) (*classes 1-7*)\n\n## Today's class outline - *class 1*\n\n- Review R basics\n  - R vs Rstudio (Exercises #1-2)\n  - Functions & Arguments (Exercises #3-4)\n  - Data types (Exercise #5)\n  - Data structures (Exercises #6-7)\n  - R Packages (Exercise #8)\n- Review Rmarkdown (Exercise #9)\n- Rstudio cheatsheets (Exercise #10)\n\n## R vs Rstudio - Exercise 1\n\n- Look at Rstudio panels one at a time.\n- Environment, History, Console, Files, Plots, Packages, Help, etc.\n\n## R as a calculator - Exercise 2\n\n- R can function like an advanced calculator\n\n---\n\nTry simple math.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# This is a comment line\n# Note the order of operations (PEMDAS).\n2 + 3 * 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17\n```\n:::\n\n```{.r .cell-code}\n# value -f 3-7\n3 - 7\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -4\n```\n:::\n\n```{.r .cell-code}\n# division\n3 / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.5\n```\n:::\n\n```{.r .cell-code}\n# 5 raised to the power of 2\n5^2 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 25\n```\n:::\n:::\n\n\n---\n\nAssign a numeric value to an object\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# creat `num` object\nnum <- 5^2 \nnum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 25\n```\n:::\n:::\n\n\n## Functions and arguments - Exercise 3\n\n* Functions are fundamental building blocks of R\n* Most functions take one or more arguments and transform an input object in a specific way. \n* Use tab-completion!\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n?log\nlog(4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.386294\n```\n:::\n\n```{.r .cell-code}\nlog(4, base = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n## Writing a simple function - Exercise 4\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\naddtwo <- function(x) {\n  num <- x + 2\n  return(num)\n}\n\naddtwo(4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n:::\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nf <- function(x, y) {\n  z <- 3 * x + 4 * y\n  return(z)\n}\n\nf(2, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 18\n```\n:::\n:::\n\n\n## Data types\n\n* There are many data types in R. \n* For this class, the most commonly used ones are **numeric**, **character**, and **logical**. \n* All these data types can be used to create vectors natively.\n\n## Data types - Exercise 5\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\ntypeof(4) # numeric data time\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"double\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(\"jay\") # character data type\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(TRUE) # logical data type\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"logical\"\n```\n:::\n\n```{.r .cell-code}\ntypeof(as.character(TRUE)) # coercing one data type to another\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n\n## Data structures\n\n* R has multiple data structures. \n* Most of the time you will deal with tabular data sets, you will manipulate them, take sub-sections of them. \n* It is essential to know what are the common data structures in R and how they can be used. \n* R deals with named data structures, this means you can give names to data structures and manipulate or operate on them using those names.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../img/data-structures.png){width=100%}\n:::\n:::\n\n\n\ndata.frame -> tibble\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\ntypeof(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n\n```{.r .cell-code}\niris\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n```\n:::\n\n```{.r .cell-code}\niris_tbl <- as_tibble(iris)\ntypeof(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"list\"\n```\n:::\n\n```{.r .cell-code}\niris_tbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 x 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          5.1         3.5          1.4         0.2 setosa \n 2          4.9         3            1.4         0.2 setosa \n 3          4.7         3.2          1.3         0.2 setosa \n 4          4.6         3.1          1.5         0.2 setosa \n 5          5           3.6          1.4         0.2 setosa \n 6          5.4         3.9          1.7         0.4 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          5           3.4          1.5         0.2 setosa \n 9          4.4         2.9          1.4         0.2 setosa \n10          4.9         3.1          1.5         0.1 setosa \n# i 140 more rows\n```\n:::\n:::\n\n\n## Vectors - Exercise 6\n\n- Vectors are one of the core R data structures. \n- It is basically a list of elements of the same type (numeric,character or logical). \n- Later you will see that every column of a table will be represented as a vector. \n- R handles vectors easily and intuitively. \n- The operations on vectors will propagate to all the elements of the vectors.\n\n---\n\nCreate the following vectors.\n\n- `<-` and `=` are assignment operators. By convention, R programmers use `<-`\n- The `c` function combines values together.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nx <- c(1, 3, 2, 10, 5)\n\ny <- 1:5 \ny + 2 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3 4 5 6 7\n```\n:::\n\n```{.r .cell-code}\n2 * y \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  2  4  6  8 10\n```\n:::\n\n```{.r .cell-code}\ny^2 \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1  4  9 16 25\n```\n:::\n\n```{.r .cell-code}\n2^y \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  2  4  8 16 32\n```\n:::\n\n```{.r .cell-code}\n# `y` has not changed!\ny \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5\n```\n:::\n\n```{.r .cell-code}\n# this will update the value of `y`\ny <- y * 2 \ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  2  4  6  8 10\n```\n:::\n:::\n\n\n## Data frames\n\n- A data frame is more general than a matrix, in that different columns can have different modes (numeric, character, factor, etc.). \n- A data frame can be constructed by data.frame() function, and a tibble using the `tibble()` function.\n- For example, we illustrate how to construct a data frame from genomic intervals or coordinates.\n\n## Tibbles\n\n* A __tibble__, or `tbl_df`, is a modern reimagining of the data.frame, keeping what time has proven to be effective, and throwing out what is not. \n* Tibbles are data.frames that are lazy and surly: they do less (i.e. they don't change variable names or types, and don't do partial matching) and complain more (e.g. when a variable does not exist). \n* This forces you to confront problems earlier, typically leading to cleaner, more expressive code. Tibbles also have an enhanced `print()` method which makes them easier to use with large datasets containing complex objects.\n\n* `tibble()` does much less than `data.frame()`: \n\n  - it never changes the type of the inputs \n  - it never changes the names of variables\n  - it never creates `row.names()`\n\n## Data frames & tibbles - Exercise 7\n\n---\n\nCreate a data.frame and tibble.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# N.B.: these vectors are all the same length!\nchr <- c(\"chr1\", \"chr1\", \"chr2\", \"chr2\")\nstrand <- c(\"-\", \"-\", \"+\", \"+\")\nstart <- c(200, 4000, 100, 400)\nend <- c(250, 410, 200, 450)\n\ndf <- data.frame(chr, strand, start, end) # creating dataframe\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   chr strand start end\n1 chr1      -   200 250\n2 chr1      -  4000 410\n3 chr2      +   100 200\n4 chr2      +   400 450\n```\n:::\n\n```{.r .cell-code}\ntbl <- tibble(chr, strand, start, end) # creating a tibble\ntbl\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 x 4\n  chr   strand start   end\n  <chr> <chr>  <dbl> <dbl>\n1 chr1  -        200   250\n2 chr1  -       4000   410\n3 chr2  +        100   200\n4 chr2  +        400   450\n```\n:::\n:::\n\n\n## R packages - Exercise 8\n\n* An R package is a collection of code, data, documentation, and tests that is easily sharable\n* A package often has a collection of custom functions that enable you to carry out a workflow. eg. DESeq for RNA-seq analysis\n* The most popular places to get R packages from are CRAN, Bioconductor, and Github. \n* Once a package is installed, one still has to \"load\" them into the environment using a `library(<package>)` call. \n\nLet's do the following to explore R packages:\n\n* Look at the \"Environment\" panel in Rstudio\n* Explore Global Environment\n* Explore the contents of a package\n\n## Quarto Exercise - Exercise 9\n\n* [Quarto](https://quarto.org) is a fully reproducible authoring framework to create, collaborate, and communicate your work. \n* Quarto lets you render Rmarkdown documents (in addition to Jupyter notebooks, etc.)\n* Quarto supports a number of output formats including pdfs, word documents, slide shows, html, etc. \n* A Quarto document is a plain text file with the extension `.qmd` and contains the following basic components: \n\n  - An (optional) YAML header surrounded by `---`.\n  - Chunks of R code surrounded by ```.\n  - Plain text structured with [markdown](https://www.markdownguide.org/basic-syntax) formatting like `#` heading and `*italics*`.\n\n---\n\nLet's do the following to explore Rmarkdown documents:\n\n* Create a new Quarto document\n* Render the document to see the output\n\n## Coding best practices\n\n> \"Good coding style is like correct punctuation: you can manage without it, butitsuremakesthingseasiertoread.\" \n> --- Hadley Wickham\n\n## Use `here` in RStudio projects\n\nThe [here](https://here.r-lib.org) library enables easy file referencing in project-oriented workflows.\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nlibrary(here)\npath <- here('slides/class-01.qmd')\npath\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"/Users/jayhesselberth/devel/rnabioco/molb-7950/slides/class-01.qmd\"\n```\n:::\n:::\n\n\n## Problem sets and submission\n\n",
    "supporting": [
      "class-01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}