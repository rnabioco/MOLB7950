{
  "hash": "56eb9fad8904d3e28130da2e56a01846",
  "result": {
    "markdown": "---\ntitle: \"RBP-RNA part 2\"\nauthor: \"Neelanjan Mukherjee\"\n---\n\n\n\n\n\n\n## mature mRNA regulatory decisions {.smaller}\n\nJust a review of how RBPs control the fate of mRNAs in  the cytoplasm. \n\n![Mayya and Duchaine](https://www.frontiersin.org/files/Articles/423825/fgene-10-00006-HTML-r1/image_m/fgene-10-00006-g001.jpg)\n\n## HuR and ARE decay {.smaller}\n\nRemember our analysis of HuR PAR-CLIP data from last class. The model we were testing is that HuR binds to AU-rich elements (ARE) in 3â€™ UTRs of mRNAs to promote mRNA stability.\n\n![](/img/block-rna/hur_mechanism.png)\nModel predictions:  \n\n1. HuR binds to the 3' UTR *and introns*.\n2. HuR binds to AU-rich sequences (AUUUA) *and U-rich sequences*.  \n3. **HuR binding promotes target RNA stabilization (and binding by the other RBPs to the ARE promotes destabilization).**  \n\n\n## Set up annotation database {.smaller}\n\n\n::: {.cell}\n\n```{.r .cell-code}\npossible_annotations <- builtin_annotations()\n\n# grep to keep those containing \"hg19\"\nhg19_annots <- grep(\"hg19_genes\", possible_annotations, value = T)\n\n\n# let's keep 5' utr, cds, intron, 3' utr and intergenic\nmy_hg19_annots <- hg19_annots[c(3,4,7,10,11)]\n\n# build the annotation database\nannotations <- build_annotations(genome = 'hg19', annotations = my_hg19_annots)\n```\n:::\n\n\n\n\n## Annotate PAR-CLIP data {.smaller}  \n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nhur_regions <- read_regions(con = \"https://raw.githubusercontent.com/BIMSBbioinfo/RCAS_meta-analysis/master/rbp-binding-sites/SRR248532.clusters.bed\",\n                     genome = 'hg19', format = 'bed')\n\n# let's annotate\nhur_annot <- annotate_regions(\n    regions = hur_regions,\n    annotations = annotations,\n    ignore.strand = FALSE,\n    quiet = FALSE) %>%\n  data.frame()\n\n# keep only columns we need\nmyInfo <- c(\"seqnames\",\"start\",\"end\",\"width\",\"strand\",\"annot.symbol\",\"annot.type\")\n\nhur_annot <- hur_annot[,myInfo] %>%\n  unique() \n\n# getting rid of the \"hg19_genes_\" string to simplify `annot.type`\nhur_annot$annot.type <- gsub(\"hg19_genes_\",\"\",hur_annot$annot.type)\n\ntable(hur_annot$annot.type)\n```\n:::\n\n\n\n## Summarize PAR-CLIP data to gene level {.smaller}  \n\nNow we want to get the following info:\n1. The # of HuR binding sites per gene.\n2. The # of HuR binding sites per region per gene.\n\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# count the # sites per gene and annotation cat\nhur_gene_clip <- hur_annot %>%\n  filter(annot.type!=\"??\") %>%\n  group_by(??, ??) %>%\n  dplyr::??() %>%\n  pivot_wider(names_from = annot.type, values_from = n)\n\n# make NA -> 0\nhur_gene_clip <- hur_gene_clip %>% mutate_if(is.numeric , replace_na, replace = 0)\n\n# new column w/total # sites\nhur_gene_clip$total <- \n\n# remove symbols that are NA\nhur_gene_clip <- hur_gene_clip %>%\n  filter(annot.symbol != \"NA\")\n\n# rename cols\ncolnames(hur_gene_clip)[1] <- \"Symbol\"\ncolnames(hur_gene_clip)[3:4] <- c(\"utr3\",\"utr5\")\n```\n:::\n\n\n\n## Binding sites per gene {.smaller} \n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\nhur_gene_clip_long  <- hur_gene_clip %>% \n  pivot_longer(-??) \n\ncolnames(hur_gene_clip_long)  <-  c(\"symbol\",\"region\",\"sites\")\n\n# histogram of sites/mrna colored by region \nggplot(hur_gene_clip_long %>%\n         filter(region != \"total\"),\n       aes(x=??, fill=??)) +\n  geom_??() +\n  scale_x_log10() +\n  theme_cowplot()\n```\n:::\n\n\n## Explore intron vs 3' UTR sites {.smaller} \n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# how many genes have both intron and/or 3' UTR sites\nsite_combo <- hur_gene_clip[,2:5] %>%\n  mutate(\n    type = case_when(\n      introns ?? & utr3 ??     ~ \"intron_utr3\",\n      introns ?? & utr3 ?? ~ \"intron\",\n      introns ??  & utr3 ?? ~ \"utr3\",\n      TRUE ~ \"other\")\n    ) \n\nggplot(site_combo,\n       aes(x=??,\n           fill=??)) +\n  geom_bar(stat = \"count\") +\n  theme_cowplot()\n```\n:::\n\n\n**HuR binds to both introns and 3' UTRs.**  \n\n**Genes more often have intronic and 3' UTR binding sites than either alone.**\n\n## Load HuR knockdown RNA-seq data {.smaller} \n\n1. primary (unspliced precursor) transcripts in `siGFP` treated cells.\n2. mature transcripts in `siGFP` treated cells.\n3. primary (unspliced precursor) transcripts in `siHuR` treated cells.\n4. mature transcripts in `siHuR` treated cells.\n\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# load object called HuR.R\n\n# HuR siRNA RNAseq\n??(here(\"data/block-rna/HuR.R\"))\n\n\n# gene information\ngene_info <- read_csv(here(\"data/block-rna/geneInfo.csv.zip\"))\n\nHuR$Gene <- rownames(HuR) # new column gene ids\n\nHuR <- left_join(HuR, gene_info[c(2,11)], by=\"Gene\") # Symbol\n\n# Filter for expression\nhur_filt_rnaseq <- HuR %>%\n  dplyr::filter(rowMeans(HuR[,1:4]) > 1) %>%\n  dplyr::select(-Gene)\n```\n:::\n\n\n## integrate siRNA and clip-seq data {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n#join kd and clip data\nkd_clip <- left_join(??,\n                     ??, \n                     by = \"Symbol\") \n\n# convert all NA to 0\nkd_clip <- kd_clip %>%\n  mutate_if(is.numeric,\n            replace_na,\n            replace = 0)\n\n# calculate log fold changes\nkd_clip <- kd_clip %>%\n  mutate(\n    lfc_mature = log2(??) - log2(??),\n    lfc_primary= log2(??) - log2(??)\n    )\n```\n:::\n\n\n\n\n## What is the relationship between HuR binding sites and change expression? {.smaller}\n\n**Does HuR promote the stability of its mRNA targets?**  \n\n**Does the number of HuR binding influence the degree of stabilization?**  \n\n**Does the region of HuR binding influence stabilization?**  \n\n\n\n## To target or not to target? {.smaller}\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# create new column for target or not target\n\nkd_clip$target <- case_when(\n  kd_clip$total > ?? ~  \"target\",\n  TRUE ~ \"not target\") \n\n\nggplot(kd_clip,\n       aes(lfc_mature,\n           color = ??)) +\n  stat_??() +\n  xlim(-2,2) +\n  theme_cowplot() +\n  ylab(\"cumulative fraction of LFC\") +\n  ggtitle(\"HuR Target vs Not Target\") +\n  geom_hline(yintercept=.75, color=\"grey\") +\n    geom_hline(yintercept=.5, color=\"grey\") +\n    geom_hline(yintercept=.25, color=\"grey\")\n```\n:::\n\n\n## To target a little or a lot? {.smaller}\n\n**Does the number of HuR binding influence the degree of stabilization?**  \n\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# hist(kd_clip$utr3)\n# let's make bins for # of sites per  3' UTR\n\nkd_clip$utr3_bin <- cut2(\n  x = kd_clip$utr3,\n  c(0,1,2,4,8,1000)\n  )\n\n# table(kd_clip$utr3_bin)\n\n# let's make bins for UTR\nkd_clip$utr3_bin <- recode_factor(kd_clip$utr3_bin,\n               \"   0\" = \"0\",\n               \"   1\" = \"1\",\n               \"[   2,   4)\" = \"2-3\",\n               \"[   4,   8)\" = \"4-7\",\n               \"[   8,1000]\" = \"8+\"\n               )\n\n\nggplot(data = kd_clip,\n       aes(x = lfc_mature,\n           color = ??)) +\n  stat_ecdf() +\n  xlim(-2,2) +\n  theme_classic() +\n  ylab(\"cumulative fraction- LFCs\") +\n  ggtitle(\"# of HuR binding sites in 3' UTR\") +\n  geom_hline(yintercept=.75, color=\"grey\", linetype = \"dashed\") +\n  geom_hline(yintercept=.5, color=\"grey\", linetype = \"dashed\") +\n  geom_hline(yintercept=.25, color=\"grey\", linetype = \"dashed\") +\n  geom_segment(aes(x = 0, y = 0, xend = 0, yend = .5, colour = \"segment\"), color=\"black\", linetype = \"dashed\")\n```\n:::\n\n\n\n## More binding -> more stabilization? {.smaller}\n\n**TEST: Does the number of HuR binding influence the degree of stabilization?**  \n\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# keep only finite values for lfc_mature and lfc_primary\nkd_clip_targets <- kd_clip[is.finite(kd_clip$lfc_mature),]\n\n# IMPORTANT relevel indicating what everything will be compared to\nkd_clip_targets$utr3_bin <- relevel(factor(kd_clip_targets$utr3_bin), ref = \"??\")\n\n\n# calculate fit using `lm`\nfit_bins <- lm(data = kd_clip_targets,\n               formula = ?? ~ ??)\n\n# examine estimates and p-vals\ntidy(fit_bins) %>%\n  gt() \n```\n:::\n\n\n## More binding -> more stabilization? {.smaller}\n\n**TEST: Does the number of HuR binding influence the degree of stabilization?** \n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code}\n# mean lfc of mRNAs with no 3' UTR binding sites\nref_mean <- kd_clip_targets %>%\n  filter(utr3_bin == \"0\") %>%\n  pull(lfc_mature) %>%\n  mean()\n\n\n# examine estimates and color by p-vals\ntidy(fit_bins) %>%\n  ggplot(data=.,\n         aes(x=??,\n             y=??,\n             fill=??\n             )\n         ) +\n  geom_bar(stat=\"identity\") +\n  coord_flip() +\n  geom_hline(yintercept = ref_mean,\n             color = \"red\") +\n  theme_cowplot()\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}