---
title: "Chromatin accessibility I"
author: "Jay Hesselberth"
---

# DNA Accessibility

Today we will work with two datas sets in budding yeast that map genome-wide accessibility. We will go back to our old friends:

## Libraries

1. rtracklayer
1. Gviz - this is a way to generate pretty images of genome browser snapshots within Rstudio.

These tools are useful for us to look at the data directly, and are great use to you when you write papers and want to create nice plots. 

```{r}
#| label: load-libs
#| message: false
library(tidyverse)
library(cowplot)
library(here)
library(patchwork)

library(valr)
library(Gviz)
library(rtracklayer)
```

# Patterns of DNA-protein binding

## Load the data 

Today we will analyze ATAC-seq and MNase-seq datasets from budding yeast. Here are the references for the datasets:

1.  ATAC-seq - <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4617971/> (GSM1621323)
2.  MNase-seq - <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3889552/> (GSM1199785)

In case of MNase-seq, usually, DNA around 150 bp is extracted, so as to look only at nucleosome occupancy & positioning. However, the study we are analyzing today did not perform size selection. This is very important as now we can look at both TFs and nucleosomes within the MNase-seq data.

First, we will determine the fragment size distributions obtained from the two experiments. These sizes are the fingerprints of particles that were protecting the DNA inside the cells.

I have performed the alignment of paired-end reads and converted all reads into a bed file where each line of the bed file denotes a single fragment from start to end.

First, the ATAC-seq reads:

```{r}
atac_tbl <- valr::read_bed(
  here("data/block-dna/yeast_atac_chrII.bed.gz"),
) 
atac_tbl
```

Second, the MNase reads.

```{r}
mnase_tbl <- valr::read_bed(
  here("data/block-dna/yeast_mnase_chrII.bed.gz")
)
mnase_tbl
```

You might have guessed by by the file names that we are looking at chromosome II of the yeast genome.

You will see that working with a small genome is a huge advantage -- we can study the whole chromosome in this class. For *Drosophila* and human data we dealt with before, we were looking at a subsection of the chromosome.

For the MNase BED file, you see that there are only three columns: `chrom`, `start`, and `end`. Calculating fragment length is very simple:

```{r}
#| echo: true
mutate(mnase_tbl, frag_len = end - start)
```

## Length distributions of chromatin-derived DNA fragments

Let's examine the fragment length distribution. 

```{r}
#| echo: true
#| warning: false
#| output-location: column
acc_tbl <-
  bind_rows(
    mutate(mnase_tbl, type = "mnase"),
    mutate(atac_tbl, type = "atac")
  )

ggplot(
  acc_tbl,
  aes(x = end - start)
  ) +
  geom_histogram(
    # single base-pair resolution
    binwidth = 1
  ) + 
  facet_grid(
    rows = vars(type),
    scales = "free_y"
    ) +
  xlim(30, 500) +
  labs(x = "fragment length") +
  theme_cowplot()
```

### Interpreations

1.  How would you describe the two distributions? Are they similar?

2.  Can you make any biological conclusions based on the length distributions?

## Periodicity in the fragment lengths

The ATAC data seems to be periodic. How can we test that hypothesis? We can calculate the autocorrelation of the length distribution. Can someone explain what [autocorrelation](https://en.wikipedia.org/wiki/Autocorrelation) means?

We'll use the base `hist` function to calculate the densities of the above histogram. Let's write a function we can use to analyze fragment lengths.

```{r}
#| label: fun-fragment-len
#| echo: true
fragment_len_hist <- function(tbl) {
  frag_lens <- 
    mutate(
      tbl,
      frag_len = end - start
    ) |>
    filter(
      frag_len >= 30 &
        frag_len <= 500
    ) |>
    pull(frag_len)
  
  hist(
    frag_lens,
    breaks = seq(30, 500, 1),
    plot = FALSE
  )
}
```


```{r}
atac_frag_lens <- fragment_len_hist(atac_tbl)
```

The `density` slot contains a vector of densities at base-pair resolution. We will use `acf()` to calculate the autocorrelation of these values, and will store the tidied result. 

```{r}
#| echo: true
atac_acf_tbl <-
  acf(
    atac_hist$density,
    lag.max = 40,
    plot = FALSE
  ) |>
    broom::tidy()

atac_acf_tbl
```

Now let's plot the autocorrelation:

```{r}
plot_len_acf <- function(tbl, title) {
  ggplot(
    tbl,
    aes(lag, acf)
  ) +
    geom_point(size = 2) +
    geom_line() +
    theme_minimal_grid() +
    geom_vline(xintercept = c(10, 21), color = 'red') +
    labs(title = title)
}
```

```{r}
plot_atac_acf <- plot_len_acf(atac_acf_tbl, title = "ATAC ACF")
plot_atac_acf
```

So, it looks like there significant bumps in autocorrelation at 10 and 21 bp positions, indicating that ATAC length distribution is periodic.

How do we confirm these bumps are interesting? Let's calculate the acf of a negative control -- the length distribution of the MNase data.

```{r}
#| label: plot-acfs
#| echo: true
#| output-location: default
mnase_frag_lens <-
  fragment_len_hist(mnase_tbl)

mnase_acf_tbl <-
  acf(
    mnase_frag_lens$density,
    lag.max = 40,
    plot = FALSE
  ) |>
  broom::tidy()

plot_mnase_acf <- plot_len_acf(mnase_acf_tbl, title = "MNase ACF")

# patchwork plot
plot_atac_acf / plot_mnase_acf
```

We see a monotonic decrease here, which confirms that the bumps we see are distinctive features of ATAC-seq data.

## Visualize read density in genomic region {.smaller}

We will use Gviz to visualize read densities relative to a reference.

### Load tracks

First, we load the gene annotations from the [Saccharomyces Genome Databases](https://yeastgenome.org) (SGD).

```{r}
#| echo: true
#| output-location: column
sgd_genes <-
  UcscTrack(
    genome = "sacCer3",
    track = "sgdGene",
    chromosome = "chrII",
    start = 530811,
    end = 540885,
    trackType = "GeneRegionTrack",
    gene = "name",
    rstarts = "exonStarts",
    rends = "exonEnds",
    symbol = "name",
    transcript = "name",
    strand = "strand"
  )

plotTracks(sgd_genes)
```

Next, import the bigwig file containing yeast nucleosome-sized fragments (via MNase-seq) using `rtracklayer::import.bw()`. What is "GRanges"?

```{r}
#| echo: true
mnase_nuc <- import.bw(
  here("data/block-dna/yeast_mnase_134_160.bw"),
  as = "GRanges"
)
mnase_nuc
```

Next, load the GRanges object as a track for Gviz to plot:

```{r}
mnase_nuc_trk <- DataTrack(
  mnase_nuc,
  name = "MNase_nuc"
)
mnase_nuc_trk
```

Now, we can make a plot for this particular region of chrII:

```{r}
#| echo: true
#| output-location: column
plotTracks(
  c(sgd_genes,
    mnase_nuc_trk),
  from = 530811,
  to = 540885,
  chromosome = "chrII",
  transcriptAnnotation = "gene",
  shape = "arrow",
  type = "h"
)
```

That looks great! Let's load all the other data sets.

1.  Load each bigWig as a GRanges object with `rtracklayer::import.bw()`
2.  Convert each to a `Gviz::DataTrack()` for plotting

```{r}
track_info <-
  tibble(
    file_name = c(
      "yeast_mnase_134_160.bw",
      "yeast_mnase_lt50.bw",
      "yeast_atac_lt120.bw",
      "yeast_atac_gt120.bw"
    ),
    track_name = c(
      "MNase_Short", "MNase_Long",
      "ATAC_Short", "ATAC_Long"
    )
  ) |>
  mutate(
    file_path = here("data/block-dna", file_name),
    big_wig = purrr::map(
      file_path, ~ import.bw(.x, as = "GRanges")
    ),
    data_track = purrr::map2(
      big_wig, track_name, ~ DataTrack(.x, name = .y)
    )
  )
```

Now, we just have to make a list of tracks to plot and Gviz takes care of the rest.


```{r}
plotTracks(
  c(sgd_genes,
    track_info$data_track),
  from = 530811,
  to = 540885,
  chromosome = "chrII",
  transcriptAnnotation = "gene",
  shape = "arrow",
  type = "histogram"
)
```

## Interpretations

Some questions to think about as you look at the tracks:

1.  What is each data set reporting on?
2.  What can you infer about genome function based on these tracks?
3.  What are the major differences between MNase-seq and ATAC-seq based on these tracks?
