---
title: "R Bootcamp Problem Set 3"
author: "Insert your name here"
---

## Setup

Start by loading libraries you need analysis in the code chunk below.
When in doubt, start by loading the tidyverse package.

```{r, setup}

```

## Problem Set

Each problem below is worth **5 points**.

Use the data files in the `data/` directory to answer the questions.

For this problem set, you are allowed to help each other, but you are not allowed to post correct answers in slack.

**The problem set is due 12pm on Aug 313131.**

### Grading rubric

- Everything is good: 5 points
- Partially correct answers: 3-4 points
- Reasonable attempt: 2 points

## Question 1 

Use `arrange`, `filter`, and `select` on a dataframe. Do the following, in order:

1. Import the data set `data/data_transcript_exp_tidy.csv`. 
2. Sort the tibble by expression data (`count`) from highest to lowest level.
3. Filter the tibble by `count` > 100
4. Select all columns *except* for `type`

```{r, q1}

```


## Question 2 

Map the transcript ids to gene ids using a mapping file?**

Step 1: Import the dataset `id-mapping.csv` within the `data` folder using the _readr_ package
Step 2: Map the transcript ids in `data` to gene ids in `id-mapping.csv` 

Hint: Think `join` functions and check for extra extensions to ids that you may have to `separate` first. 

```{r, q2}

```


## Question 3 

How will you:

A) create a new column `log10count` that contains log10 transformed `count` values and
B) rearrange the columns in the following order: ensembl_transcript_id, ensembl_gene_id, hgnc_symbol, type, time, replicate, count, log10count.

(Note that we have dropped `extra`)

Hint: Use `mutate` and `select`

```{r, q3}

```

## Question 4 

**How will go from transcript-level counts to gene-level counts, while keeping the `time`, `replicate`, and `hgnc_symbol` information?**

Hint: Use `group_by` with multiple variables, and `summarise` the "count" values using `sum()`

```{r, q4}

```
